created: 20151013085605792
draft.of: Portfolio Mapping
draft.title: Portfolio Mapping
modified: 20151015024904536
tags: 
title: Draft of 'Portfolio Mapping'
tmap.id: 596b30a0-5d0a-464b-8a50-89f51547ef9f
type: text/vnd.tiddlywiki

As an organisation adapts products to its market, the structure, responsibilities and membership of its teams must evolve. In a traditional organisation such "reorgs" are stressful and risky. Their motivation and outcomes depend on unpredictable political forces as [[managers]] are forced to play [[zero sum games]] with their [[Individual KPI]]s to keep their bonuses. Like renovating a house, a reorg that begins with an alteration to the KPI of a single manager may have huge, long-lasting and unforeseeable knock-on effects.

As XSCALE emphasises [[Autonomy]] at squad, product and portfolio levels, metric and analytic numbers are the basis of its method of organisation. This is called [[Management By Numbers]]. 

* [[Behavior Mapping]] generates a [[Features & Themes Matrix]]
* [[Business Bingo]] tells us how much we should budget per [[Feature]] in [[Feature Points]]
* [[Release Refactoring]] says which of these [[Feature]]s will be required by a particular date.

''Therefore,''

# Take the cohort of [[Feature]]s that result from [[Release Refactoring]], and total the costs from [[Business Bingo]]. This yields the total investment in features that would be committed to the [[Release]] if we had sufficient product definition and delivery competence to complete all these features. 

# For each feature in the [[Features & Themes Matrix]], add its cost to every theme for which the feature has a tick in the box. Total these numbers per theme and call this the ''Required Resource'' for the theme. If a theme has all ticks its Required Resource will be the same as the total burn for the release, and if it has no ticks its Required Resource  will be zero.

* Now trace each theme in the matrix back to the subject matter expertise needed to cover that theme and count the number of [[Feature Points]] worth of that expertise actually available. This generates a second number - the total expertise available per theme. Call that the ''Available Resource''. In a portfolio with plenty of database architects, for example, the Available Resource in a theme "schema changes" would exceed its Required Resource. If the portfolio has too few DBAs, Required will be greater than Available.

* Themes where there's insufficient Available Resource are solution constraints that represent limits on the portfolio's ability to actually deliver the feature set planned by [[Release Refactoring]]. These constraints represent a concrete target for [[Human Resources]] to address by hiring or training. But those processes take time, so in the meanwhile the [[Portfolio Squad]] should conduct a new round of [[Release Refactoring]] that takes resource constraints per theme into account.

* Once these resource constraints have been eliminated, the least available resources are used as the seeds of an arrangement of squads. It is, however, possible that even when there's no individual resource constraint, there are cycles of theme dependency between features that would induce similar dependency cycles between squads. The simplest method to deal with this is to factor out [[Technical Feature]]s that encapsulate the cycle, and tailor a squad that specifically deals with it.

* In general it's highly desirable that each [[Portfolio]] reserves some extra resource to use as a pool to ease [[Portfolio Mapping]] constraints. This pool is best formed into an [[R&D Squad]].