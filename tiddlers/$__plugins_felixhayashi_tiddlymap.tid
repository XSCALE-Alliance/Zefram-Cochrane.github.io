author: Felix Küppers
core-version: >=5.1.5
created: 20151208053714890
dependents: $:/plugins/felixhayashi/vis
depends: $:/plugins/felixhayashi/vis
description: TiddlyMap – Map drawing and topic visualization for your wiki
list: readme license
plugin-type: plugin
released: Sun, 06 Dec 2015 14:34:45 +0100
source: https://github.com/felixhayashi/TW5-TiddlyMap
suggested: $:/plugins/felixhayashi/topstoryview
title: $:/plugins/felixhayashi/tiddlymap
type: application/json
version: 0.10.3+7164

{
    "tiddlers": {
        "$:/plugins/felixhayashi/tiddlymap/layout": {
            "title": "$:/plugins/felixhayashi/tiddlymap/layout",
            "type": "text/vnd.tiddlywiki",
            "tags": [
                "$:/tags/Stylesheet"
            ],
            "text": "/**** TiddlyWiki ***************************************************/\n/**\n * Do not allow blurred background for dialogs\n * see: https://github.com/Jermolene/TiddlyWiki5/issues/1893\n */\n.tc-page-container-wrapper.tc-modal-displayed {\n  -webkit-filter: inherit;\n  -moz-filter: inherit;\n  filter: inherit; }\n\n/**** Flash messages ***********************************************/\n.tmap-flash-message {\n  border: 1px solid lightgray;\n  padding: 5px;\n  margin: 6px 0;\n  display: block;\n  color: #333333; }\n  .tmap-flash-message svg {\n    color: inherit;\n    vertical-align: text-top;\n    width: 1em;\n    height: 1em; }\n  .tmap-flash-message.tmap-valid, .tmap-flash-message.tmap-info {\n    background: #D1EED4; }\n  .tmap-flash-message.tmap-neutral, .tmap-flash-message.tmap-warning {\n    background: #FFF6D1; }\n  .tmap-flash-message.tmap-malformed, .tmap-flash-message.tmap-invalid, .tmap-flash-message.tmap-danger {\n    background: #EED5D1; }\n\n/*******************************************************************/\n.tmap-save-canvas-preview {\n  text-align: center; }\n  .tmap-save-canvas-preview img {\n    background-color: white;\n    border: 1px solid lightgray;\n    max-width: 100%;\n    max-height: 100px; }\n\n.tmap-list-separator {\n  display: block;\n  background-color: #efefef;\n  margin: 10px 0 5px 0;\n  cursor: default;\n  border-bottom: 1px dotted gray;\n  font-weight: bold;\n  font-size: 0.8em; }\n\n.tmap-unicode-icon {\n  width: 1em;\n  display: inline-block;\n  text-align: center;\n  color: black; }\n\nhtml {\n  /*\n  body {\n    background: url(unquote('<$macrocall $name=\"makedatauri\" type={{$:/plugins/felixhayashi/tiddlymap/media/surface.png!!type}} text={{$:/plugins/felixhayashi/tiddlymap/media/surface.png}}/>'));\n  }\n  */ }\n  html .tmap-link {\n    color: #5778D8; }\n    html .tmap-link:hover {\n      color: white;\n      background: #5778D8; }\n  html .tmap-small-list, html .tmap-very-small-list {\n    overflow: auto;\n    min-height: 20px;\n    max-height: 150px;\n    display: block; }\n  html .tmap-very-small-list {\n    max-height: 70px; }\n  html .tc-tiddler-controls button.tmap-active-button svg {\n    fill: #888888; }\n  html #tmap-node-filter-dialog #tmap-filter-tips {\n    font-size: 0.8em; }\n  html #tmap-node-filter-dialog textarea {\n    height: 100px;\n    max-height: 300px;\n    overflow: auto;\n    width: 100%;\n    font-size: 11px;\n    font-family: \"Courier New\", Courier, monospace; }\n  html .tc-sidebar-scrollable .tmap-widget {\n    position: relative;\n    min-height: 350px; }\n    html .tc-sidebar-scrollable .tmap-widget.tmap-halfscreen {\n      position: absolute;\n      right: 0px;\n      top: 0;\n      left: 0px;\n      bottom: 0;\n      padding: 0px;\n      width: 100% !important;\n      border: none;\n      border-left: 1px solid lightgray;\n      height: 100% !important;\n      margin: 0;\n      background: #ececec;\n      z-index: 1000; }\n      html .tc-sidebar-scrollable .tmap-widget.tmap-halfscreen .tmap-fullscreen-button {\n        display: none; }\n\n/**** Quick connect ************************************************/\n.tmap-quick-connect {\n  font-size: 0.7em; }\n  .tmap-quick-connect p {\n    padding-left: 0;\n    padding-right: 0; }\n  .tmap-quick-connect .tc-drop-down {\n    padding: 5px;\n    width: 250px;\n    white-space: normal;\n    line-height: 1em;\n    position: absolute;\n    z-index: 1000;\n    right: 50px;\n    background: linear-gradient(45deg, #f5f5f5 0%, #ffffff 50%, #f5f5f5 100%); }\n    .tmap-quick-connect .tc-drop-down:first-child {\n      padding-top: 0;\n      margin-top: 0; }\n    .tmap-quick-connect .tc-drop-down .title {\n      border-bottom: 1px solid #D5D5D5;\n      margin: 1.5em 0 1em 0; }\n    .tmap-quick-connect .tc-drop-down select {\n      width: 80px;\n      word-wrap: initial; }\n    .tmap-quick-connect .tc-drop-down table {\n      width: 100%;\n      border: none;\n      margin-bottom: 0px; }\n      .tmap-quick-connect .tc-drop-down table td, .tmap-quick-connect .tc-drop-down table th {\n        padding: 3px 3px 3px 0;\n        vertical-align: top;\n        font-weight: normal;\n        border: none; }\n    .tmap-quick-connect .tc-drop-down .tmap-connection-table th, .tmap-quick-connect .tc-drop-down .tmap-connection-table td {\n      text-align: left;\n      padding: 1px 1px 1px 0; }\n    .tmap-quick-connect .tc-drop-down .tmap-connection-table button {\n      width: 20px;\n      padding: 0px; }\n    .tmap-quick-connect .tc-drop-down .tmap-scroll-table {\n      height: 120px;\n      overflow: auto;\n      display: block; }\n    .tmap-quick-connect .tc-drop-down hr {\n      border: 0;\n      height: 0;\n      border-top: 1px solid rgba(0, 0, 0, 0.1);\n      border-bottom: 1px solid rgba(255, 255, 255, 0.3); }\n    .tmap-quick-connect .tc-drop-down a {\n      display: inline;\n      padding: 0;\n      color: #5778d8;\n      background: transparent; }\n      .tmap-quick-connect .tc-drop-down a:hover {\n        background: transparent;\n        color: #5778d8;\n        text-decoration: underline; }\n    .tmap-quick-connect .tc-drop-down span.tmap-hide-links {\n      float: right; }\n    .tmap-quick-connect .tc-drop-down button {\n      display: inline-block;\n      padding: 0px 3px;\n      text-align: center;\n      color: #333333;\n      line-height: 1; }\n      .tmap-quick-connect .tc-drop-down button:hover {\n        color: #ffffff; }\n      .tmap-quick-connect .tc-drop-down button svg {\n        fill: inherit; }\n        .tmap-quick-connect .tc-drop-down button svg:hover {\n          fill: #ffffff; }\n\n/**** Modal related ************************************************/\n.tc-modal-wrapper {\n  z-index: 1010; }\n  .tc-modal-wrapper p:first-child {\n    margin-top: 0px; }\n  .tc-modal-wrapper p:last-child {\n    margin-bottom: 0px; }\n  .tc-modal-wrapper .tc-modal-header svg {\n    vertical-align: sub; }\n  .tc-modal-wrapper .tc-modal-header h3 {\n    line-height: 10px; }\n  .tc-modal-wrapper .tc-modal-body {\n    min-height: 250px;\n    max-height: 70vh;\n    padding-top: 0px;\n    padding-bottom: 0px;\n    overflow: auto; }\n  .tc-modal-wrapper .tc-modal-footer {\n    padding: 8px; }\n    .tc-modal-wrapper .tc-modal-footer .tmap-dialog-button {\n      font-weight: bold; }\n    .tc-modal-wrapper .tc-modal-footer .tmap-hidden-close-button {\n      display: none; }\n\n.tmap-modal-content .tc-tab-set .tc-tab-content {\n  margin-top: 5px;\n  overflow: auto;\n  height: 50vh; }\n.tmap-modal-content .tc-image-button {\n  font-size: 14px; }\n.tmap-modal-content fieldset {\n  margin: 0px; }\n  .tmap-modal-content fieldset legend {\n    font-weight: bold; }\n.tmap-modal-content ul {\n  padding-left: 30px; }\n  .tmap-modal-content ul li {\n    list-style: none; }\n\n.tmap-modal-editor .tc-tiddler-frame {\n  padding: 0px;\n  width: auto;\n  margin: 0px;\n  border: none; }\n  .tmap-modal-editor .tc-tiddler-frame .tc-tiddler-title {\n    display: none; }\n\n.tc-modal-body table {\n  margin: 6px 0;\n  border: none;\n  width: 100%; }\n  .tc-modal-body table td, .tc-modal-body table th {\n    border: 1px solid lightgray; }\n  .tc-modal-body table.tmap-key-value-table th {\n    width: 30%;\n    background-color: #F0F0F0; }\n  .tc-modal-body table.tmap-config-table tr td {\n    border: none;\n    vertical-align: top;\n    padding: 5px; }\n    .tc-modal-body table.tmap-config-table tr td:first-child {\n      width: 15%; }\n    .tc-modal-body table.tmap-config-table tr td:last-child {\n      width: 40%; }\n    .tc-modal-body table.tmap-config-table tr td input:not([type=radio]), .tc-modal-body table.tmap-config-table tr td textarea, .tc-modal-body table.tmap-config-table tr td select {\n      width: 100%;\n      /* prevents bad looking select boxes and wrapping in textareas */\n      word-wrap: normal; }\n    .tc-modal-body table.tmap-config-table tr td .tmap-no-stretch input, .tc-modal-body table.tmap-config-table tr td .tmap-no-stretch textarea, .tc-modal-body table.tmap-config-table tr td .tmap-no-stretch select {\n      width: auto; }\n    .tc-modal-body table.tmap-config-table tr td div.tmap-button-wrapper {\n      text-align: center; }\n    .tc-modal-body table.tmap-config-table tr td .tmap-note {\n      margin-top: 0.5em; }\n    .tc-modal-body table.tmap-config-table tr td .tmap-description {\n      font-style: italic; }\n\n#tmap-element-type-manager .tc-tab-buttons {\n  padding-top: 0px; }\n#tmap-element-type-manager > div:first-child {\n  height: 50vh;\n  float: left;\n  width: 20%;\n  background: linear-gradient(90deg, #f5f5f5 0%, #ffffff 50%); }\n  #tmap-element-type-manager > div:first-child .searchbar {\n    padding: 1em 15px 0 0; }\n    #tmap-element-type-manager > div:first-child .searchbar input {\n      width: 100%; }\n  #tmap-element-type-manager > div:first-child ul {\n    height: calc(100% - 65px);\n    overflow: auto;\n    padding: 0;\n    list-style: none;\n    margin-top: 15px; }\n    #tmap-element-type-manager > div:first-child ul li {\n      white-space: nowrap; }\n      #tmap-element-type-manager > div:first-child ul li .tmap-ranking {\n        width: 30px;\n        display: inline-block; }\n#tmap-element-type-manager > div:last-child {\n  height: 100%;\n  width: calc(80% - 15px);\n  float: right; }\n\n.tmap-manage-node-types .tmap-edge-type-specific {\n  display: none !important; }\n\n.tmap-manage-edge-types .tmap-node-type-specific {\n  display: none !important; }\n\n/**** TMap Widget **************************************************/\n.tmap-widget {\n  background: #FFFFFF;\n  position: relative;\n  border: 1px dotted lightgray;\n  padding: 2px;\n  width: 100%;\n  color: #666666;\n  display: block; }\n  .tmap-widget.tmap-fullscreen .vis-network .tmap-halfscreen-button {\n    display: none; }\n  .tmap-widget.tmap-click-to-use:not(.tmap-fullscreen) .vis-network:not(.vis-active) {\n    cursor: pointer; }\n    .tmap-widget.tmap-click-to-use:not(.tmap-fullscreen) .vis-network:not(.vis-active) .vis-navigation {\n      display: none; }\n    .tmap-widget.tmap-click-to-use:not(.tmap-fullscreen) .vis-network:not(.vis-active):hover:before {\n      box-shadow: 10px 10px 5px lightgray;\n      color: gray;\n      background: white;\n      content: \"Click to use\";\n      font-size: 18px;\n      font-weight: bold;\n      left: 50%;\n      margin-left: -100px;\n      position: absolute;\n      text-align: center;\n      top: 50px;\n      width: 200px;\n      z-index: 2000;\n      padding: 5px;\n      pointer-events: none; }\n  .tmap-widget .tmap-loading-bar {\n    display: none;\n    position: absolute;\n    text-align: center;\n    font-size: 2em;\n    padding: 10px;\n    top: 50%;\n    background: rgba(245, 245, 245, 0.5);\n    z-index: 1;\n    width: 250px;\n    margin: auto;\n    left: 0px;\n    right: 0px; }\n  .tmap-widget .tmap-vis-graph {\n    height: calc(100% - 35px); }\n    .tmap-widget .tmap-vis-graph .vis-network .vis-network-tooltip {\n      max-width: 250px;\n      white-space: normal; }\n    .tmap-widget .tmap-vis-graph .vis-network .vis-edit-mode {\n      height: 26px; }\n    .tmap-widget .tmap-vis-graph .vis-network .vis-manipulation {\n      height: 34px;\n      border-top: 1px solid #d6d9d8;\n      background: rgba(245, 245, 245, 0.7); }\n    .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button.tmap-button-enabled {\n      right: 15px; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button.tmap-button-enabled.tmap-fullscreen-button {\n        bottom: 90px;\n        background-image: url(<$macrocall $name=\"makedatauri\" type=\"image/png\" text={{$:/plugins/felixhayashi/tiddlymap/media/fullscreen.png}} />); }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button.tmap-button-enabled.tmap-halfscreen-button {\n        bottom: 130px;\n        background-image: url(<$macrocall $name=\"makedatauri\" type=\"image/png\" text={{$:/plugins/felixhayashi/tiddlymap/media/halfscreen.png}} />); }\n    .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover {\n      box-shadow: 0 0 3px 3px rgba(75, 75, 75, 0.3); }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover:before {\n        background: beige;\n        display: block;\n        color: black;\n        padding: 3px;\n        position: relative;\n        border: 1px solid lightgray;\n        width: 80px;\n        left: -70px;\n        top: -30px;\n        z-index: 1000;\n        text-align: center; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.vis-up:before {\n        left: 30px;\n        content: \"Scroll up\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.vis-down:before {\n        left: 30px;\n        content: \"Scroll down\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.vis-right:before {\n        left: 30px;\n        content: \"Scroll right\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.vis-left:before {\n        left: 30px;\n        content: \"Scroll left\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.vis-zoomOut:before {\n        content: \"Zoom out\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.vis-zoomIn:before {\n        content: \"Zoom in\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.vis-zoomExtends:before {\n        content: \"Fit whole graph\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.tmap-fullscreen-button:before {\n        content: \"Toggle Fullscreen\"; }\n      .tmap-widget .tmap-vis-graph .vis-network .vis-navigation .vis-button:hover.tmap-halfscreen-button:before {\n        content: \"Toggle Halfscreen\"; }\n  .tmap-widget.tmap-no-buttons .vis-navigation {\n    display: none; }\n  .tmap-widget.tmap-advanced-editor .tmap-topbar {\n    background: #d6d9d8; }\n    .tmap-widget.tmap-advanced-editor .tmap-topbar .tmap-active-button {\n      color: #488DCD; }\n      .tmap-widget.tmap-advanced-editor .tmap-topbar .tmap-active-button svg {\n        fill: #488DCD; }\n    .tmap-widget.tmap-advanced-editor .tmap-topbar .tmap-neigh-scope-button {\n      font-size: 1.5em;\n      vertical-align: bottom; }\n  .tmap-widget .tmap-menu-bar {\n    width: 100%; }\n  .tmap-widget .tmap-topbar {\n    background: #F5F5F5;\n    border-bottom: 1px solid lightgray;\n    padding: 3px 5px;\n    height: 35px;\n    position: relative; }\n    .tmap-widget .tmap-topbar .tmap-view-label {\n      width: 100%;\n      text-align: center;\n      font-weight: bold;\n      padding-top: 3px; }\n    .tmap-widget .tmap-topbar .tmap-focus-button {\n      position: absolute;\n      right: 10px; }\n      .tmap-widget .tmap-topbar .tmap-focus-button input {\n        width: 140px; }\n    .tmap-widget .tmap-topbar .tmap-popup {\n      position: relative; }\n      .tmap-widget .tmap-topbar .tmap-popup .tc-drop-down {\n        position: absolute;\n        z-index: 999;\n        right: 0px; }\n    .tmap-widget .tmap-topbar .tc-drop-down {\n      background-color: #F3F3F3;\n      min-width: 170px;\n      max-width: 210px;\n      padding: 5px;\n      margin: 5px 0; }\n      .tmap-widget .tmap-topbar .tc-drop-down button, .tmap-widget .tmap-topbar .tc-drop-down a {\n        padding: 0px;\n        text-decoration: none; }\n        .tmap-widget .tmap-topbar .tc-drop-down button:hover, .tmap-widget .tmap-topbar .tc-drop-down a:hover {\n          color: #ffffff; }\n        .tmap-widget .tmap-topbar .tc-drop-down button svg, .tmap-widget .tmap-topbar .tc-drop-down a svg {\n          vertical-align: middle; }\n    .tmap-widget .tmap-topbar [hidden] {\n      display: none; }\n    .tmap-widget .tmap-topbar .tc-block-dropdown {\n      width: 370px;\n      min-width: 370px;\n      padding: 5px;\n      margin: 15px 0 0 -370px; }\n      .tmap-widget .tmap-topbar .tc-block-dropdown a {\n        display: inline;\n        padding: 0px; }\n    .tmap-widget .tmap-topbar select {\n      width: 30%;\n      max-width: 200px;\n      word-wrap: initial;\n      padding: 0px; }\n    .tmap-widget .tmap-topbar button {\n      line-height: inherit;\n      color: #666666; }\n    .tmap-widget .tmap-topbar > * {\n      display: inline-block; }\n    .tmap-widget .tmap-topbar .tmap-separator:after {\n      color: #bdbdbd;\n      margin: 3px;\n      content: \" | \"; }\n    .tmap-widget .tmap-topbar .tc-edit-add-tag .tc-add-tag-name input {\n      width: 70%; }\n    .tmap-widget .tmap-topbar .tc-sidebar-header {\n      text-shadow: none; }\n    .tmap-widget .tmap-topbar .tc-edit-tags {\n      border: none;\n      padding: inherit;\n      box-shadow: none; }\n\n.tmap-widget.tmap-static-mode .tmap-topbar {\n  height: initial; }\n.tmap-widget.tmap-static-mode .tmap-vis-graph {\n  text-align: center;\n  cursor: not-allowed; }\n  .tmap-widget.tmap-static-mode .tmap-vis-graph:not(.tmap-graph-placeholder):hover::before {\n    box-shadow: 10px 10px 5px lightgray;\n    color: gray;\n    background: white;\n    content: \"Static\";\n    font-size: 18px;\n    font-weight: bold;\n    left: 50%;\n    margin-left: -100px;\n    position: absolute;\n    text-align: center;\n    top: 50px;\n    width: 200px;\n    z-index: 2000;\n    padding: 5px;\n    pointer-events: none; }\n  .tmap-widget.tmap-static-mode .tmap-vis-graph.tmap-graph-placeholder::before {\n    content: \"No Preview\";\n    display: block;\n    text-align: center;\n    padding: 20px; }\n\n.tmap-widget.tmap-plain-design {\n  border: none;\n  padding: 0px; }\n  .tmap-widget.tmap-plain-design .tmap-topbar {\n    display: none; }\n\n/**** Config Widget ************************************************/\n.tmap-config-widget {\n  background: #F0F0F0;\n  padding: 5px;\n  margin: 5px 0;\n  box-sizing: border-box;\n  display: block; }\n  .tmap-config-widget .vis-network {\n    display: none; }\n  .tmap-config-widget .vis-configuration-wrapper {\n    width: 350px; }\n    .tmap-config-widget .vis-configuration-wrapper .vis-config-rangeinput {\n      height: inherit;\n      margin-left: 4px; }\n    .tmap-config-widget .vis-configuration-wrapper .vis-config-item {\n      width: 100%;\n      height: inherit;\n      background: none !important; }\n      .tmap-config-widget .vis-configuration-wrapper .vis-config-item .vis-config-range {\n        width: 150px; }\n        .tmap-config-widget .vis-configuration-wrapper .vis-config-item .vis-config-range::-moz-range-track {\n          width: 150px !important; }\n      .tmap-config-widget .vis-configuration-wrapper .vis-config-item .vis-config-label {\n        width: 120px; }\n  .tmap-config-widget .vis-color-picker {\n    width: 310px;\n    left: 20px !important;\n    top: 20px !important;\n    margin-top: 0px;\n    margin-left: 0px;\n    height: 444px; }\n  .tmap-config-widget::after {\n    clear: both;\n    content: \"\";\n    display: block; }\n\n/**** Other ********************************************************/\ntable.tmap-table tr:nth-child(odd), .tc-modal-body table.tmap-config-table tr:nth-child(odd) {\n  background-color: #F0F0F0; }\ntable.tmap-table tr:nth-child(even), .tc-modal-body table.tmap-config-table tr:nth-child(even) {\n  background-color: #FFFFFF; }\ntable.tmap-table tr:hover, .tc-modal-body table.tmap-config-table tr:hover {\n  background-color: #FFFFF3; }\n\n/**** Fullscreen ***************************************************/\nhtml:fullscreen body {\n  overflow: hidden; }\nhtml:fullscreen .tc-dropzone > *:not(.tmap-has-fullscreen-child) {\n  z-index: 0; }\nhtml:fullscreen .tmap-has-fullscreen-child {\n  z-index: 1 !important;\n  left: 0px !important;\n  top: 0 !important;\n  right: 0 !important;\n  bottom: 0 !important;\n  position: fixed !important; }\n  html:fullscreen .tmap-has-fullscreen-child .tmap-widget.tmap-fullscreen {\n    background: white !important;\n    height: 100% !important;\n    width: 100% !important;\n    position: fixed !important;\n    top: 0 !important;\n    right: 0 !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    z-index: 999 !important;\n    border: none !important;\n    margin: 0 !important; }\n\nhtml:-moz-full-screen body {\n  overflow: hidden; }\nhtml:-moz-full-screen .tc-dropzone > *:not(.tmap-has-fullscreen-child) {\n  z-index: 0; }\nhtml:-moz-full-screen .tmap-has-fullscreen-child {\n  z-index: 1 !important;\n  left: 0px !important;\n  top: 0 !important;\n  right: 0 !important;\n  bottom: 0 !important;\n  position: fixed !important; }\n  html:-moz-full-screen .tmap-has-fullscreen-child .tmap-widget.tmap-fullscreen {\n    background: white !important;\n    height: 100% !important;\n    width: 100% !important;\n    position: fixed !important;\n    top: 0 !important;\n    right: 0 !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    z-index: 999 !important;\n    border: none !important;\n    margin: 0 !important; }\n\nhtml:-webkit-full-screen body {\n  overflow: hidden; }\nhtml:-webkit-full-screen .tc-dropzone > *:not(.tmap-has-fullscreen-child) {\n  z-index: 0; }\nhtml:-webkit-full-screen .tmap-has-fullscreen-child {\n  z-index: 1 !important;\n  left: 0px !important;\n  top: 0 !important;\n  right: 0 !important;\n  bottom: 0 !important;\n  position: fixed !important; }\n  html:-webkit-full-screen .tmap-has-fullscreen-child .tmap-widget.tmap-fullscreen {\n    background: white !important;\n    height: 100% !important;\n    width: 100% !important;\n    position: fixed !important;\n    top: 0 !important;\n    right: 0 !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    z-index: 999 !important;\n    border: none !important;\n    margin: 0 !important; }\n\nhtml:-ms-fullscreen body {\n  overflow: hidden; }\nhtml:-ms-fullscreen .tc-dropzone > *:not(.tmap-has-fullscreen-child) {\n  z-index: 0; }\nhtml:-ms-fullscreen .tmap-has-fullscreen-child {\n  z-index: 1 !important;\n  left: 0px !important;\n  top: 0 !important;\n  right: 0 !important;\n  bottom: 0 !important;\n  position: fixed !important; }\n  html:-ms-fullscreen .tmap-has-fullscreen-child .tmap-widget.tmap-fullscreen {\n    background: white !important;\n    height: 100% !important;\n    width: 100% !important;\n    position: fixed !important;\n    top: 0 !important;\n    right: 0 !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    z-index: 999 !important;\n    border: none !important;\n    margin: 0 !important; }\n\n/**** Media queries ************************************************/\n@media (max-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {\n  .tc-sidebar-scrollable .tmap-desktop-editor {\n    display: none; }\n }\n\n@media (min-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {\n  .tc-sidebar-scrollable .tmap-mobile-editor {\n    display: none; }\n\n  .tc-modal-wrapper {\n    z-index: 1010; }\n    .tc-modal-wrapper .tc-modal {\n      boder: 1px solid #999999;\n      left: calc(50% - 400px);\n      width: 802px; }\n    .tc-modal-wrapper .tc-modal-body {\n      left: calc(50% - 400px);\n      width: 800px; }\n }\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/Adapter": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/Adapter\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction\").ViewAbstraction;var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/EdgeType\").EdgeType;var i=require(\"$:/plugins/felixhayashi/tiddlymap/js/NodeType\").NodeType;var r=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var a=require(\"$:/core/modules/macros/contrastcolour.js\").run;var s=require(\"$:/plugins/felixhayashi/vis/vis.js\");var o=function(){this.opt=$tw.tmap.opt;this.logger=$tw.tmap.logger;this.indeces=$tw.tmap.indeces;this.visShapesWithTextInside=r.getLookupTable([\"ellipse\",\"circle\",\"database\",\"box\",\"text\"])};o.prototype.deleteEdge=function(e){return this._processEdge(e,\"delete\")};o.prototype.deleteEdges=function(e){e=r.convert(e,\"array\");for(var t=e.length;t--;){this.deleteEdge(e[t])}};o.prototype.insertEdge=function(e){return this._processEdge(e,\"insert\")};o.prototype._processEdge=function(e,i){this.logger(\"debug\",\"Edge\",i,e);if(typeof e!==\"object\"||!i||!e.from)return;if(i===\"insert\"&&!e.to)return;var a=this.indeces.tById[e.from];if(!a||!r.tiddlerExists(a))return;var s=new t(e.type);var o=r.getTiddler(a);var n=s.namespace;if(n===\"tw-list\"){if(!e.to)return;return this._processListEdge(o,e,s,i)}else if(n===\"tw-field\"){if(!e.to)return;return this._processFieldEdge(o,e,s,i)}else if(n===\"tw-body\"){return null}else{return this._processTmapEdge(o,e,s,i)}return e};o.prototype._processTmapEdge=function(e,t,i,a){if(a===\"delete\"&&!t.id)return;var s=r.parseFieldData(e,\"tmap.edges\",{});if(a===\"insert\"){t.id=t.id||r.genUUID();s[t.id]={to:t.to,type:i.id};if(!i.exists()){i.save()}}else{delete s[t.id]}r.writeFieldData(e,\"tmap.edges\",s);return t};o.prototype._processListEdge=function(e,t,i,a){var s=i.getId(true);var o=r.getTiddler(e);var n=$tw.utils.parseStringArray(e.fields[s]);n=(n||[]).slice();var d=this.indeces.tById[t.to];if(a===\"insert\"){n.push(d);if(!i.exists()){i.save()}}else{var l=n.indexOf(d);if(l>-1){n.splice(l,1)}}r.setField(o,s,$tw.utils.stringifyList(n));return t};o.prototype._processFieldEdge=function(e,t,i,a){var s=this.indeces.tById[t.to];if(s==null)return;var o=a===\"insert\"?s:\"\";r.setField(e,i.getId(true),o);if(!i.exists()){i.save()}return t};o.prototype.getAdjacencyList=function(e,t){$tw.tmap.start(\"Creating adjacency list\");t=t||{};if(!t.edges){var i=r.getMatches(this.opt.selector.allPotentialNodes);t.edges=this.getEdgesForSet(i,t.toWL,t.typeWL)}var a=r.groupByProperty(t.edges,e||\"to\");$tw.tmap.stop(\"Creating adjacency list\");return a};o.prototype.getNeighbours=function(t,i){$tw.tmap.start(\"Get neighbours\");i=i||{};var a=r.getArrayValuesAsHashmapKeys(t);var s=new e(i.view);var o=i.addProperties;var n=r.getDataMap();var d=this.indeces.allETy;var l=r.getDataMap();var p=i.toWL;var g=i.typeWL;var f=this.indeces.tById;var c=this.indeces.idByT;var v=parseInt(i.steps)>0?i.steps:1;var u=s.getConfig(\"neighbourhood_directions\")||i.direction;var h=!u||u===\"both\";var y=h||u===\"in\";var w=h||u===\"out\";var m=this.getAdjacencyList(\"to\",i);var b=function(e,t){n[e.id]=e;var i=f[e[t]];if(!a[i]){a[i]=true;var r=this.makeNode(i,o);if(r){l[r.id]=r;E.push(i)}}}.bind(this);for(var T=0;T<v&&t.length;T++){var E=[];for(var N=t.length;N--;){if(r.isSystemOrDraft(t[N])){continue}var $=this.getEdges(t[N],p,g);for(var I in $){var x=d[$[I].type];if(h||w&&x.toArrow||y&&x.invertedArrow){b($[I],\"to\")}}var A=m[c[t[N]]];if(!A)continue;for(var _=A.length;_--;){var x=d[A[_].type];if(h||y&&x.toArrow||w&&x.invertedArrow){b(A[_],\"from\")}}}t=E}var B={nodes:l,edges:n};this.logger(\"debug\",\"Retrieved neighbourhood\",B,\"steps\",T);$tw.tmap.stop(\"Get neighbours\");return B};o.prototype.getGraph=function(t){$tw.tmap.start(\"Assembling Graph\");t=t||{};var i=new e(t.view);var a=r.getMatches(t.filter||i.getNodeFilter(\"compiled\"));var s=r.getArrayValuesAsHashmapKeys(a);var o=t.edgeTypeWL||this.getEdgeTypeWhiteList(i.getEdgeFilter(\"compiled\"));var n=parseInt(t.neighbourhoodScope||i.getConfig(\"neighbourhood_scope\"));var d={edges:this.getEdgesForSet(a,s,o),nodes:this.selectNodesByReferences(a,{view:i,outputType:\"hashmap\"})};if(n){var l=this.getNeighbours(a,{steps:n,view:i,typeWL:o,addProperties:{group:\"tmap:neighbour\"}});r.merge(d,l);if(i.isEnabled(\"show_inter_neighbour_edges\")){var p=this.getTiddlersById(l.nodes);var s=r.getArrayValuesAsHashmapKeys(p);$tw.utils.extend(d.edges,this.getEdgesForSet(p,s))}}this._removeObsoleteViewData(d.nodes,i);this.attachStylesToNodes(d.nodes,i);$tw.tmap.stop(\"Assembling Graph\");this.logger(\"debug\",\"Assembled graph:\",d);return d};o.prototype.getEdges=function(e,t,i){var a=r.getTiddler(e);if(!a||r.isSystemOrDraft(a))return;var s=r.getDataMap();this._addTmapEdges(s,a,t,i);this._addBodyAndFieldEdges(s,a,t,i);return s};o.prototype._addBodyAndFieldEdges=function(e,t,i,a){var s=t.fields;var o=r.getTiddlerRef(t);var n=this.indeces;var d=n.fiETy;var l=n.liETy;var p=n.maETyFiNa;var g=r.getDataMap();if(!a||a[\"tw-body:link\"]){g[\"tw-body:link\"]=$tw.wiki.getTiddlerLinks(o)}for(var f in s){if(!p[f])continue;var c=d[\"tw-field:\"+f]||l[\"tw-list:\"+f];if(a&&!a[c.id])continue;if(d[c.id]){g[c.id]=[s[f]]}else if(l[c.id]){g[c.id]=$tw.utils.parseStringArray(s[f])}}if(!g)return;var v=t.fields[\"tmap.id\"];var u=n.idByT;var h=n.allETy;for(var y in g){var w=g[y];if(!w)continue;var c=h[y];for(var m=w.length;m--;){var b=w[m];if(!b||!$tw.wiki.tiddlerExists(b)||r.isSystemOrDraft(b)||i&&!i[b])continue;var T=c.id+$tw.utils.hashString(o+b);var E=this.makeEdge(v,u[b],c,T);if(E){e[E.id]=E}}}};o.prototype._addTmapEdges=function(e,t,i,a){var s=r.parseFieldData(t,\"tmap.edges\");if(!s)return;var o=this.indeces.tById;var n=t.fields[\"tmap.id\"];for(var d in s){var l=s[d];var p=o[l.to];if(p&&(!i||i[p])&&(!a||a[l.type])){var g=this.makeEdge(n,l.to,l.type,d);if(g){e[d]=g}}}};o.prototype.getEdgeTypeWhiteList=function(e){var i=r.getDataMap();var a=r.getMatches(this.opt.selector.allEdgeTypes);var s=e?r.getMatches(e,a):a;for(var o=s.length;o--;){var n=new t(s[o]);i[n.id]=true}return i};o.prototype.getEdgesForSet=function(e,t,i){var a=r.getDataMap();for(var s=e.length;s--;){$tw.utils.extend(a,this.getEdges(e[s],t,i))}return a};o.prototype.selectEdgesByType=function(e){var i=r.getDataMap();i[new t(e).id]=true;return this.getEdgesForSet(this.getAllPotentialNodes(),null,i)};o.prototype.getAllPotentialNodes=function(){return r.getMatches(this.opt.selector.allPotentialNodes)};o.prototype._processEdgesWithType=function(e,i){e=new t(e);this.logger(\"debug\",\"Processing edges\",e,i);var r=this.selectEdgesByType(e);if(i.action===\"rename\"){var a=new t(i.newName);a.load(e);a.save()}for(var s in r){this._processEdge(r[s],\"delete\");if(i.action===\"rename\"){r[s].type=i.newName;this._processEdge(r[s],\"insert\")}}$tw.wiki.deleteTiddler(e.fullPath)};o.prototype.selectNodesByFilter=function(e,t){var i=r.getMatches(e);return this.selectNodesByReferences(i,t)};o.prototype.selectNodesByReferences=function(e,t){t=t||{};var i=t.addProperties;var a=r.getDataMap();var s=Object.keys(e);for(var o=s.length;o--;){var n=this.makeNode(e[s[o]],i);if(n){a[n.id]=n}}return r.convert(a,t.outputType)};o.prototype.selectNodesByIds=function(e,t){var i=this.getTiddlersById(e);return this.selectNodesByReferences(i,t)};o.prototype.selectNodeById=function(e,t){t=r.merge(t,{outputType:\"hashmap\"});var i=this.selectNodesByIds([e],t);return i[e]};o.prototype.makeEdge=function(e,i,a,s){if(!e||!i)return;if(e instanceof $tw.Tiddler){e=e.fields[\"tmap.id\"]}else if(typeof e===\"object\"){e=e.id}a=this.indeces.allETy[a]||new t(a);var o=a.getLabel();var n={id:s||r.genUUID(),from:e,to:i,type:a.id};var d=a.description;n.title=d||o||n.id;if(r.isTrue(a[\"show-label\"],true)){n.label=o}n=$tw.utils.extend(n,a.style);return n};o.prototype.removeNodeType=function(e){var e=new i(e);$tw.wiki.deleteTiddler(e.fullPath)};o.prototype.makeNode=function(e,t){var i=r.getTiddler(e);if(!i||i.isDraft()||$tw.wiki.isSystemTiddler(i.fields.title)){return}var a=r.merge({},t);a.id=this.assignId(i);var s=i.fields[this.opt.field.nodeLabel];a.label=s&&this.opt.field.nodeLabel!==\"title\"?$tw.wiki.renderText(\"text/plain\",\"text/vnd-tiddlywiki\",s):i.fields.title;return a};o.prototype.getInheritedNodeStyles=function(t,i){i=i?new e(i).getLabel():null;var a=this.getTiddlersById(t);var s={};var o=this.indeces.glNTy;for(var n=o.length;n--;){var d=o[n];if(d.id===\"tmap:neighbour\"){var l=$tw.tmap.indeces.tById;var p=[];for(var g in t){if(t[g].group===\"tmap:neighbour\"){p.push(l[g])}}}else{var p=d.getInheritors(a)}for(var f=p.length;f--;){var c=p[f];var v=s[c]=s[c]||{};v.style=r.merge(v.style||{},d.style);if(d[\"fa-icon\"]){v[\"fa-icon\"]=d[\"fa-icon\"]}else if(d[\"tw-icon\"]){v[\"tw-icon\"]=d[\"tw-icon\"]}}}return s};o.prototype.attachStylesToEdges=function(e,t){};o.prototype._removeObsoleteViewData=function(t,i){i=new e(i);if(!i.exists()||!t)return;var r=i.getNodeData();var a=0;for(var s in r){if(t[s]===undefined&&r[s]!=null){r[s]=undefined;a++}}if(a){this.logger(\"debug\",\"[Cleanup]\",\"Removed obsolete node data:\",i.getLabel(),a);i.saveNodeData(r)}};o.prototype.attachStylesToNodes=function(t,i){i=new e(i);var s=this.getInheritedNodeStyles(t,i);var o=i.getNodeData();var n=!i.isEnabled(\"physics_mode\");var d=this.opt.field.nodeInfo;var l=this.opt.field.nodeIcon;var p=this.indeces.tById;for(var g in t){var f=p[g];var c=$tw.wiki.getTiddler(f);var v=c.fields;var u=t[g];var h=null;var y=null;if(s[f]){if(s[f].style){r.merge(u,s[f].style)}h=s[f][\"fa-icon\"];y=s[f][\"tw-icon\"]}if(v.color){u.color=v.color}if(v[\"tmap.style\"]){r.merge(u,r.parseJSON(v[\"tmap.style\"]))}h=v[\"tmap.fa-icon\"]||h;y=v[\"icon\"]||y;if(o[g]){r.merge(u,o[g]);if(n){u.fixed={x:u.x!=null,y:u.y!=null}}h=o[g][\"fa-icon\"]||h;y=o[g][\"tw-icon\"]||y}var w=u.color!==null&&typeof u.color===\"object\";var m=w?u.color.background:u.color;u.color={background:m,border:w?u.color.border:undefined};this._addNodeIcon(u,h,y);u.font=u.font||{};if(u.shape&&!this.visShapesWithTextInside[u.shape]){u.font.color=\"black\"}else if(!u.font.color&&m){u.font.color=a(m,m,\"black\",\"white\")}if(u.shape===\"icon\"&&typeof u.icon===\"object\"){u.icon.color=m}if(v[d]){u.title=$tw.wiki.renderText(\"text/html\",\"text/vnd-tiddlywiki\",v[d])}else if(u.label!==f){u.title=f}}};o.prototype.deleteNode=function(t){if(!t)return;var i=typeof t===\"object\"?t.id:t;var a=this.indeces.tById[i];if(a){r.deleteTiddlers([a])}var s=$tw.tmap.opt.selector.allViews;var o=r.getMatches(s);for(var n=o.length;n--;){var d=new e(o[n]);d.removeNodeFromFilter(i);if(d.getNodeData(i)){d.saveNodeData(i,null)}}var l=this.getNeighbours([a]);this.deleteEdges(l.edges)};o.prototype.deleteNodes=function(e){e=r.convert(e,\"array\");for(var t=e.length;t--;){this.deleteNode(e[t])}};o.prototype.getView=function(t,i){return new e(t,i)};o.prototype.createView=function(t){return new e(t,true)};o.prototype.storePositions=function(t,i){i=new e(i);i.saveNodeData(t)};o.prototype.assignId=function(e,t){var i=r.getTiddler(e,true);if(!i)return;var a=i.fields[\"tmap.id\"];if(!a||t){a=r.genUUID();r.setField(i,\"tmap.id\",a);this.logger(\"info\",\"Assigning new id to\",i.fields.title)}this.indeces.tById[a]=i.fields.title;this.indeces.idByT[i.fields.title]=a;return a};o.prototype.insertNode=function(t,i){if(!i||typeof i!==\"object\")i={};if(!t||typeof t!==\"object\"){t=r.getDataMap()}var a=r.getDataMap();a.title=$tw.wiki.generateNewTitle(t.label?t.label:\"New node\");a.text=\"\";t.label=a.title;$tw.wiki.addTiddler(new $tw.Tiddler(a,$tw.wiki.getModificationFields(),$tw.wiki.getCreationFields()));t.id=$tw.tmap.adapter.assignId(a.title);if(i.view){var s=new e(i.view);s.addNodeToView(t)}return t};o.prototype._getFAdigits=function(e){return e.length===4?e:e.substr(3,4)};o.prototype.getTiddlersById=function(e){if(Array.isArray(e)){e=r.getArrayValuesAsHashmapKeys(e)}else if(e instanceof s.DataSet){e=r.getLookupTable(e,\"id\")}var t=[];var i=this.indeces.tById;for(var a in e){if(i[a])t.push(i[a])}return t};o.prototype.getId=function(e){return this.indeces.idByT[r.getTiddlerRef(e)]};o.prototype._addNodeIcon=function(e,t,i){if(t){e.shape=\"icon\";e.icon={shape:\"icon\",face:\"FontAwesome\",color:e.color,code:String.fromCharCode(\"0x\"+this._getFAdigits(t))};return}if(!i)return;var a=r.getTiddler(i);if(!a)return;if(a.fields[\"_canonical_uri\"]){e.image=a.fields[\"_canonical_uri\"];e.shape=\"image\";return}if(a.fields.text){var s=a.fields.type||\"image/svg+xml\";var o=a.fields.text;if(s===\"image/svg+xml\"){o=o.replace(/\\r?\\n|\\r/g,\" \");if(!r.inArray(\"xmlns\",o)){o=o.replace(/<svg/,'<svg xmlns=\"http://www.w3.org/2000/svg\"')}}var n=$tw.config.contentTypeInfo[s].encoding===\"base64\"?o:window.btoa(o);e.image=\"data:\"+s+\";base64,\"+n;e.shape=\"image\";return}};exports.Adapter=o})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/Adapter",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/CallbackManager": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/CallbackManager\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var t=function(){this.logger=$tw.tmap.logger;this.callbacks=e.getDataMap()};t.prototype.add=function(e,t,l){this.logger(\"debug\",'A callback was registered for changes of \"'+e+'\"');this.callbacks[e]={execute:t,isDeleteOnCall:typeof l===\"boolean\"?l:true}};t.prototype.remove=function(e){if(!e)return;if(typeof e===\"string\"){e=[e]}for(var t=e.length;t--;){var l=e[t];if(this.callbacks[l]){this.logger(\"debug\",'A callback for \"'+l+'\" will be deleted');delete this.callbacks[l]}}};t.prototype.handleChanges=function(e){if(this.callbacks.length==0)return;for(var t in e){if(!this.callbacks[t])continue;if($tw.wiki.getTiddler(t)){this.logger(\"debug\",\"Executing a callback for: \"+t);this.callbacks[t].execute(t);if(!this.callbacks.isDeleteOnCall)continue}this.remove(t)}};exports.CallbackManager=t})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/CallbackManager",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/DialogManager": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/DialogManager\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/CallbackManager\").CallbackManager;var i=function(t,e){this.logger=$tw.tmap.logger;this.adapter=$tw.tmap.adapter;this.opt=$tw.tmap.opt;this.callbackManager=t;if(e){this.context=e}};i.prototype.open=function(e,i,a){if(t.isTrue(this.opt.config.sys.suppressedDialogs[e],false)){this.logger(\"warning\",\"Suppressed dialog\",e);return}i=i||{};this.logger(\"debug\",\"Dialog param object\",i);if(typeof a===\"function\"&&this.context){a=a.bind(this.context)}var l=this.opt.path.tempRoot+\"/dialog-\"+t.genUUID();var r=t.getTiddler(this.opt.path.dialogs+\"/\"+e);var s={title:l,buttons:r.fields[\"buttons\"]||\"ok_cancel\",output:l+\"/output\",result:l+\"/result\",temp:l+\"/temp\",template:r.fields.title,templateId:e,currentTiddler:l+\"/output\",text:t.getTiddler(this.opt.path.dialogs).fields.text};if(i.dialog){if(i.dialog.preselects){$tw.wiki.addTiddler(new $tw.Tiddler({title:s.output},t.flatten(i.dialog.preselects)));delete i.dialog.preselects}t.merge(s,i.dialog)}s.footer=t.getText(this.opt.path.footers);s=t.flatten(s);i=t.flatten(i);var o=function(e){this.getElement(\"hidden-close-button\").click();var i=$tw.wiki.getTiddler(e);var r=i.fields.text;if(r){var o=$tw.wiki.getTiddler(s.output)}else{var o=null;$tw.tmap.notify(\"operation cancelled\")}if(typeof a===\"function\"){a(r,o)}t.deleteByPrefix(l)}.bind(this);this.callbackManager.add(s.result,o,true);var n=new $tw.Tiddler(r,i,s);$tw.wiki.addTiddler(n);this.logger(\"debug\",\"Opening dialog\",n);$tw.rootWidget.dispatchEvent({type:\"tm-modal\",param:n.fields.title,paramObject:n.fields});this.addKeyBindings();return n};i.prototype.getElement=function(e){return t.getFirstElementByClassName(\"tmap-\"+e)};i.prototype.addKeyBindings=function(){var e=$tw.tmap.keycharm({container:t.getFirstElementByClassName(\"tc-modal\")});var i=/tmap-triggers-(.+?)-on-(.+?)(?:\\s|$)/;var a=document.getElementsByClassName(\"tmap-trigger-field\");for(var l=a.length;l--;){var r=a[l].className.split(\" \");for(var s=r.length;s--;){var o=r[s].match(i);if(!o){continue}var n=o[1];var d=o[2];var p=this.getElement(n);if(!p)continue;e.bind(d,function(){this.click()}.bind(p))}}};exports.DialogManager=i})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/DialogManager",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/exception": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/exception\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var r={};r.EnvironmentError=function(r){this.name=\"EnvironmentError\";this.message=\"Critical parts of the underlying system changed: \"+r};r.DependencyError=function(r){this.name=\"DependencyError\";this.message=\"TiddlyMap cannot run without: \"+r};for(var t in r){r[t].prototype=Object.create(Error.prototype);r[t].constructor=r[t]}exports.Exception=r})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/exception",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/fixer": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/fixer\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/Adapter\").Adapter;var r=require(\"$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction\").ViewAbstraction;var a=require(\"$:/plugins/felixhayashi/tiddlymap/js/EdgeType\").EdgeType;var i=function(e,r){var i=t.getByPrefix(e);for(var s=0;s<i.length;s++){var d=t.getBasename(i[s]);if(d===\"__noname__\"){d=\"tmap:unknown\"}d=new a(d);if(!d.exists())d.save();var u=$tw.wiki.getTiddlerData(i[s]);for(var f=0;f<u.length;f++){u[f].type=(r?r+\":\":\"\")+d.id;$tw.tmap.adapter.insertEdge(u[f])}$tw.wiki.deleteTiddler(i[s])}};var s=function(e,r,a){if(t.isLeftVersionGreater(e,r)){$tw.tmap.logger(\"debug\",\"Upgrading data structure to \"+e);a();t.setEntry($tw.tmap.opt.ref.sysMeta,\"dataStructureState\",e)}};var d={};d.fixId=function(){var e=$tw.wiki.getTiddlerData($tw.tmap.opt.ref.sysMeta,{});var r={before:\"0.9.0\",after:\"0.9.2\"};if(t.isLeftVersionGreater(r.before,e.dataStructureState)){$tw.tmap.logger(\"debug\",\"Upgrading data structure to\",r.after);if(t.isLeftVersionGreater(\"0.9.2\",e.originalVersion)){var a=\"$:/plugins/felixhayashi/tiddlymap/config/sys/user\";var i=t.getEntry(a,\"field.nodeId\",\"tmap.id\");t.moveFieldValues(i,\"tmap.id\",true,false)}t.setEntry($tw.tmap.opt.ref.sysMeta,\"dataStructureState\",r.after)}};d.fix=function(){var e=$tw.wiki.getTiddlerData($tw.tmap.opt.ref.sysMeta,{});$tw.tmap.logger(\"debug\",\"Fixer is started\");$tw.tmap.logger(\"debug\",\"Data-structure currently in use: \",e.dataStructureState);var a={before:\"0.6.11\",after:\"0.7.0\"};if(t.isLeftVersionGreater(a.before,e.dataStructureState)){$tw.tmap.logger(\"debug\",\"Upgrading data structure to\",a.after);i(\"$:/plugins/felixhayashi/tiddlymap/graph/edges\",null);var u=$tw.tmap.opt.selector.allViews;var f=t.getMatches(u);for(var g=0;g<f.length;g++){var n=new r(f[g]);i(n.getRoot()+\"/graph/edges\",n)}t.setEntry($tw.tmap.opt.ref.sysMeta,\"dataStructureState\",a.after)}var a={before:\"0.7.31\",after:\"0.7.32\"};if(t.isLeftVersionGreater(a.before,e.dataStructureState)){$tw.tmap.logger(\"debug\",\"Upgrading data structure to\",a.after);var o=$tw.tmap.adapter.getView(\"Live View\");o.setNodeFilter(\"[field:title{$:/temp/tmap/currentTiddler}]\",true);o.setConfig({\"refresh-trigger\":null,\"refresh-triggers\":$tw.utils.stringifyList([\"$:/temp/tmap/currentTiddler\"])});t.setEntry($tw.tmap.opt.ref.sysMeta,\"dataStructureState\",a.after)}var a={before:\"0.7.32\",after:\"0.9.0\"};if(t.isLeftVersionGreater(a.before,e.dataStructureState)){$tw.tmap.logger(\"debug\",\"Upgrading data structure to\",a.after);var p=$tw.tmap.opt.ref.visUserConf;var l=t.unflatten($tw.wiki.getTiddlerData(p,{}));if(typeof l.groups===\"object\"){var w=new $tw.tmap.NodeType(\"tmap:neighbour\");w.setStyle(l.groups[\"neighbours\"]);w.save();delete l.groups;$tw.wiki.setTiddlerData(p,l)}t.setEntry($tw.tmap.opt.ref.sysMeta,\"dataStructureState\",a.after)}d.fixId();s(\"0.9.16\",e.dataStructureState,function(){var t=$tw.tmap.indeces.glNTy;for(var e=t.length;e--;){t[e].save(null,true)}});s(\"0.10.3\",e.dataStructureState,function(){var e=$tw.tmap.opt.ref.liveTab;if(t.getTiddler(e).hasTag(\"$:/tags/SideBar\")){$tw.wiki.deleteTiddler(e);t.setField(e,\"tags\",\"$:/tags/SideBar\")}})};exports.fixer=d})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/fixer",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/EdgeType": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/EdgeType\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/MapElementType\").MapElementType;var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var i=function(e,r){if(e instanceof i){return e}t.call(this,e||\"tmap:unknown\",$tw.tmap.opt.path.edgeTypes,i._fieldMeta,r);var s=this.style&&this.style.arrows;if(s){this.invertedArrow=this._isArrow(s,\"from\");this.toArrow=this._isArrow(s,\"to\")||this._isArrow(s,\"middle\");this.biArrow=this.invertedArrow===this.toArrow;if(this.biArrow)this.toArrow=this.invertedArrow=true}else{this.toArrow=true}this.namespace=this._getNamespace()};i.prototype=Object.create(t.prototype);i._fieldMeta=$tw.utils.extend({},t._fieldMeta,{label:{},\"show-label\":{}});i.prototype.getLabel=function(){return this.label||this.getId(true)};i.prototype._getNamespace=function(){var t=this.id.match(\"^(.*):\");return t?t[1]:\"\"};i.prototype._isArrow=function(t,e){var i=t[e];return e===\"to\"&&i==null||i===true||typeof i===\"object\"&&i.enabled!==false};i.prototype.getId=function(t){return t?this.id.substring(this.id.indexOf(\":\")+1):this.id};exports.EdgeType=i})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/EdgeType",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/MapElementType": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/MapElementType\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var i=function(i,e,s,r){this.opt=$tw.tmap.opt;this.logger=$tw.tmap.logger;this.root=e;this.id=t.getWithoutPrefix(i,this.root+\"/\");this._fieldMeta=s;this.fullPath=this.root+\"/\"+this.id;this.isShipped=$tw.wiki.getSubTiddler(this.opt.path.pluginRoot,this.fullPath);this.load(r||this.fullPath)};i._fieldMeta={description:{},style:{parse:t.parseJSON,stringify:JSON.stringify},modified:{},created:{}};i.prototype.load=function(i){if(!i)return;if(typeof i===\"string\"){var e=!t.startsWith(i,this.root)?this.root+\"/\"+type:i;this.loadFromTiddler(e)}else if(i instanceof $tw.Tiddler){this.loadFromTiddler(i)}else if(typeof i===\"object\"){for(var s in this._fieldMeta){this[s]=i[s]}}};i.prototype.loadFromTiddler=function(i){var e=t.getTiddler(i);if(!e)return;var s=$tw.wiki.getSubTiddler(this.opt.path.pluginRoot,this.fullPath)||{};var r=$tw.utils.extend({},s.fields,e.fields);for(var o in this._fieldMeta){var l=this._fieldMeta[o].parse;var h=r[o];this[o]=l?l.call(this,h):h}};i.prototype.exists=function(){return t.tiddlerExists(this.fullPath)};i.prototype.setStyle=function(i,e){if(typeof i===\"string\"){i=t.parseJSON(i)}if(typeof i===\"object\"){if(e){t.merge(this.style,i)}else{this.style=i}}};i.prototype.save=function(i,e){if(!i){i=this.fullPath}else if(typeof i!==\"string\"){return}var s={title:i,text:\"\"};if(!t.startsWith(i,this.root)){s.id=this.id}if(e!==true){this.modified=new Date}if(!this.exists()){this.created=this.modified}for(var r in this._fieldMeta){var o=this._fieldMeta[r].stringify;s[r]=o?o.call(this,this[r]):this[r]}$tw.wiki.addTiddler(new $tw.Tiddler(s))};exports.MapElementType=i})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/MapElementType",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/NodeType": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/NodeType\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/MapElementType\").MapElementType;var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var i=function(e,n){if(e instanceof i){return e}t.call(this,e||\"tmap:unknown\",$tw.tmap.opt.path.nodeTypes,i._fieldMeta,n)};i.prototype=Object.create(t.prototype);i._fieldMeta=$tw.utils.extend({},t._fieldMeta,{view:{},priority:{parse:function(t){return isNaN(t)?1:parseInt(t)},stringify:function(t){return e.isInteger(t)?t.toString():\"1\"}},scope:{stringify:e.getWithoutNewLines},\"fa-icon\":{},\"tw-icon\":{}});i.prototype.getInheritors=function(t){var i=this.scope;return i?e.getMatches(i,t||$tw.wiki.allTitles()):[]};exports.NodeType=i})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/NodeType",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/utils": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/utils\ntype: application/javascript\nmodule-type: library\n\nATTENTION: THIS CLASS MUST NOT REQUIRE ANY OTHER TIDDLYMAP FILE\nIN ORDER TO AVOID ACYCLIC DEPENDENCIES!\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/plugins/felixhayashi/vis/vis.js\");var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/exception\").Exception;var r={};r.deleteTiddlers=function(e){var t=Object.keys(e);var i=$tw.wiki.getTiddlerList(\"$:/StoryList\");for(var n=t.length;n--;){var l=r.getTiddlerRef(e[t[n]]);if(!$tw.wiki.tiddlerExists(e[t[n]])){continue}var a=i.indexOf(l);if(a!==-1){i.splice(a,1);r.setField(\"$:/StoryList\",\"list\",i)}$tw.wiki.deleteTiddler(l)}};r.moveFieldValues=function(e,t,i,n,l){if(e===t)return;var a=l||$tw.wiki.allTitles();for(var u=a.length;u--;){var s=r.getTiddler(a[u]);if(s.isDraft()||!s.fields[e]||!n&&$tw.wiki.isSystemTiddler(a[u])){continue}var f={};f[t]=s.fields[e];if(i){f[e]=undefined}$tw.wiki.addTiddler(new $tw.Tiddler(s,f))}};r.getLabel=function(e,t){var i=r.getTiddler(e);return i&&i.fields[t]?i.fields[t]:i.fields.title};r.ucFirst=function(e){return e&&e[0].toUpperCase()+e.slice(1)};r.convert=function(t,i){if(typeof t!==\"object\")return;switch(i){case\"array\":return r.getValues(t);case\"hashmap\":case\"object\":if(t instanceof e.DataSet){return t.get({returnType:\"Object\"})}else{return t}case\"dataset\":default:if(t instanceof e.DataSet){return t}if(!Array.isArray(t)){t=r.getValues(t)}return new e.DataSet(t)}};r.getValues=function(t){if(Array.isArray(t)){return t}else if(t instanceof e.DataSet){return t.get({returnType:\"Array\"})}var r=[];var i=Object.keys(t);for(var n=i.length;n--;){r.push(t[i[n]])}return r};r.hasOwnProp=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};r.getDataMap=function(){var e=Object.create(null);Object.defineProperty(e,\"hasOwnProperty\",{enumerable:false,configurable:false,writable:false,value:Object.prototype.hasOwnProperty.bind(e)});return e};r.getMatches=function(e,t,i){var n=undefined;if(t!=null&&typeof t===\"object\"){var l=Object.keys(t);n=function(e){for(var i=l.length;i--;){var n=r.getTiddler(t[l[i]]);if(n){e(n,n.fields.title)}}}}if(typeof e===\"string\"){e=$tw.wiki.compileFilter(e)}var a=e.call($tw.wiki,n);if(i){var u=r.getDataMap();for(var s=a.length;s--;){u[a[s]]=$tw.wiki.getTiddler(a[s])}return u}else{return a}};r.isMatch=function(e,t){var i=r.getTiddlerRef(e);return r.getMatches(t,[i]).length>0};r.isInteger=Number.isInteger||function(e){return typeof e===\"number\"&&isFinite(e)&&Math.floor(e)===e};r.escapeRegex=function(e){return e.replace(/[-$^?.+*[\\]\\\\(){}|]/g,\"\\\\$&\")};r.isTrue=function(e,t){if(e==null){return!!t}else if(typeof e===\"string\"){var r=parseInt(e);return isNaN(r)?e===\"true\":r!==0}else if(typeof e===\"boolean\"){return e}else if(typeof e===\"number\"){return r!==0}return false};r.getTiddlerRef=function(e){if(e instanceof $tw.Tiddler){return e.fields.title}else if(typeof e===\"string\"){return e}};r.getTiddler=function(e,t){if(e instanceof $tw.Tiddler){if(!t){return e}e=e.fields.title}return $tw.wiki.getTiddler(e)};r.getBasename=function(e){return e.substring(e.lastIndexOf(\"/\")+1)};r.notify=function(e){var t=\"$:/temp/tiddlymap/notify\";$tw.wiki.addTiddler(new $tw.Tiddler({title:t,text:e}));$tw.notifier.display(t)};r.tiddlerExists=function(e){var t=r.getTiddlerRef(e);return t&&($tw.wiki.tiddlerExists(t)||$tw.wiki.isShadowTiddler(t))};r.addListeners=function(e,t,r){for(var i in e){t.addEventListener(i,e[i].bind(r))}};r.isPreviewed=function(e){if(e){if(e.getVariable(\"tv-tiddler-preview\")){return true}else{var t=\"tc-tiddler-preview-preview\";return!!r.getAncestorWithClass(e.parentDomNode,t)}}return false};r.getAncestorWithClass=function(e,t){if(typeof e!==\"object\"||typeof t!==\"string\")return;while(e.parentNode){e=e.parentNode;if($tw.utils.hasClass(e,t)){return e}}};r.getPropertiesByPrefix=function(e,t,i){var n=r.getDataMap();for(var l in e){if(r.startsWith(l,t)){n[i?l.substr(t.length):l]=e[l]}}return n};r.getWithoutPrefix=function(e,t){return r.startsWith(e,t)?e.substr(t.length):e};r.hasPropWithPrefix=function(e,t){for(var i in e){if(r.startsWith(i,t)){return true}}return false};r.startsWith=function(e,t){return e.substring(0,t.length)===t};r.hasElements=function(e){return Object.keys(e).length>0};r.groupByProperty=function(e,t){e=r.getIterableCollection(e);var i=r.getDataMap();var n=Object.keys(e);for(var l in n){var a=e[n[l]];var u=a[t];if(u==null){throw\"Cannot group by property \"+t}else{if(!Array.isArray(i[u])){i[u]=[]}i[u].push(a)}}return i};r.findAndRemoveClassNames=function(e){for(var t=e.length;t--;){var r=document.getElementsByClassName(e[t]);for(var i=r.length;i--;){$tw.utils.removeClass(r[i],e[t])}}};r.parseFieldData=function(e,t,i){var n=r.getTiddler(e);if(!n)return i;if(!t)t=\"text\";return r.parseJSON(n.fields[t],i)};r.getImgFromWeb=function(e,t){if(!e||typeof t!==\"function\")return;var r=new XMLHttpRequest;r.open(\"GET\",e,true);r.responseType=\"blob\";r.onerror=function(e){console.log(e)};r.onload=function(e){if(this.readyState===4&&this.status===200){var r=this.response;t(window.URL.createObjectURL(r))}};try{r.send()}catch(i){console.log(i)}};r.parseJSON=function(e,t){try{return JSON.parse(e)}catch(r){return t}};r.writeFieldData=function(e,t,i){if(typeof i===\"object\"){r.setField(e,t,JSON.stringify(i))}};r.getPrettyFilter=function(e){e=e.trim().replace(\"][\",\"] [\");var t=/[\\+\\-]?\\[.+?[\\]\\}\\>]\\]/g;var r=e.match(t);e=e.replace(t,\" [] \").trim();var i=e.split(/\\s+/);var n=0;var l=[];for(var a=0;a<i.length;a++){l[a]=i[a]===\"[]\"?r[n++]:i[a]}return l.join(\"\\n\")};r.setField=function(e,t,i){if(!e||!t)return;var n=r.getTiddlerRef(e);var l={title:n};l[t]=i;var a=$tw.wiki.getTiddler(n,true);if(t!==\"text\"&&a&&!a.fields.text){l.text=\"\"}var a=new $tw.Tiddler(a,l);$tw.wiki.addTiddler(a);return a};r.clone=function(e,t){r.setField(e,\"title\",t)};r.setEntry=function(e,t,i){$tw.wiki.setText(r.getTiddlerRef(e),null,t,i)};r.getEntry=function(e,t,i){var n=$tw.wiki.getTiddlerData(r.getTiddlerRef(e),{});return n[t]==null?i:n[t]};r.isLeftVersionGreater=function(e,t){return e!==t&&$tw.utils.checkVersions(e,t)};r.getField=function(e,t,i){i=i||\"\";var n=r.getTiddler(e);return!n?i:n.fields[t]||i};r.getText=function(e,t){return r.getField(e,\"text\",t)};r.setText=function(e,t){r.setField(e,\"text\",t)};r.getFirstElementByClassName=function(e,t,i){var n=(t||document).getElementsByClassName(e)[0];if(!n&&i!==false){var l=\"Missing element with class \"+e+\" inside \"+t;throw new r.Exception.EnvironmentError(l)}return n};r.isDraft=function(e){var t=r.getTiddler(e);return t&&t.isDraft()};r.merge=function(){var e=function(t,r){if(typeof t!==\"object\"){t={}}for(var i in r){if(r.hasOwnProperty(i)){if(r[i]!=null){t[i]=typeof r[i]===\"object\"?e(t[i],r[i]):r[i]}}}return t};return function(t){for(var r=1,i=arguments.length;r<i;r++){var n=arguments[r];if(n!=null&&typeof n===\"object\"){t=e(t,n)}}return t}}();r.drawRaster=function(e,t,r,i,n){var i=parseInt(i)||10;var l=e.canvas;var a=l.width/t;var u=l.width/t;var s=r.x-a/2;var f=r.y-u/2;for(var o=s;o<a;o+=i){e.moveTo(o,f);e.lineTo(o,u)}for(var d=f;d<u;d+=i){e.moveTo(s,d);e.lineTo(a,d)}e.strokeStyle=n||\"#D9D9D9\";e.stroke()};r.isSystemOrDraft=function(e){return $tw.wiki.isSystemTiddler(r.getTiddlerRef(e))?true:r.isDraft(e)};r.mv=function(e,t,i,n){if(e===t||!e||!t)return;n=n!==false;var l=r.getTiddlersByPrefix(e);var a=r.getDataMap();for(var u=l.length;u--;){var s=l[u];var f=s.replace(e,t);if($tw.wiki.tiddlerExists(f)&&!i){return}a[s]=f}for(var s in a){r.setField(s,\"title\",a[s]);if(n)$tw.wiki.deleteTiddler(s)}return a};r.cp=function(e,t,i){return r.mv(e,t,i,false)};r.inArray=function(e,t){return t.indexOf(e)!==-1};r.hasSubString=function(e,t){return e.indexOf(t)!==-1};r.joinAndWrap=function(e,t,r,i){if(!i)i=\" \";return t+e.join(r+i+t)+r};r.keysOfItemsWithProperty=function(e,t,i,n){e=r.getIterableCollection(e);var l=Object.keys(e);var a=[];var n=typeof n===\"number\"?n:l.length;for(var u=0,s=l.length;u<s;u++){var f=l[u];if(typeof e[f]===\"object\"&&e[f][t]){if(!i||e[f][t]===i){a.push(f);if(a.length===n){break}}}}return a};r.keyOfItemWithProperty=function(e,t,i){var n=r.keysOfItemsWithProperty(e,t,i,1);return n.length?n[0]:undefined};r.deleteByPrefix=function(e,t){if(!e)return;t=t||$tw.wiki.allTitles();var i=[];for(var n=t.length;n--;){if(r.startsWith(t[n],e)){$tw.wiki.deleteTiddler(t[n]);i.push(i[n])}}return i};r.getByPrefix=function(e){return r.getMatches(\"[prefix[\"+e+\"]]\")};r.getIterableCollection=function(t){return t instanceof e.DataSet?t.get():t};r.getLookupTable=function(e,t){e=r.getIterableCollection(e);var i=r.getDataMap();var n=Object.keys(e);for(var l=0,a=n.length;l<a;l++){var u=n[l];var s=t?e[u][t]:e[u];var f=typeof s;if(f===\"string\"&&s!==\"\"||f===\"number\"){if(!i[s]){i[s]=t?e[u]:true;continue}}throw'TiddlyMap: Cannot use \"'+ltIndex+'\" as lookup table index'}return i};r.getWithoutNewLines=function(e){if(typeof e===\"string\"){return e.replace(/[\\n\\r]/g,\" \")}};r.getArrayValuesAsHashmapKeys=function(e){return r.getLookupTable(e)};r.getTiddlersWithField=function(e,t,i){if(!i||typeof i!==\"object\")i={};var n=i.tiddlers||$tw.wiki.allTitles();var l=i.limit||0;var a=i.isIncludeDrafts===true;var u=r.getDataMap();var s=Object.keys(n);var f=$tw.utils.hop;for(var o=s.length;o--;){var d=r.getTiddler(n[s[o]]);var c=d.fields;if(f(c,e)&&(!f(c,\"draft.of\")||a)){if(!t||c[e]===t){u[c.title]=d;if(--l===0)break}}}return u};r.getTiddlerWithField=function(e,t){var i=r.getTiddlersWithField(e,t,{limit:1});return Object.keys(i)[0]};r.getTiddlersByPrefix=function(e,t){var t=t||$tw.wiki.allTitles();var i=[];var n=Object.keys(t);for(var l=n.length;l--;){var a=r.getTiddlerRef(t[n[l]]);if(r.startsWith(a,e)){i.push(a)}}return i};r.addTiddler=function(e,t){var i=r.getTiddler(e);if(!t&&i)return i;i=new $tw.Tiddler({title:e,text:\"\"},$tw.wiki.getModificationFields(),$tw.wiki.getCreationFields());$tw.wiki.addTiddler(i);return i};r.getSnapshotTitle=function(e,t){return\"Snapshot – \"+e+\" (\"+(new Date).toDateString()+\")\"+\".\"+(t||\"png\")};r.Exception=t;r.makeDraftTiddler=function(e){var t=$tw.wiki.findDraft(e);if(t){return $tw.wiki.getTiddler(t)}var i=$tw.wiki.getTiddler(e);t=r.generateDraftTitle(e);var n=new $tw.Tiddler(i,{title:t,\"draft.title\":e,\"draft.of\":e},$tw.wiki.getModificationFields());$tw.wiki.addTiddler(n);return n};r.generateDraftTitle=function(e){var t=0,r;do{r=\"Draft \"+(t?t+1+\" \":\"\")+\"of '\"+e+\"'\";t++}while($tw.wiki.tiddlerExists(r));return r};r.touch=function(e){r.setField(e,\"modified\",new Date)};r.getFullScreenApis=function(){var e=document,t=e.body,r={_requestFullscreen:t.webkitRequestFullscreen!==undefined?\"webkitRequestFullscreen\":t.mozRequestFullScreen!==undefined?\"mozRequestFullScreen\":t.msRequestFullscreen!==undefined?\"msRequestFullscreen\":t.requestFullscreen!==undefined?\"requestFullscreen\":\"\",_exitFullscreen:e.webkitExitFullscreen!==undefined?\"webkitExitFullscreen\":e.mozCancelFullScreen!==undefined?\"mozCancelFullScreen\":e.msExitFullscreen!==undefined?\"msExitFullscreen\":e.exitFullscreen!==undefined?\"exitFullscreen\":\"\",_fullscreenElement:e.webkitFullscreenElement!==undefined?\"webkitFullscreenElement\":e.mozFullScreenElement!==undefined?\"mozFullScreenElement\":e.msFullscreenElement!==undefined?\"msFullscreenElement\":e.fullscreenElement!==undefined?\"fullscreenElement\":\"\",_fullscreenChange:e.webkitFullscreenElement!==undefined?\"webkitfullscreenchange\":e.mozFullScreenElement!==undefined?\"mozfullscreenchange\":e.msFullscreenElement!==undefined?\"MSFullscreenChange\":e.fullscreenElement!==undefined?\"fullscreenchange\":\"\"};if(!r._requestFullscreen||!r._exitFullscreen||!r._fullscreenElement){return null}else{return r}};r.flatten=function(e,t){t=t||{};var r=t.delimiter||\".\";var i=t.prefix||\"\";var n={};function l(e,a){Object.keys(e).forEach(function(u){var s=e[u];var f=t.safe&&Array.isArray(s);var o=Object.prototype.toString.call(s);var d=o===\"[object Object]\"||o===\"[object Array]\";var c=a?a+r+u:i+u;if(!f&&d){return l(s,c)}n[c]=s})}l(e);return n};r.unflatten=function(e,t){t=t||{};var i=t.delimiter||\".\";var n={};if(Object.prototype.toString.call(e)!==\"[object Object]\"){return e}function l(e){var t=Number(e);return isNaN(t)||e.indexOf(\".\")!==-1?e:t}Object.keys(e).forEach(function(a){var u=a.split(i);var s=l(u.shift());var f=l(u[0]);var o=n;while(f!==undefined){if(o[s]===undefined){o[s]=typeof f===\"number\"&&!t.object?[]:{}}o=o[s];if(u.length>0){s=l(u.shift());f=l(u[0])}}o[s]=r.unflatten(e[a],t)});return n};r.genUUID=function(){var e=\"0123456789abcdefghijklmnopqrstuvwxyz\".split(\"\");return function(){var t=e,r=new Array(36);var i=0,n;for(var l=0;l<36;l++){if(l==8||l==13||l==18||l==23){r[l]=\"-\"}else if(l==14){r[l]=\"4\"}else{if(i<=2)i=33554432+Math.random()*16777216|0;n=i&15;i=i>>4;r[l]=t[l==19?n&3|8:n]}}return r.join(\"\")}}();exports.utils=r})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/utils",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction\ntype: application/javascript\nmodule-type: library\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/EdgeType\").EdgeType;var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var i=function(t,r,o){this.opt=$tw.tmap.opt;this.logger=$tw.tmap.logger;if(t instanceof i){return t}this._registerPaths(t,r);if(r){this._createView(o)}else if(!this.exists()){return}this._ignoreOnNextRebuild=e.getDataMap();this.rebuildCache()};i.prototype._registerPaths=function(t,i){this.path=this.path||e.getDataMap();this.path.config=this._getConfigPath(t,i);if(this.path.config){this.path.map=this.path.config+\"/map\";this.path.nodeFilter=this.path.config+\"/filter/nodes\";this.path.edgeFilter=this.path.config+\"/filter/edges\"}};i.prototype._getConfigPath=function(t,i){if(t instanceof $tw.Tiddler){return t.fields.title}if(typeof t===\"string\"){t=e.getWithoutPrefix(t,this.opt.path.views+\"/\");if(t&&!e.hasSubString(t,\"/\")){return this.opt.path.views+\"/\"+t}}if(i){return $tw.wiki.generateNewTitle(this.opt.path.views+\"/My view\")}};i.prototype.getPaths=function(){return this.path};i.prototype._createView=function(t){if(this.exists()){this.destroy()}t=new i(t);if(t.exists()){var r=e.mv(t.getRoot(),this.path.config,true,false)}var o={};o.title=this.path.config;o[this.opt.field.viewMarker]=true;o.id=e.genUUID();$tw.wiki.addTiddler(new $tw.Tiddler(e.getTiddler(this.path.config),o))};i.prototype.isLocked=function(){return $tw.wiki.isShadowTiddler(this.path.config)};i.prototype.refresh=function(t){return this.rebuildCache(t)};i.prototype.addPlaceholder=function(t){e.cp(t,this.getRoot()+\"/snapshot\",true)};i.prototype.rebuildCache=function(t){if(!this.exists())return[];var i=!t||t[this.path.config];if(i){this.logger(\"debug\",\"Full reload of view config\")}var r=this._ignoreOnNextRebuild;this._ignoreOnNextRebuild=e.getDataMap();var o=[];for(var s in this.path){var n=this.path[s];if(i||t[n]){o.push(s)}else{continue}if(!i&&r[s]){continue}if(s===\"config\"){this.config=this.getConfig(null,true)}else if(s===\"map\"){this.nodeData=this.getNodeData(null,true)}else if(s===\"nodeFilter\"){this.nodeFilter=this.getNodeFilter(null,true)}else if(s===\"edgeFilter\"){this.edgeFilter=this.getEdgeFilter(null,true)}}return o};i.prototype.exists=function(){return e.tiddlerExists(this.path.config)};i.prototype.getRoot=function(){return this.path.config};i.prototype.getCreationDate=function(t){if(!this.exists())return;var e=$tw.wiki.getTiddler(this.path.config).fields[\"created\"];if(t){return e instanceof Date?$tw.utils.formatDateString(e,\"DDth MMM YYYY\"):\"\"}return e};i.prototype.getLabel=function(){if(this.exists()){return e.getBasename(this.path.config)}};i.prototype.destroy=function(){if(!this.exists())return;var t=\"[prefix[\"+this.getRoot()+\"]]\";e.deleteTiddlers(e.getMatches(t));this.path=e.getDataMap();this.rebuildCache()};i.prototype.getReferences=function(){var t=\"[regexp:text[<\\\\$tiddlymap.*?view=.\"+this.getLabel()+\"..*?>]]\";return e.getMatches(t)};i.prototype.rename=function(t){if(!this.exists()||typeof t!==\"string\")return false;if(e.inArray(\"/\",t)){$tw.tmap.notify('A view name must not contain any \"/\"');return false}var r=this.getLabel();var o=this.opt.path.views+\"/\"+t;var s=this.getRoot();var n=e.mv(s,o,true);if(this.opt.config.sys.defaultView===r){e.setEntry(this.opt.ref.sysUserConf,\"defaultView\",t)}if(this.opt.config.sys.liveTab.fallbackView===r){e.setEntry(this.opt.ref.sysUserConf,\"liveTab.fallbackView\",t)}var a=this.opt.path.views;$tw.wiki.each(function(o,s){if(o.fields[\"tmap.open-view\"]===r){e.setField(s,\"tmap.open-view\",t)}else if(e.startsWith(s,a)){var n=new i(s);var h=n.getNodeData();for(var l in h){if(h[l][\"open-view\"]===r){h[l][\"open-view\"]=t}}n.saveNodeData(h)}});this._registerPaths(t);this.rebuildCache()};i.prototype.isEnabled=function(t){return e.isTrue(this.getConfig(t),false)};i.prototype.getConfig=function(t,i,r){if(!this.exists()){var o=e.getDataMap()}else if(!i&&this.config){var o=this.config}else{var s=$tw.wiki.getTiddler(this.path.config).fields;var o=e.getPropertiesByPrefix(s,\"config.\")}return t?o[e.startsWith(t,\"config.\")?t:\"config.\"+t]:o};i.prototype.getStabilizationIterations=function(){return 1e3};i.prototype.setStabilizationIterations=function(t){};i.prototype.getHierarchyEdgeTypes=function(){if(this.getConfig(\"layout.active\")!==\"hierarchical\")return[];var t=e.getPropertiesByPrefix(this.getConfig(),\"config.layout.hierarchical.order-by-\",true);var i=e.getDataMap();for(var r in t){if(t[r]===\"true\"){var o=e.getTiddler($tw.tmap.indeces.tById[r]);if(o){i[e.getBasename(o.fields.title)]=true}}}return i};i.prototype.setConfig=function(){if(arguments[0]==null)return;if(arguments.length===1&&typeof arguments[0]===\"object\"){for(var t in arguments[0]){this.setConfig(t,arguments[0][t])}}else if(arguments.length===2&&typeof arguments[0]===\"string\"){var t=e.getWithoutPrefix(arguments[0],\"config.\");var i=arguments[1];if(i===undefined){return}if(i===null){this.logger(\"debug\",\"Removing config\",t);delete this.config[\"config.\"+t]}else{if(t===\"edge_type_namespace\"&&typeof i===\"string\"&&i.length){i=i.replace(/([^:])$/,\"$1:\")}}this.logger(\"log\",\"Setting config\",t,i);this.config[\"config.\"+t]=i}else{return}$tw.wiki.addTiddler(new $tw.Tiddler($tw.wiki.getTiddler(this.path.config),this.config));this._ignoreOnNextRebuild[\"config\"]=true};i.prototype.isExplicitNode=function(t){var e=$tw.utils.escapeRegExp(this._getAddNodeFilterPart(t));return this.getNodeFilter(\"expression\").match(e)};i.prototype.isLiveView=function(){return this.getLabel()===this.opt.misc.liveViewLabel};i.prototype.removeNodeFromFilter=function(t){if(!this.isExplicitNode(t))return false;var e=this.getNodeFilter(\"expression\");var i=e.replace(this._getAddNodeFilterPart(t),\"\");this.setNodeFilter(i);return true};i.prototype._getAddNodeFilterPart=function(t){if(!t){throw\"Supplied param is not a node!\"}var e=typeof t===\"object\"?t.id:t;return\"[field:tmap.id[\"+e+\"]]\"};i.prototype.setNodeFilter=function(t,i){if(!this.exists())return;t=t.replace(/[\\n\\r]/g,\" \");if(this.getNodeFilter.expression===t){return}if(this.isLiveView()&&!i){var r=\"You must not change the live view's node filter!\";$tw.tmap.notify(r);return}e.setField(this.path.nodeFilter,\"filter\",t);this.logger(\"debug\",\"Node filter set to\",t);this.nodeFilter=this.getNodeFilter(null,true);this._ignoreOnNextRebuild[\"nodeFilter\"]=true};i.prototype.setEdgeFilter=function(t){if(!this.exists())return;t=t.replace(/[\\n\\r]/g,\" \");if(this.getEdgeFilter.expression===t){return}e.setField(this.path.edgeFilter,\"filter\",t);this.logger(\"debug\",\"Edge filter set to\",t);this.edgeFilter=this.getEdgeFilter(null,true);this._ignoreOnNextRebuild[\"edgeFilter\"]=true};i.prototype.appendToNodeFilter=function(t){var t=this.getNodeFilter(\"expression\")+\" \"+t;this.setNodeFilter(t);return true};i.prototype.addNodeToView=function(t){if(this.isExplicitNode(t)){return}this.appendToNodeFilter(this._getAddNodeFilterPart(t));this.saveNodePosition(t)};i.prototype.getEdgeFilter=function(t,i){if(!i&&this.edgeFilter){var r=this.edgeFilter}else{var r=e.getDataMap();var o=$tw.wiki.getTiddler(this.path.edgeFilter);r.expression=o&&o.fields.filter?o.fields.filter:this.opt.filter.defaultEdgeFilter;r.compiled=$tw.wiki.compileFilter(r.expression)}return t?r[t]:r};i.prototype.getNodeFilter=function(t,i){if(!i&&this.nodeFilter){var r=this.nodeFilter}else{var r=e.getDataMap();var o=$tw.wiki.getTiddler(this.path.nodeFilter);r.expression=o&&o.fields.filter?o.fields.filter:\"\";r.compiled=$tw.wiki.compileFilter(r.expression)}return t?r[t]:r};i.prototype.getNodeData=function(t,i){var r=!i&&this.nodeData?this.nodeData:e.parseFieldData(this.path.map,\"text\",{});return t?r[t]:r};i.prototype.isEqual=function(t){var t=new i(t);return this.getRoot()===t.getRoot()};i.prototype.saveNodeData=function(){if(!this.exists())return;var t=arguments;var i=this.getNodeData();if(t.length===2){if(typeof t[1]===\"object\"){if(t[1]===null){i[t[0]]=undefined}else{i[t[0]]=$tw.utils.extend(i[t[0]]||{},t[1])}}}else if(t.length===1&&typeof t[0]===\"object\"){$tw.tmap.logger(\"log\",\"Storing data in\",this.path.map);$tw.utils.extend(i,t[0])}else{return}e.writeFieldData(this.path.map,\"text\",i);this.nodeData=i;this._ignoreOnNextRebuild[\"map\"]=true};i.prototype.saveNodePosition=function(t){if(t.id&&t.x&&t.y){this.saveNodeData(t.id,{x:t.x,y:t.y})}};i.prototype.saveNodeStyle=function(t,e){if(!this.exists())return;var i=this.getNodeData()[t];if(i){for(var r in i){if(r!==\"x\"&&r!==\"y\")i[r]=undefined}}this.saveNodeData(t,e)};exports.ViewAbstraction=i})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/config/vis": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/config/vis\ntype: application/javascript\nmodule-type: library\n\n@preserve\n\n\\*/\n(function(){\"use strict\";exports.config={locale:\"en_EN\",clickToUse:true,autoResize:false,height:\"100%\",width:\"100%\",configure:{enabled:false},interaction:{dragNodes:true,dragView:true,hideEdgesOnDrag:false,hideNodesOnDrag:false,hover:false,navigationButtons:true,multiselect:true,selectable:true,selectConnectedEdges:true,tooltipDelay:300,zoomView:true,keyboard:{enabled:false,speed:{x:10,y:10,zoom:.02},bindToWindow:false}},manipulation:{initiallyActive:true},nodes:{shape:\"box\",color:{border:\"#2B7CE9\",background:\"#97C2FC\"}},edges:{smooth:{enabled:true},color:{color:\"#848484\",inherit:false},arrows:{to:{enabled:true}}},physics:{forceAtlas2Based:{gravitationalConstant:-300,springLength:100,springConstant:.095,centralGravity:.015,damping:.4},solver:\"forceAtlas2Based\",stabilization:{enabled:true,iterations:1e3,updateInterval:10,onlyDynamicEdges:false,fit:false}}}})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/config/vis",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/tmap": {
            "text": "/*\\\ntitle: $:/plugins/felixhayashi/tiddlymap/js/tmap\ntype: application/javascript\nmodule-type: macro\n\nIn connection with tiddlymap, this macro allows us to access\nsystem information from within tiddlers as well as to execute some\nutil functions.\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var r=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;exports.name=\"tmap\";exports.params=function(r){var e=[];for(var t=0;t<r;t++){e.push({name:\"arg\"+t})}return e}(5);var e=function(){return};exports.run=function(){var r=$tw.tmap.utils;switch(arguments[0]){case\"basename\":return r.getBasename(arguments[1]||this.getVariable(\"currentTiddler\"));case\"testJSON\":var e=$tw.wiki.getTiddler(this.getVariable(\"currentTiddler\"));try{JSON.parse(e.fields[arguments[1]]);return\"valid\"}catch(t){return\"malformed\"}case\"splitAndSelect\":var a=this.getVariable(\"currentTiddler\");var n=a.split(arguments[1])[arguments[2]];return n!=null?n:a;case\"concat\":var a=\"\";for(var s=1,u=arguments.length;s<u;s++){a+=arguments[s]}return a;case\"uuid\":return r.genUUID();case\"scale\":var a=\"\";for(var s=1,u=parseInt(arguments[1]);s<u;s++){a+=\"[[\"+s+\"]]\"}return a;case\"option\":var i=$tw.tmap.opt;var l=arguments[1].split(\".\");for(var s=0;s<l.length;s++){if(typeof i==\"object\"&&i[l[s]]){i=i[l[s]]}else{return\"property doesn't exist\"}}if(!(typeof i==\"string\"))return\"property is not a string\";return i}return\"wrong signature\"}})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/tmap",
            "type": "application/javascript",
            "module-type": "macro"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/caretaker": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/caretaker\ntype: application/javascript\nmodule-type: startup\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/config/vis\").config;var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var i=require(\"$:/plugins/felixhayashi/tiddlymap/js/fixer\").fixer;var a=require(\"$:/plugins/felixhayashi/tiddlymap/js/Adapter\").Adapter;var r=require(\"$:/plugins/felixhayashi/tiddlymap/js/DialogManager\").DialogManager;var s=require(\"$:/plugins/felixhayashi/tiddlymap/js/CallbackManager\").CallbackManager;var l=require(\"$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction\").ViewAbstraction;var d=require(\"$:/plugins/felixhayashi/tiddlymap/js/EdgeType\").EdgeType;var p=require(\"$:/plugins/felixhayashi/tiddlymap/js/NodeType\").NodeType;var n=require(\"$:/plugins/felixhayashi/vis/vis.js\");var o=function(e){if(e.path)return;var t=e;t.path={pluginRoot:\"$:/plugins/felixhayashi/tiddlymap\",edgeTypes:\"$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes\",nodeTypes:\"$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes\",listEdgeTypes:\"$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-list:\",fieldEdgeTypes:\"$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-field:\",views:\"$:/plugins/felixhayashi/tiddlymap/graph/views\",options:\"$:/plugins/felixhayashi/tiddlymap/config\",dialogs:\"$:/plugins/felixhayashi/tiddlymap/dialog\",footers:\"$:/plugins/felixhayashi/tiddlymap/dialogFooter\",tempRoot:\"$:/temp/tmap\",localHolders:\"$:/temp/tmap/holders\"};var i=t.path;t.ref={defaultViewHolder:\"$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder\",graphBar:\"$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar\",sysUserConf:\"$:/plugins/felixhayashi/tiddlymap/config/sys/user\",visUserConf:\"$:/plugins/felixhayashi/tiddlymap/config/vis/user\",welcomeFlag:\"$:/plugins/felixhayashi/tiddlymap/flag/welcome\",focusButton:\"$:/plugins/felixhayashi/tiddlymap/misc/focusButton\",sysMeta:\"$:/plugins/felixhayashi/tiddlymap/misc/meta\",liveTab:\"$:/plugins/felixhayashi/tiddlymap/hook/liveTab\",sidebarBreakpoint:\"$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint\"};t.misc={unknownEdgeLabel:\"tmap:undefined\",liveViewLabel:\"Live View\",defaultViewLabel:\"Default\"};t.config={sys:{field:{nodeLabel:\"caption\",nodeIcon:\"icon\",nodeInfo:\"description\",viewMarker:\"isview\"},liveTab:{fallbackView:t.misc.liveViewLabel},suppressedDialogs:{},edgeClickBehaviour:\"manager\",debug:\"false\",notifications:\"true\",editNodeOnCreate:\"false\",singleClickMode:\"false\",editorMenuBar:{showNeighScopeButton:\"true\",showScreenshotButton:\"true\"}}};t.filter={nodeTypes:\"[prefix[\"+t.path.nodeTypes+\"]]\",edgeTypes:\"[prefix[\"+t.path.edgeTypes+\"]]\",listEdgeTypes:\"[prefix[\"+t.path.listEdgeTypes+\"]]\",fieldEdgeTypes:\"[prefix[\"+t.path.fieldEdgeTypes+\"]]\",views:\"[\"+t.config.sys.field.viewMarker+\"[true]]\"};t.filter.defaultEdgeFilter=t.filter.edgeTypes+\"-[suffix[tw-body:link]]\"+\"-[suffix[tw-list:tags]]\"+\"-[suffix[tw-list:list]]\";var a=t.selector={};var r=\"[all[tiddlers+shadows]!has[draft.of]]\";a.allEdgeTypes=r+\" +\"+t.filter.edgeTypes;a.allEdgeTypesById=a.allEdgeTypes+\" +[removeprefix[\"+i.edgeTypes+\"/]]\";a.allNodeTypes=r+\" +\"+t.filter.nodeTypes;a.allNodeTypesById=a.allNodeTypes+\" +[removeprefix[\"+i.nodeTypes+\"/]]\";a.allViews=r+\" +\"+t.filter.views;a.allViewsByLabel=a.allViews+\"+[removeprefix[\"+i.views+\"/]]\";a.allPotentialNodes=\"[all[tiddlers]!is[system]!has[draft.of]]\";a.allListEdgeStores=r+\" +\"+t.filter.listEdgeTypes+\" +[removeprefix[\"+i.listEdgeTypes+\"]]\";a.allFieldEdgeStores=r+\" +\"+t.filter.fieldEdgeTypes+\" +[removeprefix[\"+i.fieldEdgeTypes+\"]]\"};var f=function(i){var a=i;o(a);if(!a.config)a.config=t.getDataMap();a.config.sys=t.merge(a.config.sys,t.unflatten($tw.wiki.getTiddlerData(a.ref.sysUserConf)));a.config.vis=t.merge({},e,t.parseFieldData(a.ref.visUserConf));if(!a.field)a.field=t.getDataMap();$tw.utils.extend(a.field,a.config.sys.field)};var g=function(e){$tw.tmap.start(\"Attaching Indeces\");if(!e.indeces){e.indeces={};var t=$tw.tmap.opt.path.pluginRoot;e.indeces.tmapTiddlers=$tw.wiki.getPluginInfo(t).tiddlers}var i=$tw.wiki.allTitles();u(e.indeces,i);m(e.indeces);y(e.indeces);$tw.tmap.stop(\"Attaching Indeces\")};var u=function(e,a){e=e||$tw.tmap.indeces;a=a||$tw.wiki.allTitles();i.fixId();var r=e.tById={};var s=e.idByT={};$tw.wiki.each(function(e,i){if(t.isSystemOrDraft(e))return;var a=e.fields[\"tmap.id\"];if(!a){a=t.genUUID();t.setField(e,\"tmap.id\",a)}r[a]=i;s[i]=a})};var m=function(e){e=e||$tw.tmap.indeces;var i=$tw.tmap.opt.path.nodeTypes;var a=e.glNTy=[];$tw.wiki.eachTiddlerPlusShadows(function(e,r){if(t.startsWith(r,i)){a.push(new p(r))}});a.sort(function(e,t){return e.priority-t.priority})};var y=function(e){e=e||$tw.tmap.indeces;var i=$tw.tmap.opt.path.edgeTypes;var a=$tw.tmap.opt.path.listEdgeTypes;var r=$tw.tmap.opt.path.fieldEdgeTypes;var s=e.allETy=t.getDataMap();var l=e.liETy=t.getDataMap();var p=e.fiETy=t.getDataMap();var n=e.maETyFiNa=t.getDataMap();$tw.wiki.eachTiddlerPlusShadows(function(e,o){if(t.startsWith(o,i)){var f=new d(o);s[f.id]=f;if(t.startsWith(o,a)){l[f.id]=f;n[f.getId(true)]=true}else if(t.startsWith(o,r)){p[f.id]=f;n[f.getId(true)]=true}}})};var w=function(e){};var c=function(e){var i=e;var a=function(){};if(t.isTrue($tw.tmap.opt.config.sys.debug,false)&&console){i.logger=function(){if(arguments.length<2)return;var e=Array.prototype.slice.call(arguments);var t=e.shift(e);var i=console.hasOwnProperty(t)?t:\"debug\";console[i].apply(console,e)};i.start=function(e){console.time(\"[timer] \"+e)};i.stop=function(e){console.timeEnd(\"[timer] \"+e)}}else{i.logger=i.start=i.stop=a}i.notify=t.isTrue($tw.tmap.opt.config.sys.notifications)?t.notify:a};var h=function(){for(var e=$tw.tmap.registry.length;e--;){var t=$tw.tmap.registry[e];if(t.isZombieWidget()){$tw.tmap.logger(\"warn\",\"A graph has been removed.\");t.destruct();$tw.tmap.registry.splice(e,1)}}};var v=function(e){var i=e.fields[\"tmap.id\"];if(!i)return;var a=$tw.tmap.opt;var r=t.getTiddlersWithField(\"tmap.id\",i,{limit:2});delete r[e.fields.title];var s=Object.keys(r)[0];if(s){var l={param:{changedTiddler:e.fields.title,existingTiddler:s,id:i}};$tw.tmap.dialogManager.open(\"dublicateIdInfo\",l)}if(s){t.setField(e,\"tmap.edges\",undefined);$tw.tmap.adapter.assignId(e,true)}};var $=function(e){if(!e)e=$tw.tmap;if(!e.opt)e.opt=t.getDataMap();f(e.opt);c(e,e.opt);$tw.tmap.logger(\"warn\",\"Rebuilt globals\")};var T=null;var x=function(e){if(e[\"$:/HistoryList\"]){var i=t.getField(\"$:/HistoryList\",\"current-tiddler\")}else if(e[\"$:/temp/focussedTiddler\"]){var i=t.getField(\"$:/temp/focussedTiddler\",\"text\")}if(i!=null&&T!==i){T=i;t.setField(\"$:/temp/tmap/currentTiddler\",\"text\",i)}};var k=function(e){if(t.isTrue($tw.tmap.opt.config.sys.debug,false)){for(var i in e){if(e[i].deleted){$tw.tmap.logger(\"warn\",\"Tiddler deleted:\",i)}else{$tw.tmap.logger(\"warn\",\"Tiddler modified:\",i,t.getTiddler(i))}}}};var b=[\"$:/temp/tiddlymap/quickConnectButton\",\"$:/temp/tmap/state/focus\"];var E=function(){window.addEventListener(\"click\",function(e){for(var i=b.length;i--;){if(t.getText(b[i]))break}if(i===-1)return;if(!$tw.utils.hasClass(e.target,\"tc-drop-down\")&&!t.getAncestorWithClass(e.target,\"tc-drop-down\")){for(var i=b.length;i--;){t.setText(b[i],\"\")}}},false)};var M=function(e){var i=0;var a={};a[$tw.tmap.opt.path.nodeTypes]=m;a[$tw.tmap.opt.path.edgeTypes]=y;a[$tw.tmap.opt.path.options]=$;$tw.wiki.addEventListener(\"change\",function(r){$tw.tmap.start(\"Caretaker handling changes\");$tw.tmap.logger(\"warn\",\"=== Refresh \"+i++ +\" ===\");k(r);e.handleChanges(r);var s=[];for(var l in r){var d=t.getTiddler(l);if(t.isDraft(d))continue;if($tw.wiki.isSystemTiddler(l)){for(var p in a){if(t.startsWith(l,p)&&!s[p]){$tw.tmap.logger(\"warn\",\"Rebuilding index:\",p);a[p].call(this);s[p]=true;break}}continue}var d=t.getTiddler(l);if(d){v(d);$tw.tmap.adapter.assignId(d)}else{var n=$tw.tmap.indeces.idByT[l];if(!n){$tw.tmap.logger(\"warn\",\"Ignoring Tiddler\",l,\"without id; Assuming draft\");continue}var o=t.getTiddlerWithField(\"tmap.id\",n);if(o){$tw.tmap.logger(\"warn\",\"Tiddler\",l,\"renamed into\",o)}else{$tw.tmap.logger(\"warn\",\"Tiddler\",l,\"removed\");$tw.tmap.adapter.deleteNode(n)}}}x(r);$tw.tmap.stop(\"Caretaker handling changes\")})};var B=function(){t.deleteByPrefix(\"$:/temp/felixhayashi\");t.deleteByPrefix(\"$:/temp/tiddlymap\");t.deleteByPrefix(\"$:/temp/tmap\")};var D=function(){var e=$tw.tmap.opt.config.sys.defaultView;if(e){t.setField($tw.tmap.opt.ref.defaultViewHolder,\"text\",e)}};var I=function(){if(t.tiddlerExists($tw.tmap.opt.ref.sysMeta))return;$tw.tmap.logger(\"warn\",\"Creating meta file\");var e=$tw.wiki.getTiddler($tw.tmap.opt.path.pluginRoot);$tw.wiki.setTiddlerData($tw.tmap.opt.ref.sysMeta,{originalVersion:e.fields.version,dataStructureState:\"0.6.9\",showWelcomeMessage:true})};exports.name=\"tmap.caretaker\";exports.platforms=[\"browser\"];exports.after=[\"startup\"];exports.before=[\"rootwidget\"];exports.synchronous=true;exports.startup=function(){$tw.tmap=t.getDataMap();$tw.tmap.utils=t;$tw.tmap.keycharm=n.keycharm;$tw.tmap.NodeType=p;$tw.tmap.EdgeType=d;$tw.tmap.ViewAbstraction=l;$($tw.tmap);I();B();g($tw.tmap);D();$tw.tmap.adapter=new a;i.fix();$tw.tmap.callbackManager=new s;$tw.tmap.dialogManager=new r($tw.tmap.callbackManager);$tw.tmap.registry=[];window.setInterval(h,5e3);M($tw.tmap.callbackManager);E();$tw.tmap.logger(\"warn\",\"TiddlyMap's caretaker successfully started\")}})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/caretaker",
            "type": "application/javascript",
            "module-type": "startup"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/startup/listener": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/startup/listener\ntype: application/javascript\nmodule-type: startup\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/plugins/felixhayashi/tiddlymap/js/NodeType\").NodeType;var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/EdgeType\").EdgeType;var a=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var i=require(\"$:/plugins/felixhayashi/tiddlymap/js/config/vis\").config;var r=function(){this.adapter=$tw.tmap.adapter;this.wiki=$tw.wiki;this.logger=$tw.tmap.logger;this.opt=$tw.tmap.opt;this.dialogManager=$tw.tmap.dialogManager;a.addListeners({\"tmap:tm-remove-edge\":this.handleRemoveEdge,\"tmap:tm-load-type-form\":this.handleLoadTypeForm,\"tmap:tm-save-type-form\":this.handleSaveTypeForm,\"tmap:tm-create-type\":this.handleCreateType,\"tmap:tm-create-edge\":this.handleCreateEdge,\"tmap:tm-suppress-dialog\":this.handleSuppressDialog,\"tmap:tm-generate-widget\":this.handleGenerateWidget,\"tmap:tm-download-graph\":this.handleDownloadGraph,\"tmap:tm-configure-system\":this.handleConfigureSystem,\"tmap:tm-manage-edge-types\":this.handleOpenTypeManager,\"tmap:tm-manage-node-types\":this.handleOpenTypeManager,\"tmap:tm-cancel-dialog\":this.handleCancelDialog,\"tmap:tm-confirm-dialog\":this.handleConfirmDialog},$tw.rootWidget,this)};r.prototype.handleCancelDialog=function(e){a.setField(e.param,\"text\",\"\")};r.prototype.handleConfirmDialog=function(e){a.setField(e.param,\"text\",\"1\")};r.prototype.handleSuppressDialog=function(e){if(a.isTrue(e.paramObject.suppress,false)){a.setEntry(this.opt.ref.sysUserConf,\"suppressedDialogs.\"+e.paramObject.dialog,true)}};r.prototype.handleDownloadGraph=function(e){var t=this.adapter.getGraph({view:e.paramObject.view});t.nodes=a.convert(t.nodes,\"array\");t.edges=a.convert(t.edges,\"array\");var i=\"$:/temp/tmap/export\";a.setField(i,\"text\",JSON.stringify(t,null,2));$tw.rootWidget.dispatchEvent({type:\"tm-download-file\",param:i,paramObject:{filename:e.paramObject.view+\".json\"}})};r.prototype.handleConfigureSystem=function(){var e=this.adapter.getAllPotentialNodes();var t=this.adapter.getEdgesForSet(e);var r=$tw.wiki.getTiddler(this.opt.path.pluginRoot).fields;var p=$tw.wiki.getTiddlerData(this.opt.ref.sysMeta);var d=a.getTiddler(this.opt.ref.liveTab).hasTag(\"$:/tags/SideBar\");var s={numberOfNodes:\"\"+e.length,numberOfEdges:\"\"+Object.keys(t).length,pluginVersion:\"v\"+r.version,dataStructureVersion:\"v\"+p.dataStructureState,dialog:{preselects:{liveTab:\"\"+d,\"vis-inherited\":JSON.stringify(i),\"config.vis\":a.getText(this.opt.ref.visUserConf),\"config.sys\":this.opt.config.sys}}};var o=\"configureTiddlyMap\";this.dialogManager.open(o,s,function(e,t){if(!e)return;var i=a.getPropertiesByPrefix(t.fields,\"config.sys.\",true);$tw.wiki.setTiddlerData(this.opt.ref.sysUserConf,i);if(a.isTrue(t.fields.liveTab,false)){a.setField(this.opt.ref.liveTab,\"tags\",\"$:/tags/SideBar\")}else{$tw.wiki.deleteTiddler(this.opt.ref.liveTab)}a.setField(this.opt.ref.visUserConf,\"text\",t.fields[\"config.vis\"])}.bind(this))};r.prototype.handleGenerateWidget=function(e){if(!e.paramObject)e.paramObject={};var t={dialog:{preselects:{view:e.paramObject.view||this.opt.misc.defaultViewLabel}}};this.dialogManager.open(\"getWidgetCode\",t)};r.prototype.handleRemoveEdge=function(e){this.adapter.deleteEdge(e.paramObject)};r.prototype.handleCreateEdge=function(e){var t=e.paramObject.from;var i=e.paramObject.to;var r=e.paramObject.force;if(!t||!i)return;if(a.tiddlerExists(t)&&a.tiddlerExists(i)||r){a.addTiddler(i);a.addTiddler(t);var p={from:this.adapter.makeNode(t).id,to:this.adapter.makeNode(i).id,type:e.paramObject.label,id:e.paramObject.id};this.adapter.insertEdge(p);$tw.tmap.notify(\"Edge inserted\")}};r.prototype.handleOpenTypeManager=function(e){if(!e.paramObject)e.paramObject={};var t=e.type.match(/tmap:tm-(.*)/)[1];if(t===\"manage-edge-types\"){var a=\"Edge-Type Manager\";var i=this.opt.selector.allEdgeTypes;var r=this.opt.path.edgeTypes}else{var a=\"Node-Type Manager\";var i=this.opt.selector.allNodeTypes;var r=this.opt.path.nodeTypes}var p={mode:t,topic:a,searchSelector:i,typeRootPath:r};var d=this.dialogManager.open(\"MapElementTypeManager\",p);if(e.paramObject.type){this.handleLoadTypeForm({paramObject:{mode:t,id:e.paramObject.type,output:d.fields[\"output\"]}})}};r.prototype.handleLoadTypeForm=function(i){var r=i.paramObject.output;var p=i.paramObject.mode===\"manage-edge-types\"?new t(i.paramObject.id):new e(i.paramObject.id);p.save(r);if(i.paramObject.mode===\"manage-edge-types\"){var d=this.adapter.selectEdgesByType(p);var s=Object.keys(d).length;a.setField(r,\"temp.usageCount\",s)}$tw.wiki.addTiddler(new $tw.Tiddler(a.getTiddler(r),{typeTRef:p.fullPath,\"temp.idImmutable\":p.isShipped?\"true\":\"\",\"temp.newId\":p.id,\"vis-inherited\":JSON.stringify(this.opt.config.vis)}));a.deleteByPrefix(\"$:/state/tabs/MapElementTypeManager\")};r.prototype.handleSaveTypeForm=function(i){var r=a.getTiddler(i.paramObject.output);if(!r)return;var p=i.paramObject.mode;var d=p===\"manage-edge-types\"?new t(r.fields.id):new e(r.fields.id);if(a.isTrue(r.fields[\"temp.deleteType\"],false)){this.deleteType(p,d,r)}else{this.saveType(p,d,r)}};r.prototype.deleteType=function(e,t,i){this.logger(\"debug\",\"Deleting type\",t);if(e===\"manage-edge-types\"){this.adapter._processEdgesWithType(t,{action:\"delete\"})}else{this.adapter.removeNodeType(t)}this.wiki.addTiddler(new $tw.Tiddler({title:a.getTiddlerRef(i)}));$tw.tmap.notify(\"Deleted type\")};r.prototype.saveType=function(t,i,r){var p=a.getTiddler(r);i.loadFromTiddler(p);i.save();var d=p.fields[\"temp.newId\"];if(d&&d!==p.fields[\"id\"]){if(t===\"manage-edge-types\"){this.adapter._processEdgesWithType(i,{action:\"rename\",newName:d})}else{var s=new e(d);s.load(i);s.save();$tw.wiki.deleteTiddler(i.fullPath)}a.setField(p,\"id\",d)}$tw.tmap.notify(\"Saved type data\")};r.prototype.handleCreateType=function(a){var i=a.paramObject.id||\"New type\";var r=a.paramObject.mode===\"manage-edge-types\"?new t(i):new e(i);r.save();this.handleLoadTypeForm({paramObject:{id:r.id,mode:a.paramObject.mode,output:a.paramObject.output}})};r.prototype.getTypeFromEvent=function(a){return a.paramObject.mode===\"manage-edge-types\"?new t(a.paramObject.id):new e(a.paramObject.id)};exports.name=\"tmap.listener\";exports.platforms=[\"browser\"];exports.after=[\"rootwidget\",\"tmap.caretaker\"];exports.before=[\"story\"];exports.synchronous=true;exports.startup=function(){new r}})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/startup/listener",
            "type": "application/javascript",
            "module-type": "startup"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/cannotDeleteViewDialog": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/cannotDeleteViewDialog",
            "subtitle": "{{$:/core/images/locked-padlock}} You cannot delete this view!",
            "text": "\\rules except wikilink\n\nIt is not possible to delete the current view as ''<<count>>'' tiddlers\nare referencing it. To delete the view you must first remove the tiddlymap\nwidgets in the tiddlers listed below or change their view attributes.\n\n''References''\n\n<ul>\n<$list filter=<<filter>> variable=\"item\">\n  <li><$link><<item>></$link></li>\n</$list>\n</ul>\n\nAfter the references are removed, you may delete the view."
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/configureTiddlyMap": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/configureTiddlyMap",
            "subtitle": "{{$:/core/images/options-button}} Configuration of TiddlyMap",
            "text": "\\rules except wikilink\n\n\\define vis-refresh-trigger() $(temp)$/vis-refresh\n\n<div class=\"tmap-flash-message tmap-info\">\n   {{$:/core/images/info-button}}\n   Please visit the [[online docs|http://tiddlymap.org#Changing%20TiddlyMap's%20default%20configuration]]\n   for more information about the following options.\n</div>\n\n<fieldset><legend>Statistics</legend>\n  <table class=\"tmap-key-value-table\">\n    <tr>\n      <th align=\"left\">Plugin version</th>\n      <td><<pluginVersion>></td>\n    </tr>\n<!--\n    <tr>\n      <th align=\"left\">Datastructure version</th>\n      <td><<dataStructureVersion>></td>\n    </tr>\n-->\n    <tr>\n      <th align=\"left\">Nodes in system</th>\n      <td><<numberOfNodes>></td>\n    </tr>\n    <tr>\n      <th align=\"left\">Edges in system</th>\n      <td><<numberOfEdges>></td>\n    </tr>\n  </table>\n</fieldset>\n\n<fieldset>\n  <legend>Field settings</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-text\"\n        title:\"Node-icon field\"\n        field:\"config.sys.field.nodeIcon\" \n        descr:\"Local image used as node image in the graphs.\">>\n    <<tmap-row type:\"input-text\"\n        title:\"Node-label field\"\n        field:\"config.sys.field.nodeLabel\" \n        descr:\"Alternative node label to use instead of the title.\">>\n    <<tmap-row type:\"input-text\"\n        title:\"Node-info field\"\n        field:\"config.sys.field.nodeInfo\" \n        descr:\"Field used as tooltip when hovering a node in a graph.\"\n        note:\"It is prohibited to use the text field here.\">>\n  </table>   \n</fieldset>\n\n<fieldset><legend>System's talkativeness</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Debug output\"\n        field:\"config.sys.debug\" \n        descr:\"Set this to true if you want debug information to be\n               displayed in the browser console.\">>\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Show notifications\"\n        field:\"config.sys.notifications\" \n        descr:\"Set this to true if you want to receive fade-out\n               notifications for important events.\">>\n  </table>   \n</fieldset>\n\n<fieldset><legend>Interaction & behaviour</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Allow single click mode\"\n        field:\"config.sys.singleClickMode\" \n        descr:\"A single click on a node is sufficient to open the\n               corresponding tiddler.\"\n        note:\"Drag and drop will still work and does not cause a\n              tiddler to be opened.\">>\n    <<tmap-row type:\"input-select\"\n        title:\"Edge click behaviour\"\n        field:\"config.sys.edgeClickBehaviour\" \n        selectFilter:\"[[nothing|Nothing]]\n                      [[manager|Open edge-type manager]]\"\n        descr:\"What should happen when you click on an edge?\">>\n    <$macrocall type=\"input-select\"\n          $name=\"tmap-row\"\n          title=\"Default startup view\"\n          field=\"config.sys.defaultView\"\n          nochoice=\"Last view used at startup\"\n          selectFilter=<<tmap \"option\" \"selector.allViewsByLabel\">>\n          descr=\"The view to display at startup\" />\n  </table>\n</fieldset>\n\n<fieldset><legend>Live tab</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Show Live tab\"\n        field:\"liveTab\" \n        descr:\"Show or hide the live tab in the sidebar.\">>\n    <$macrocall type=\"input-select\"\n        $name=\"tmap-row\"\n        title=\"Fallback view\"\n        field=\"config.sys.liveTab.fallbackView\" \n        selectFilter=<<tmap \"option\" \"selector.allViewsByLabel\">>\n        descr=\"The view to display in the sidebar's live tab in case the current tiddler did not specify a view to open.\" />\n  </table>\n</fieldset>\n\n<fieldset><legend>Editor menu bar</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Show Neighbour&shy;hood button\"\n        field:\"config.sys.editorMenuBar.showNeighScopeButton\" \n        descr:\"Show or hide the neighbourhood scope button from the menu.\">>\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Show Screen&shy;shot button\"\n        field:\"config.sys.editorMenuBar.showScreenshotButton\" \n        descr:\"Show or hide the screenshot button.\">>\n  </table>   \n</fieldset>\n\n<fieldset><legend>Global Visjs configurations</legend>\n  <div class=\"tmap-flash-message tmap-info\">\n     {{$:/core/images/info-button}}\n     The global vis configurations will affect all views and their\n     elements (nodes and edges) unless they are overridden on a lower\n     level. All options below are documented at\n     [[vis.js.org|http://visjs.org/docs/network]].\n  </div>\n  <table class=\"tmap-config-table\">\n    <tr>\n      <td>Reset:</td>\n      <td>\n        <div class=\"tmap-button-wrapper\">\n          <$button>Reset global configurations\n            <$action-setfield config.vis=\"\" />\n            <$action-setfield $tiddler=<<vis-refresh-trigger>> text=\"\" />\n          </$button>\n       </div>\n     </td>\n     <td>\n       Press the reset button to clear all global vis configurations\n       you did in the past.\n     </td>\n    </tr>\n  </table>\n  <$tmap-config\n      mode=\"manage-config\"\n      inherited=\"vis-inherited\"\n      extension=\"config.vis\"\n      refresh-trigger=<<vis-refresh-trigger>> />\n</fieldset>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/configureView": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/configureView",
            "subtitle": "{{$:/core/images/options-button}} View configuration -- <<view>>",
            "text": "\\rules except wikilink\n\n\\define vis-refresh-trigger() $(temp)$/vis-refresh\n\n<div class=\"tmap-flash-message tmap-info\">\n   {{$:/core/images/info-button}}\n   All configurations __only__ affect this view.\n</div>\n\n<fieldset><legend>Statistics</legend>\n  <table class=\"tmap-key-value-table\">\n    <tr>\n      <th align=\"left\">Created on</th>\n      <td><<createdOn>></td>\n    </tr>\n    <tr>\n      <th align=\"left\">Nodes contained in graph</th>\n      <td><<numberOfNodes>></td>\n    </tr>\n    <tr>\n      <th align=\"left\">Edges contained in graph</th>\n      <td><<numberOfEdges>></td>\n    </tr>\n  </table>\n</fieldset>\n\n<fieldset><legend>Layout</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Floating nodes\"\n        field:\"config.physics_mode\" \n        descr:\"Set this to true if you want your nodes to freely\n               swirl around.\">>\n  </table>\n</fieldset>\n\n<fieldset><legend>Other</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-text\"\n        title:\"Edge-type namespace\"\n        field:\"config.edge_type_namespace\" \n        descr:\"A namespace (like 'foaf' in 'foaf:knows') that will be\n               automatically added to all edge-types you create in\n               this view.\"\n        note:\"All namespaces are automatically stripped when the\n              edge label is displayed in the graph\">>\n    <<tmap-row type:\"input-text\"\n        title:\"Background image\"\n        field:\"config.background_image\" \n        descr:\"The title of an image tiddler to be used as background\n               in the view.\"\n        note:\"You can also use an image url directly, however, the\n              image needs be stored under the same domain as your wiki.\n              Otherwise, it won't be displayed!\">>\n  </table>\n</fieldset>\n\n<fieldset><legend>Neighbourhood</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-select\"\n        title:\"Neighbourhood scope\"\n        field:\"config.neighbourhood_scope\" \n        selectFilter:\"[[|Do not display a neighbourhood]]\n                      [[1|1 steps away]]\n                      [[2|2 steps away]]\n                      [[3|3 steps away]]\n                      [[4|4 steps away]]\n                      [[5|5 steps away]]\n                      [[*|No limit]]\"\n        descr:\"Display the neighbourhood that can be reached\n               within the given number of steps starting from the\n               matches returned by the node filter.\">>\n    <<tmap-row type:\"input-checkbox\"\n        title:\"Show inter-neighbour edges\"\n        field:\"config.show_inter_neighbour_edges\"\n        descr:\"When neighbours are displayed in a map along with\n               matches, also display their relations to other\n               neighbours\">>\n  </table>\n</fieldset>\n\n<fieldset><legend>Vis configurations</legend>\n  <div class=\"tmap-flash-message tmap-info\">\n     {{$:/core/images/info-button}}\n     The local vis configurations will affect all\n     elements (nodes and edges) of this view, unless they are\n     overridden on a lower level. All options below are documented at\n     [[vis.js.org|http://visjs.org/docs/network]].\n  </div>\n  <table class=\"tmap-config-table\">\n    <tr>\n      <td>Reset config:</td>\n      <td>\n        <div class=\"tmap-button-wrapper\">\n          <$button>Reset vis configuration\n            <$action-setfield config.vis=\"\" />\n            <$action-setfield $tiddler=<<vis-refresh-trigger>> text=\"\" />\n          </$button>\n       </div>\n     </td>\n     <td>\n       Press the reset button to clear this view's vis configurations.\n     </td>\n    </tr>\n  </table>\n  <$tmap-config\n      mode=\"manage-config\"\n      inherited=\"vis-inherited\"\n      extension=\"config.vis\"\n      refresh-trigger=<<vis-refresh-trigger>> />\n</fieldset>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/getConfirmation": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/getConfirmation",
            "subtitle": "{{$:/core/images/import-button}} You must confirm in order to proceed!",
            "text": "\\rules except wikilink\n\n<<message>>\n\n''Are you really sure you want to do this?''"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/createView": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/createView",
            "subtitle": "{{$:/core/images/new-button}} Creating a new view",
            "text": "\\rules except wikilink\n\n\\define nodeFilter() [list[$:/temp/tmap/nodes/$(view)$]]\n\nPlease specify a view name.\n\nName:\n<$edit-text\n    focus=\"true\"\n    tiddler=<<output>>\n    field=\"text\"\n    type=\"text\"\n    tag=\"input\"\n    default=\"\" />\n<sup>[1]</sup>\n\n---\n\n<sup>[1]</sup>\n<small>Attention: using the name of an existing view will overwrite it!</small>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/deleteNodeDialog": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/deleteNodeDialog",
            "subtitle": "{{$:/core/images/delete-button}} You are about to delete <<count>> nodes",
            "text": "\\rules except wikilink\n\n''Please choose an option or abort:''\n\n<$radio tiddler=<<output>> field=\"delete-from\" value=\"system\">\n  Delete nodes from system <sup>[1]</sup>\n</$radio><br />\n<$radio tiddler=<<output>> field=\"delete-from\" value=\"filter\">\n  Delete nodes from graph's filter <sup>[2]</sup>\n</$radio>\n\nThe following nodes will be deleted:\n\n<ul>\n<$list filter=<<tiddlers>>>\n  <li><$view tiddler={{!!title}} field=\"title\" /></li>\n</$list>\n</ul>\n\n---\n\n<sup>[1]</sup>\n<small>This will delete all nodes, their corresponding tiddlers and all connected edges.</small><br/>\n<sup>[2]</sup>\n<small>''Important:'' Removing a node from the graph's filter only works, if the node has been added in the map editor per double click or via \"Add Node\". If the node hasn't been added as mentioned above, you need to change the underlying tiddler in a way that it doesn't match your filter anymore, if you don't want it to be displayed in the graph.</small>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/dublicateIdInfo": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/dublicateIdInfo",
            "subtitle": "{{$:/core/images/info-button}} Dublicate id detected",
            "buttons": "ok_suppress",
            "text": "\\rules except wikilink\n\nTiddlyMap requires the value of the id field (\"tmap.id\") to be\nunique in order to correctly identify nodes and tiddlers.\n\nThe tiddler \"<<param.changedTiddler>>\" had the same id as the\ntiddler \"<<param.existingTiddler>>\".\n\nTherefore TiddlyMap\n\n* assigned a new id to tiddler \"<<param.changedTiddler>>\"\n* removed all edges from \"<<param.changedTiddler>>\""
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/edgeNotVisible": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/edgeNotVisible",
            "subtitle": "{{$:/core/images/info-button}} Edge will not be visible in view \"<<view>>\"",
            "buttons": "ok_suppress",
            "text": "\\rules except wikilink\n\nTiddlyMap just noticed that you created an edge of type \"<<type>>\"\nthat will not be visible in this view.\n\nThe reason is that the view's edge filter prevents edges of type\n\"<<type>>\" from being displayed. To change this, open the view's\nmenu and change the edge-filter configuration.\n\nFor further information, please see:\n[[Node and edge-type filters|http://tiddlymap.org#Node%20and%20edge-type%20filters]]."
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/editFilters": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/editFilters",
            "subtitle": "{{$:/core/images/edit-button}} Filter editor -- <<view>>",
            "text": "\\rules except wikilink\n\n<fieldset>\n  <legend>Filters <sup>[1]</sup></legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-textarea\"\n        title:\"Node filter\"\n        field:\"prettyNodeFilter\"\n        descr:\"Show tiddlers in the graph that match this filter.\n               Drafts and system tiddlers are automatically\n               excluded.\">>\n    <<tmap-row type:\"input-textarea\"\n        title:\"Edge filter\"\n        field:\"prettyEdgeFilter\" \n        descr:\"Show edges that match this filter\">>\n  </table>   \n</fieldset>\n\n---\n\n<sup>[1]</sup> A new line is equivalent to a space symbol in a tw-filter expression.<br />\n<sup>[2]</sup> It is suggested to read\n[[Node and edge-type filters|http://tiddlymap.org#Node%20and%20edge-type%20filters]]\nand [[Edge-type namespaces|http://tiddlymap.org#Node%20and%20edge-type%20filters]]\nbefore using Tiddlymap's filter editor. ''Completely new to filters?''\nPlease see [[Introduction to filter notation|http://tiddlywiki.com/#Introduction%20to%20filter%20notation]]."
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/editNode/default": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/editNode/default",
            "caption": "Global node style",
            "text": "\\rules except wikilink\n\n<div class=\"tmap-flash-message tmap-info\">\n  {{$:/core/images/info-button}} A node's ''global configuration''\n  (also referred to as //global individual config//) defines its\n  individual appearance and behaviour in all views.\n</div>\n<<maybeShowTidColorWarning>>\n    \n<$macrocall $name=\"sharedSettings\"\n    twIconField=<<tidIconField>>\n    faIconField=\"global.tmap.fa-icon\"\n    labelField=<<tidLabelField>> />\n\n<$macrocall $name=\"visConfiguration\"\n    mode=\"manage-node-types\"\n    extensionField=\"global.tmap.style\"\n    refreshTrigger=<<vis-refresh-trigger>>\n    styleName=\"node's global style\"\n    inheritedList=\"[[inherited-global-default-style]]\n                   [[inherited-local-default-style]]\n                   [[inherited-group-styles]]\" />"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/editNode/local": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/editNode/local",
            "caption": "Local node style",
            "text": "\\rules except wikilink\n    \n<div class=\"tmap-flash-message tmap-info\">\n  {{$:/core/images/info-button}} The ''local node configuration'' \n  (also referred to as //view-specific node configuration//) overrides the //global individual configuration// and only affects the node's appearance and behaviour in the current view.\n</div>\n<<maybeShowTidColorWarning>>\n\n<fieldset>\n  <legend>Behaviour</legend>\n  <table class=\"tmap-config-table\">\n    <$macrocall type=\"input-select\"\n        $name=\"tmap-row\"\n        title=\"Open view\"\n        field=\"local.open-view\"\n        nochoice=\"Disabled\"\n        selectFilter=<<tmap \"option\" \"selector.allViewsByLabel\">>\n        descr=\"Clicking on this node will open the specified\n               view instead of the tiddler represented by this node.\" />\n  </table>\n</fieldset>\n\n<$macrocall $name=\"sharedSettings\"\n    twIconField=\"local.tw-icon\"\n    faIconField=\"local.fa-icon\"\n    labelField=\"local.label\" />\n                         \n<$macrocall $name=\"visConfiguration\"\n    mode=\"manage-node-types\"\n    extensionField=\"local-node-style\"\n    refreshTrigger=<<vis-refresh-trigger>>\n    styleName=\"node's local style\"\n    inheritedList=\"[[inherited-global-default-style]]\n                   [[inherited-local-default-style]]\n                   [[inherited-group-styles]]\n                   [[global.tmap.style]]\" />"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/editNode": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/editNode",
            "subtitle": "{{$:/core/images/edit-button}} Editing style of node \"<<tiddler>>\"",
            "text": "\\rules except wikilink\n\n\\define tab(name) $(template)$/$name$\n\\define vis-refresh-trigger() $(temp)$/vis-refresh\n\n\\define maybeShowTidColorWarning()\n  <$list filter=\"[<tidColor>regexp[.+]]\">\n  <div class=\"tmap-flash-message tmap-warning\">\n    {{$:/core/images/info-button}} You have set the tiddler's color\n    field to \"<<tidColor>>\". This value will be completely ignored\n    when you change node's color properties in the vis editor below.\n  </div>\n  </$list>\n  <$list filter=\"[<tidIcon>regexp[.+]]\">\n  <div class=\"tmap-flash-message tmap-warning\">\n    {{$:/core/images/info-button}} The tiddler is displayed as\n    icon in the graph. Do __not__ change the shape property unless\n    you want the icon to be ignored.\n  </div>\n  </$list>\n\\end\n\n\\define iconSettings(twIconField, faIconField)\n  <fieldset>\n    <legend>Icon Settings</legend>\n    <table class=\"tmap-config-table\">\n      <<tmap-row type:\"input-text\"\n          title:\"TW-icon\"\n          field:\"$twIconField$\"\n          descr:\"A tiddlywiki image reference.\n                 For example '$:/core/icon' for Movotun Jack.\">>\n      <<tmap-row type:\"input-text\"\n          title:\"FA-icon\"\n          field:\"$faIconField$\"\n          descr:\"A Font Awesome icon code.\n                 For example 'f206' for the bicycle symbol.\">>\n    </table>\n  </fieldset>\n\\end\n\n\\define sharedSettings(twIconField, faIconField, labelField)\n  <fieldset>\n    <legend>General Settings</legend>\n    <table class=\"tmap-config-table\">\n      <<tmap-row type:\"input-text\"\n          title:\"Label\"\n          field:\"$labelField$\"\n          descr:\"Use this value as node label.\">>\n    </table>\n  </fieldset>\n  <!-- display icon fieldset -->\n  <<iconSettings \"$twIconField$\" \"$faIconField$\">>  \n\\end\n\n<$macrocall\n  $name=\"tabs\"\n  default=<<tab \"default\">>\n  state=\"$:/state/tabs/MapElementTypeManager\"\n  tabsList=\"[all[shadows]prefix<template>] -[<template>]\"\n/>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor/draft": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor/draft",
            "caption": "Draft",
            "text": "\\rules except wikilink\n\n<div class=\"tmap-modal-editor\">\n  <$edit-text tiddler=<<draftTRef>> field=\"color\" tag=\"input\" type=\"color\"/>\n  <$importvariables filter=\"[all[tiddlers+shadows]prefix[$:/core/macros/]]\">\n    <$set name=\"currentTiddler\" value=<<draftTRef>> >\n      <$transclude tiddler=\"$:/core/ui/EditTemplate\" field=\"text\" mode=\"block\" />\n    </$set>\n  </$importvariables>\n</div>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor/original": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor/original",
            "caption": "Preview",
            "text": "\\rules except wikilink\n\n<$transclude tiddler=<<draftTRef>> mode=\"block\" />\n\n<!--\n<$set name=\"currentTiddler\" value=<<draftTRef>> >\n  <$transclude tiddler=\"$:/core/ui/ViewTemplate\" field=\"text\" mode=\"block\" />\n</$set>-->\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor",
            "subtitle": "{{$:/core/images/edit-button}} <<draftTRef>>",
            "text": "\\rules except wikilink\n\n\\define defaultTab() $:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor/original\n\n<$macrocall $name=\"tabs\"\n    default=<<defaultTab>>\n    state=\"$:/state/tabs/MapElementTypeManager\"\n    tabsList=\"[all[shadows]prefix[$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenTiddlerEditor/]]\" />"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/fieldChanged": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/fieldChanged",
            "subtitle": "{{$:/core/images/info-button}} The field \"<<name>>\" changed",
            "text": "\\rules except wikilink\n\nYou changed the field \"<<name>>\" from \"<<oldValue>>\" to \"<<newValue>>\".\n\nIt is recommended to let TiddlyMap copy all values from the former field \"<<oldValue>>\" to the new field \"<<newValue>>\" so the data stored in \"<<oldValue>>\" is not lost. This operation has to be done now or never.\n\nDo you want to move each tiddler's existing \"<<oldValue>>\" value to \"<<newValue>>\"? Please note that any value currently stored in \"<<newValue>>\" would consequently be overridden and the old field \"<<oldValue>>\" would be eventually removed!"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenNotSupported": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/fullscreenNotSupported",
            "subtitle": "{{$:/core/images/info-button}} Your machine does not support fullscreen",
            "buttons": "ok_suppress",
            "text": "\\rules except wikilink\n\nPlease have a look [[here|http://caniuse.com/#feat=fullscreen]] to see a list of supported devices/browsers.\n\nSorry for this :("
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/getWidgetCode": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/getWidgetCode",
            "subtitle": "{{$:/core/images/permalink-button}} Widget Code Generator",
            "buttons": "close",
            "text": "\\rules except wikilink\n\nThe following wizard will assist you in creating the widget code you can use (copy'n'paste) to embed this view in a tiddler. Please visit the [[online demo|http://tiddlymap.org]] for some examples on how the attributes below affect the displayed graph.\n\n''Widget-code''\n\n<pre style=\"white-space: normal;\">\n&lt;$tiddlymap\n\nview=\"{{!!view}}\"\n\n<$list filter=\"[field:title<output>field:var.click-to-use[false]]\">\n  click-to-use=\"false\"\n</$list>\n<$list filter=\"[field:title<output>has[var.editor]]\">\n  editor=\"<$view tiddler=<<output>> field='var.editor' />\"\n</$list>\n<$list filter=\"[field:title<output>has[var.width]]\">\n  width=\"<$view tiddler=<<output>> field='var.width' />\"\n</$list>\n<$list filter=\"[field:title<output>has[var.height]]\">\n  height=\"<$view tiddler=<<output>> field='var.height' />\"\n</$list>\n<$list filter=\"[field:title<output>has[var.class]]\">\n  class=\"<$view tiddler=<<output>> field='var.class' />\"\n</$list>\n<$list filter=\"[field:title<output>field:var.show-buttons[false]]\">\n  show-buttons=\"false\"\n</$list>\n<$list filter=\"[field:title<output>has[var.design]]\">\n  design=\"<$view tiddler=<<output>> field='var.design' />\"\n</$list>\n&gt;&lt;/$tiddlymap&gt;\n</pre>\n\nIf you are unsure about a parameter, just leave everything as is and simply copy the widget code displayed above.\n\n<fieldset>\n  <legend>Parameters</legend> \n  <table class=\"tmap-config-table\">\n      <$macrocall type=\"input-select\"\n          $name=\"tmap-row\"\n          title=\"View\"\n          field=\"view\" \n          selectFilter=<<tmap \"option\" \"selector.allViewsByLabel\">>\n          descr=\"The view to display\" />\n      <<tmap-row type:\"input-select\"\n          title:\"Editor bar\"\n          field:\"var.editor\"\n          selectFilter:\"[[|Hidden]]\n                        [[vis|Simple]]\n                        [[advanced|Advanced]]\"\n          descr:\"Whether the widget should act as an editor or not.\">>\n      <<tmap-row type:\"input-select\"\n          title:\"Design\"\n          field:\"var.design\"\n          selectFilter:\"[[|Normal]]\n                        [[plain|Plain]]\"\n          descr:\"Usually a header is displayed and borders. Plain\n                 design will only show the mere graph.\">>\n      <<tmap-row type:\"input-text\"\n          title:\"Height\"\n          field:\"var.height\"\n          descr:\"Graph's height in css units. Defaults to '300px'.\">>\n      <<tmap-row type:\"input-text\"\n          title:\"Width\"\n          field:\"var.width\"\n          descr:\"Graph's width in css units. Defaults to '100%'.\">>\n      <<tmap-row type:\"input-text\"\n          title:\"Class\"\n          field:\"var.class\"\n          descr:\"A custom class to apply your own css.\">>\n      <<tmap-row type:\"input-checkbox\"\n          title:\"Click to use\"\n          field:\"var.click-to-use\"\n          default:\"true\"\n          descr:\"A click is needed to enable the graph.\">>\n      <<tmap-row type:\"input-checkbox\"\n          title:\"Show buttons\"\n          field:\"var.show-buttons\"\n          default:\"true\"\n          descr:\"Show or hide the graph's navigation buttons.\">>\n  </table>\n</fieldset>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/getNodeTitle": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/getNodeTitle",
            "subtitle": "{{$:/core/images/tag-button}} Please specify a node title",
            "text": "\\rules except wikilink\n  \n''Title'':\n<$edit-text field=\"text\"\n    type=\"text\"\n    tag=\"input\"\n    default=\"\"\n    focus=\"true\"\n    tiddler=<<output>>\n    class=\"tmap-trigger-field tmap-triggers-ok-button-on-enter\" />\n            \n<sup>[1]</sup> \n\n<ul class=\"tmap-small-list\">\n<$set name=\"term\" value={{!!text}}>\n<$list\n    filter=\"[all[tiddlers]!is[system]] +[search:title<term>]\"\n    emptyMessage=\"//A tiddler with this title does not exist\n                  yet and will be created.//\">\n  <li>\n    <$button class=\"tc-btn-invisible tmap-link\">\n      <$view field=\"title\" />\n      <$action-setfield $tiddler=<<output>> text={{!!title}} />\n    </$button>\n  </li>\n</$list>\n</$set>\n</ul>\n\n---\n\n<sup>[1]</sup>\n<small>If you leave the title field blank, a name will be\nautomatically generated for you. By choosing an existing title,\nyou add the tiddler as node to the view.</small>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/saveCanvas": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/saveCanvas",
            "subtitle": "{{$:/core/images/options-button}} Save a snapshot image of view \"<<view>>\"",
            "text": "\\rules except wikilink\n\n\\define vis-refresh-trigger() $(temp)$/vis-refresh\n\n\\define preview()\n<div class=\"tmap-save-canvas-preview\">\n  <$transclude tiddler=<<snapshot>> /><br />\n  Measures: <<width>> × <<height>>\n</div>\n\\end\n\n<table class=\"tmap-config-table\">\n<!--\n  <<tmap-row type:\"input-text\"\n      title:\"Name\"\n      field:\"name\">\n-->\n<$macrocall $name=\"tmap-row\"\n    type=\"input-text\"\n    title=\"Name\"\n    field=\"name\"\n    descr=<<preview>> />\n</table>\n\n<fieldset><legend>Options</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-radio\"\n        title:\"Action\"\n        field:\"action\" \n        selectFilter:\"[[download|Download]]\n                      [[wiki|Save in wiki]]\n                      [[placeholder|Use as placeholder for this view]]\"\n        descr:\"Save the image by downloading it to your computer or\n               save it as a tiddler in your wiki.<br /><br />\n               A third option is to make TiddlyMap use this image as\n               placeholder for the current view. Placeholders are used\n               when tiddlers are exported in form of static html\n               or when editing a tiddler while having the preview\n               shown. In this case the title input is ignored.\">>\n  </table>\n</fieldset>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/getEdgeType": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/getEdgeType",
            "subtitle": "{{$:/plugins/felixhayashi/tiddlymap/icon}} Type specification (optional)",
            "text": "\\rules except wikilink\n\n\\define filter() $(allEdgeTypes)$ +[search:title[$(term)$]]\n\nYou are about to connect \"<<fromLabel>>\" with \"<<toLabel>>\".\nPlease specify a type.\n\n''Type'': \n<$edit-text\n    focus=\"true\"\n    tiddler=<<output>>\n    field=\"text\"\n    type=\"text\"\n    tag=\"input\"\n    default=\"\"\n    class=\"tmap-trigger-field tmap-triggers-ok-button-on-enter\" />\n\n<$set name=\"term\" value={{!!text}}>\n<$set name=\"allEdgeTypes\" value=<<tmap \"option\" \"selector.allEdgeTypesById\">>>\n\n<ul class=\"tmap-small-list\">\n<$list filter=<<filter>>\n    emptyMessage=\"//A type with this name does not exist yet\n                  and will be created.//\">\n  <li>\n    <$button class=\"tc-btn-invisible tmap-link\">\n      <$view field=\"title\" />\n      <$action-setfield $tiddler=<<output>> text={{!!title}} />\n    </$button>\n  </li>\n</$list>\n</ul>\n\n</$set>\n</$set>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog",
            "text": "\\rules except wikilink\n\n<div class=\"tmap-modal-content\">\n<$importvariables\n    filter=\"[[$:/plugins/felixhayashi/tiddlymap/misc/macros]]\n            [[$:/core/macros/tabs]]\">\n<$transclude tiddler=<<template>> mode=\"block\" />\n</$importvariables>\n</div>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/deleteType": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/deleteType",
            "caption": "Removal",
            "text": "\\rules except wikilink\n\n\\define manage-edge-types()\n  <$macrocall $name=\"tmap-row\"\n      type=\"input-checkbox\"\n      title=\"Delete type\"\n      field=\"temp.deleteType\"\n      default={{!id}}\n      readonly={{!!temp.idImmutable}}\n      descr=\"If you want to delete this type, set this to true\n             and click the save button afterwards. Predefined system\n             types cannot be deleted.\" note=\"Consequently, all edges\n             of this type will be deleted.\" />\n\\end\n\n\\define manage-node-types()\n  <$macrocall $name=\"tmap-row\"\n      type=\"input-checkbox\"\n      title=\"Delete type\"\n      field=\"temp.deleteType\"\n      default={{!id}}\n      readonly={{!!temp.idImmutable}}\n      descr=\"If you want to delete this type, set this to true and\n             click the save button afterwards. Predefined system\n             types cannot be deleted.\" />\n\\end\n\n<table class=\"tmap-config-table\"><$macrocall $name=<<mode>> /></table>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/description": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/description",
            "caption": "Description",
            "text": "\\rules except wikilink\n\n\\define manage-edge-types()\n  <<tmap-row type:\"input-textarea\"\n      title:\"Description\"\n      field:\"description\"\n      descr:\"An optional description for this type. The\n             description will be displayed as tooltip when\n             moving the mouse over an edge of this type.\">>\n\\end\n\n\\define manage-node-types()\n  <<tmap-row type:\"input-textarea\"\n      title:\"Description\"\n      field:\"description\" \n      descr:\"An optional description for this type.\">>\n\\end\n\n<table class=\"tmap-config-table\">\n  <$macrocall $name=<<mode>> />\n</table>\n\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/generalSettings": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/generalSettings",
            "caption": "General",
            "text": "\\rules except wikilink\n\n\\define manage-edge-types()\n  <<tmap-row type:\"input-text\"\n      title:\"Label\"\n      field:\"label\" \n      descr:\"An optional alias used as edge-label.\">>\n  <<tmap-row type:\"input-checkbox\"\n      title:\"Show label\"\n      field:\"show-label\"\n      default:\"true\"\n      descr:\"If unchecked, no edge label will be displayed.\">>\n\\end\n\\define manage-node-types()\n  <$list filter=\"[<currentTiddler>!field:id[tmap:neighbour]]\">\n  <<tmap-row type:\"input-textarea\"\n      title:\"Scope\"\n      field:\"scope\" \n      descr:\"A filter expression that defines, which nodes inherit\n             this node-type and its style.\">>\n  </$list>\n  <$macrocall type=\"input-select\"\n      $name=\"tmap-row\" \n      title=\"Priority\"\n      field=\"priority\"\n      selectFilter=<<tmap \"scale\" \"100\">>\n      descr=\"When a type has a a higher priority than another type,\n             its style will override the other style\" />\n\\end\n\n<table class=\"tmap-config-table\">\n  <$macrocall\n    $name=\"tmap-row\"\n    title=\"Identifier\"\n    field=\"temp.newId\"\n    type=\"input-text\"\n    default={{!!id}}\n    readonly={{!!temp.idImmutable}}\n    descr=\"A unique identifier\"\n  />\n  <$macrocall $name=<<mode>> />\n</table>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/overview": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/overview",
            "caption": "Overview",
            "text": "\\rules except wikilink\n\n\\define date(f) <$view field=$f$ format=\"date\" template=\"DDth mmm hh:mm:ss\"/>\n\n! <$link to={{!!typeTRef}}><$view field=\"id\" /></$link>\n\n<table class=\"tmap-key-value-table\">\n  <tr>\n    <th align=\"left\">Created on</th>\n    <td>\n      <<date \"created\">>\n    </td>\n  </tr>\n  <tr>\n    <th align=\"left\">Modified on</th>\n    <td><<date \"modified\">></td>\n  </tr>\n  <tr>\n    <th align=\"left\">Usage count</th>\n    <td>\n      <span class=\"tmap-edge-type-specific\">\n        <$view field=\"temp.usageCount\" />\n      </span>\n      <span class=\"tmap-node-type-specific\">\n        <$count filter={{!!scope}}>0</$count>\n      </span>\n    </td>\n  </tr>\n</table>\n\n<$view field=\"description\">//No description available//</$view>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/styling": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/styling",
            "caption": "Styling",
            "text": "\\rules except wikilink\n\n\\define vis-refresh-trigger() $(temp)$/vis-refresh\n\n\\define url()\n  <$set\n      filter=\"[<mode>prefix[manage-edge-types]]\"\n      name=\"module\"\n      value=\"edges\"\n      emptyValue=\"nodes\">\n    [[visjs.org|http://visjs.org/docs/network/$(module)$]]\n  </$set>\n\\end\n\n<fieldset class=\"tmap-node-type-specific\">\n  <legend>Icon Settings</legend>\n  <table class=\"tmap-config-table\">\n    <<tmap-row type:\"input-text\"\n        title:\"TW-icon\"\n        field:\"tw-icon\"\n        descr:\"A tiddlywiki image reference.\n               For example '$:/core/icon' for Movotun Jack.\">>\n    <<tmap-row type:\"input-text\"\n        title:\"FA-icon\"\n        field:\"fa-icon\"\n        descr:\"A Font Awesome icon code.\n               For example 'f206' for the bicycle symbol.\">>\n  </table>\n</fieldset>\n\n<fieldset><legend>Visjs styles</legend>\n<div class=\"tmap-flash-message tmap-info\">\n   {{$:/core/images/info-button}}\n   All visjs options below are documented at <<url>>.\n</div>\n<table class=\"tmap-config-table\">\n  <tr>\n    <td>Reset:</td>\n    <td>\n      <div class=\"tmap-button-wrapper\">\n        <$button>Reset style\n          <$action-setfield style=\"\" />\n          <$action-setfield $tiddler=<<vis-refresh-trigger>> text=\"\" />\n        </$button>\n     </div>\n   </td>\n   <td> Press the reset button to clear the style for this type.</td>\n  </tr>\n</table>\n<$tmap-config\n    mode=<<mode>>\n    inherited=\"vis-inherited\"\n    extension=\"style\"\n    refresh-trigger=<<vis-refresh-trigger>> />\n</fieldset>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager",
            "subtitle": "{{$:/core/images/tag-button}} <<topic>>",
            "buttons": "element_type_manager",
            "text": "\\rules except wikilink\n\n\\define defaultTab() \n$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/overview\n\\end\n\n\\define settingsTab()\n$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/generalSettings\n\\end\n\n\\define tabsFilter()\n[all[shadows]prefix[$:/plugins/felixhayashi/tiddlymap/dialog/MapElementTypeManager/]]\n\\end\n\n\\define searchFilter()\n$(searchSelector)$\n+[sort[title]nsort[priority]]\n+[removeprefix<typeRootPath>removeprefix[/]]\n+[search:title{$:/temp/tmap/MapElementTypeSearch}]\n\\end\n\n\\define managerClass() tmap-$(mode)$\n\n\\define typePath() $(typeRootPath)$/$(id)$\n\n<div id=\"tmap-element-type-manager\" class=<<managerClass>>>\n  <div>\n    <div class=\"searchbar\">\n      <$edit-text\n          focus=\"true\"\n          tiddler=\"$:/temp/tmap/MapElementTypeSearch\"\n          type=\"text\"\n          tag=\"input\"\n          default=\"\" />\n    </div>\n    <ul>\n      <$list\n          filter=<<searchFilter>>\n          emptyMessage=<<noTypeFound>>\n          variable=\"id\">\n      <li>\n        <span class=\"tmap-ranking tmap-node-type-specific\">\n          # <$view tiddler=<<typePath>> field=\"priority\">1</$view>\n        </span>\n        <$button class=\"tc-btn-invisible tmap-link\"><<id>>\n          <$action-setfield\n              $tiddler=<<qualify \"$:/state/tabs/MapElementTypeManager\">>\n              text=<<defaultTab>> />\n          <$action-sendmessage\n              $message=\"tmap:tm-load-type-form\"\n              id=<<id>>\n              mode=<<mode>>\n              output=<<output>> />\n        </$button>\n      </li>\n      </$list>\n      <$list filter=\"[{$:/temp/tmap/MapElementTypeSearch}regexp[.+]]\">\n      <li>\n      <$button tooltip=\"Create a new type\">\n        {{$:/core/images/new-button}}\n        Create \"{{$:/temp/tmap/MapElementTypeSearch}}\"\n        <$action-setfield $tiddler=\"$:/temp/tmap/MapElementTypeSearch\" text=\"\" />\n        <$action-sendmessage\n            $message=\"tmap:tm-create-type\"\n            mode=<<mode>> id={{$:/temp/tmap/MapElementTypeSearch}}\n            output=<<output>> />\n      </$button>\n      </li>\n      </$list>\n    </ul>\n  </div>\n  <div>\n    <$reveal type=\"nomatch\" text=\"\" default={{!!id}} >\n      <$macrocall\n          $name=\"tabs\"\n          default=<<defaultTab>>\n          state=\"$:/state/tabs/MapElementTypeManager\"\n          tabsList=<<tabsFilter>> />\n    </$reveal>\n    <$reveal type=\"match\" text=\"\" default={{!!id}} >\n      <div class=\"tmap-flash-message tmap-info\">\n        {{$:/core/images/info-button}} Please select a type from the\n        list or create a new one by entering the type name in the search field on the left.\n      </div>\n      <div class=\"tmap-flash-message tmap-info tmap-node-type-specific\">\n        {{$:/core/images/info-button}} The number next to the node-type\n        label represents it's priority.\n      </div>\n    </$reveal>\n  </div>\n</div>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/getViewName": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/getViewName",
            "subtitle": "{{$:/core/images/tag-button}} Please specify a view name",
            "text": "\\rules except wikilink\n\nName:\n<$edit-text focus=\"true\" tiddler=<<output>> field=\"text\" type=\"text\" tag=\"input\" default=\"\"\n            class=\"tmap-trigger-field tmap-triggers-ok-button-on-enter\" /> <sup>[1]</sup>\n\n<$reveal type=\"nomatch\" text=\"0\" default=<<count>>>\n  \n  Note that ''<<count>>'' tiddlers are referencing this view and renaming the view will cause the reference to be invalid. It is recommended to first remove the tiddlymap widgets in the tiddlers listed below or change their view attributes accordingly.\n\n  ''References''\n\n  <ul>\n    <$list filter=<<filter>> variable=\"item\">\n      <li><$link><<item>></$link></li>\n    </$list>\n  </ul>\n  \n</$reveal>\n\n---\n\n<sup>[1]</sup> <small>Attention: using the name of an existing view will overwrite it!</small>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialog/welcome": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialog/welcome",
            "subtitle": "{{$:/core/images/info-button }} Welcome",
            "buttons": "ok",
            "text": "\\rules except wikilink\n\n<$list filter=\"[[$:/plugins/felixhayashi/topstoryview]]\">\n<div class=\"tmap-flash-message tmap-info\">\n  {{$:/core/images/info-button}}\n  TiddlyMap configured your wiki for optimal use. Please save &amp; restart after closing this dialog.\n</div>\n</$list>\n\nIt seems that you freshly installed TiddlyMap.\n\n* In case you need any help, please consult the [[online docs|http://tiddlymap.org#Documentation]] first.\n* You are welcome to create an [[issue|https://github.com/felixhayashi/TW5-TiddlyMap/issues]] at GitHub for any bug you discover.\n* Make sure to revisit the [[demo site|http://tiddlymap.org]] to see whether your version is up-to-date.\n* If you like TiddlyMap, please give it a star at [[GitHub|https://github.com/felixhayashi/TW5-TiddlyMap]] or tell your friends about it :)\n\nHave a great time.\n\n---\n\n''Please note:'' By using this plugin you agree to the product's [[License Terms|$:/plugins/felixhayashi/tiddlymap/license]]. TiddlyMap is distributed under the [[BSD 2-Clause License|http://opensource.org/licenses/BSD-2-Clause]], which belongs to the same license family, as the license used by TiddlyWiki."
        },
        "$:/plugins/felixhayashi/tiddlymap/dialogFooter/close": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialogFooter/close",
            "text": "\\rules except wikilink\n\n<$button class=\"tmap-dialog-button tmap-close-button\" tooltip=\"Close this dialog\">Close\n\n  <!-- trigger dialog callback -->\n  <$action-setfield $tiddler=<<result>> text=\"1\" />\n                       \n</$button>\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialogFooter/ok": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialogFooter/ok",
            "text": "\\rules except wikilink\n\n<$button class=\"tmap-dialog-button tmap-ok-button\" tooltip=\"Confirm dialog\">OK\n\n  <!-- trigger dialog callback -->\n  <$action-setfield $tiddler=<<result>> text=\"1\" />\n                       \n</$button>\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialogFooter/ok_cancel": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialogFooter/ok_cancel",
            "text": "\\rules except wikilink\n\n<$transclude tiddler=\"$:/plugins/felixhayashi/tiddlymap/dialogFooter/ok\" mode=\"inline\" />\n<$button class=\"tmap-dialog-button tmap-cancel-button\" tooltip=\"Close dialog without saving\">Cancel\n  <!-- trigger dialog callback -->\n  <$action-setfield $tiddler=<<result>> text=\"\" />\n</$button>\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialogFooter/ok_suppress": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialogFooter/ok_suppress",
            "text": "\\rules except wikilink\n\n<$set name=\"currentTiddler\" value=<<title>> >\n\n<$checkbox field=\"suppress\" checked=\"1\" unchecked=\"0\" default=\"0\"> Do not show this dialog again</$checkbox>\n<$button class=\"tmap-dialog-button tmap-ok-button\" tooltip=\"Confirm this dialog\">OK\n\n  <!-- trigger dialog callback -->\n  <$action-setfield $tiddler=<<result>> text=\"1\" />\n  \n  <!-- suppress dialog in the future -->\n  <$action-sendmessage $message=\"tmap:tm-suppress-dialog\"\n                       dialog=<<templateId>>\n                       suppress={{!!suppress}} />\n                       \n</$button>\n\n</$set>"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialogFooter": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialogFooter",
            "text": "\\rules except wikilink\n\n\\define footer() $:/plugins/felixhayashi/tiddlymap/dialogFooter/$(buttons)$\n\n<$transclude tiddler=<<footer>> />\n\n<!-- we need this button to be able to close a tiddler from outside programmatically -->\n<$button class=\"tmap-hidden-close-button\" message=\"tm-close-tiddler\" />"
        },
        "$:/plugins/felixhayashi/tiddlymap/dialogFooter/element_type_manager": {
            "title": "$:/plugins/felixhayashi/tiddlymap/dialogFooter/element_type_manager",
            "text": "\\rules except wikilink\n\n<$button\n    class=\"tmap-dialog-button tmap-save-button\"\n    tooltip=\"Save the current changes\">Save\n  <$action-sendmessage\n      $message=\"tmap:tm-save-type-form\"\n      mode=<<mode>>\n      output=<<output>> />\n</$button>\n<$button\n    class=\"tmap-dialog-button tmap-cancel-button\"\n    tooltip=\"Cancel the most resent changes and exit\">Quit\n  <$action-setfield $tiddler=<<result>> text=\"1\" />\n</$button>"
        },
        "$:/plugins/felixhayashi/tiddlymap/license": {
            "title": "$:/plugins/felixhayashi/tiddlymap/license",
            "subtitle": "License",
            "caption": "License",
            "text": "\\rules except wikilink\n\n!! TiddlyMap\n\nCopyright (c) 2014, Felix Küppers\nAll rights reserved.\n\nTiddlyMap is licensed under the [[BSD 2-Clause License|http://opensource.org/licenses/BSD-2-Clause]]. For the exact license terms, please visit [[https://github.com/felixhayashi/TW5-TiddlyMap/blob/master/LICENSE]]. \n\n!! TiddlyWiki\n\nCreated by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\n\nCopyright © Jeremy Ruston 2004-2007 Copyright © UnaMesa Association 2007-2014\n\nPublished under the following [licenses](https://github.com/Jermolene/TiddlyWiki5/tree/master/licenses):\n\n# BSD 3-clause \"New\" or \"Revised\" License (including any right to adopt any future version of a license if permitted)\n# Creative Commons Attribution 3.0 (including any right to adopt any future version of a license if permitted)\n\n!! Vis.js\n\nCopyright (c) 2014 [Almende B.V.](https://github.com/almende/vis)\n\nPublished under the following licenses:\n\n# Apache License Version 2.0, January 2004 http://www.apache.org/licenses/\n# MIT License (MIT)\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/readme": {
            "title": "$:/plugins/felixhayashi/tiddlymap/readme",
            "text": "* Please refer to the project-readme hosted at [[https://github.com/felixhayashi/TW5-TiddlyMap]].\n* A demo with several examples and explanations can be found at [[http://tiddlymap.org]]."
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tmap:unknown": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tmap:unknown",
            "description": "Automatically assigned to an edge that does not have a type assigned",
            "style": "{\"color\":\"gray\"}",
            "show-label": "false"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-body:link": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-body:link",
            "description": "A link that is contained in the tiddler's body pointing to another resource.",
            "style": "{\"color\":\"orange\", \"dashes\":true}",
            "label": "links to",
            "text": ""
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-list:list": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-list:list",
            "description": "Contained in a list of this tiddler",
            "style": "{ \"color\": \"red\", \"dashes\":true}",
            "label": "listed in",
            "text": ""
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-list:tags": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes/tw-list:tags",
            "description": "A tag that refers to a tiddler of the same name.",
            "style": "{ \"color\": \"DarkSlateGray\", \"dashes\":true}",
            "label": "tagged with"
        },
        "$:/plugins/felixhayashi/tiddlymap/media/fullscreen.png": {
            "title": "$:/plugins/felixhayashi/tiddlymap/media/fullscreen.png",
            "type": "image/png",
            "text": "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"
        },
        "$:/plugins/felixhayashi/tiddlymap/media/halfscreen.png": {
            "title": "$:/plugins/felixhayashi/tiddlymap/media/halfscreen.png",
            "type": "image/png",
            "text": "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"
        },
        "$:/plugins/felixhayashi/tiddlymap/icon": {
            "tags": "$:/tags/Image",
            "title": "$:/plugins/felixhayashi/tiddlymap/icon",
            "text": "<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   class=\"tc-image-tiddlymap-button tc-image-button\"\n   version=\"1.1\"\n   width=\"22pt\"\n   height=\"22pt\"\n   viewBox=\"0 0 128 128\">\n  <defs\n     id=\"defs4\">\n    <marker\n       refX=\"0\"\n       refY=\"0\"\n       orient=\"auto\"\n       id=\"Arrow1Lend\"\n       style=\"overflow:visible\">\n      <path\n         d=\"M 0,0 5,-5 -12.5,0 5,5 0,0 z\"\n         transform=\"matrix(-0.8,0,0,-0.8,-10,0)\"\n         id=\"path3850\"\n         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt\" />\n    </marker>\n    <marker\n       refX=\"0\"\n       refY=\"0\"\n       orient=\"auto\"\n       id=\"Arrow1Lstart\"\n       style=\"overflow:visible\">\n      <path\n         d=\"M 0,0 5,-5 -12.5,0 5,5 0,0 z\"\n         transform=\"matrix(0.8,0,0,0.8,10,0)\"\n         id=\"path3847\"\n         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt\" />\n    </marker>\n    <inkscape:path-effect\n       effect=\"skeletal\"\n       id=\"path-effect4329\" />\n    <inkscape:path-effect\n       effect=\"skeletal\"\n       id=\"path-effect4321\" />\n    <inkscape:path-effect\n       effect=\"skeletal\"\n       id=\"path-effect4315\" />\n    <inkscape:path-effect\n       effect=\"skeletal\"\n       id=\"path-effect4307\" />\n    <inkscape:path-effect\n       effect=\"skeletal\"\n       id=\"path-effect4299\" />\n    <inkscape:path-effect\n       effect=\"skeletal\"\n       id=\"path-effect4293\" />\n  </defs>\n  <g\n     transform=\"translate(0,-1024.5289)\"\n     id=\"layer1\">\n    <path\n       d=\"m 17.867073,4.5821643 a 3.7249374,3.7249374 0 1 1 -7.449875,0 3.7249374,3.7249374 0 1 1 7.449875,0 z\"\n       transform=\"matrix(-6.3328802,0,0,6.2775831,193.9581,1100.3667)\"\n       id=\"path4139-1-14\"\n       style=\"fill-opacity:1;fill-rule:nonzero\" />\n    <path\n       d=\"M 77.450496,1064.5069 C 58.849552,1025.9634 15.704158,1023.3858 2.8821873e-7,1034.558 L 0.02388589,1035.2674 C 24.502636,1022.2072 44.810725,1042.1507 60.163934,1074.112 z\"\n       id=\"path4337\"\n       style=\"fill-opacity:1;stroke-width:0.58181816;stroke-miterlimit:4;stroke-dasharray:none;marker-start:none;marker-end:none\" />\n    <path\n       d=\"m 12.878637,11.280739 4.75937,-2.7478243 4.759371,-2.7478236 0,5.4956479 0,5.495648 -4.759371,-2.747824 z\"\n       transform=\"matrix(4.6545455,0,0,4.6545455,-13.580429,1027.7638)\"\n       id=\"path3004\"\n       style=\"fill-opacity:1;fill-rule:nonzero\" />\n  </g>\n  <metadata\n     id=\"metadata3772\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:title></dc:title>\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n</svg>\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/media/surface.png": {
            "title": "$:/plugins/felixhayashi/tiddlymap/media/surface.png",
            "type": "image/png",
            "text": "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"
        },
        "$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar": {
            "title": "$:/plugins/felixhayashi/tiddlymap/misc/advancedEditorBar",
            "text": "\\rules except wikilink\n\\define showEdgeField() show-$(curEdgeId)$\n\n<!-- ===== View Switcher ======================================== -->\n\n<div class=\"tmap-menu-bar\">\n  View:\n  <$reveal type=\"match\" text=\"false\" default=<<isViewBound>> >\n    <$select\n        tiddler=<<viewHolder>>\n        field=\"text\"\n        default=<<viewLabel>> >\n      <$list filter=<<tmap \"option\" \"selector.allViewsByLabel\">> >\n        <option value={{!!title}}>\n          <$view tiddler={{!!title}} field=\"title\" />\n        </option>\n      </$list>\n    </$select>\n  </$reveal>\n  <$reveal type=\"match\" text=\"true\" default=<<isViewBound>> >\n    <b><<viewLabel>></b>\n  </$reveal>\n\n  <$button\n      popup=<<qualify \"$:/temp/menu\">>\n      tooltip=\"Open the Menu\">{{$:/core/images/menu-button}}\n  </$button>\n  \n  <$reveal type=\"popup\" position=\"below\" state=<<qualify \"$:/temp/menu\">> >\n    <div class=\"tc-drop-down\">\n      <a href=\"http://tiddlymap.org#Documentation\" target=\"_blank\">\n        {{$:/core/images/info-button}} Open online help\n      </a>\n      <$button class=\"tc-btn-invisible\" message=\"tmap:tm-create-view\">\n        {{$:/core/images/new-button}} Create new view\n      </$button>\n      <$button class=\"tc-btn-invisible\" message=\"tmap:tm-generate-widget\">\n        {{$:/core/images/permalink-button}} Grab widget code\n      </$button>\n      <div class=\"tmap-list-separator\">Global configurations:</div>\n      <$button class=\"tc-btn-invisible\" message=\"tmap:tm-configure-system\">\n        {{$:/core/images/options-button}} Configure TiddlyMap\n      </$button>\n      <$button class=\"tc-btn-invisible\" message=\"tmap:tm-manage-edge-types\">\n        <span class=\"tmap-unicode-icon\">◭</span> Manage edge-types\n      </$button>\n      <$button class=\"tc-btn-invisible\" message=\"tmap:tm-manage-node-types\">\n        <span class=\"tmap-unicode-icon\">▢</span> Manage node-types\n      </$button>\n      <div class=\"tmap-view-actions\">\n        <div class=\"tmap-list-separator\">Actions for this view:</div>\n        <$button class=\"tc-btn-invisible\" message=\"tmap:tm-edit-view\">\n          {{$:/core/images/options-button}} Configure view\n        </$button>\n        <$button class=\"tc-btn-invisible\" message=\"tmap:tm-edit-filters\">\n          {{$:/core/images/edit-button}} Edit filters\n        </$button>\n        <$button class=\"tc-btn-invisible\" message=\"tmap:tm-store-position\">\n          {{$:/core/images/globe}} Save positions\n        </$button>\n        <$button class=\"tc-btn-invisible\" message=\"tmap:tm-rename-view\">\n          {{$:/core/images/tag-button}} Rename view\n        </$button>\n        <$button class=\"tc-btn-invisible\" message=\"tmap:tm-delete-view\">\n          {{$:/core/images/delete-button}} Delete view\n        </$button>\n      </div>\n    </div>\n  </$reveal>\n  \n  <$reveal\n      type=\"match\"\n      text=\"true\"\n      default=<<tmap \"option\" \"config.sys.editorMenuBar.showNeighScopeButton\">>>\n    <$button\n        class=<<neighScopeBtnClass>>\n        tooltip=\"Change the neighbourhood scope\"\n        popup=<<qualify \"$:/temp/neighScope\">>>☀\n    </$button>\n  </$reveal>\n  \n  <$reveal type=\"popup\" position=\"below\" state=<<qualify \"$:/temp/neighScope\">> >\n    <div class=\"tc-drop-down\">\n      <div class=\"tmap-list-separator\">Neighbourhood scope</div>\n      <$button class=\"tc-btn-invisible\">None\n        <$action-setfield\n            $tiddler=<<viewRoot>>\n            config.neighbourhood_scope=\"\" />\n      </$button>\n      <$list filter=\"[[1|1 step distance]]\n                     [[2|2 step distance]]\n                     [[3|3 step distance]]\n                     [[4|4 step distance]]\n                     [[5|5 step distance]]\">\n        <$button class=\"tc-btn-invisible\">\n          <<tmap \"splitAndSelect\" \"|\" \"1\">>\n          <$action-setfield\n              $tiddler=<<viewRoot>>\n              config.neighbourhood_scope=<<tmap \"splitAndSelect\" \"|\" \"0\">> />\n        </$button>\n      </$list>\n      <$button class=\"tc-btn-invisible\">No limit\n        <$action-setfield\n            $tiddler=<<viewRoot>>\n            config.neighbourhood_scope=\"100\" />\n      </$button>\n      <div class=\"tmap-list-separator\">Neighbourhood traversal</div>\n      <$radio field=\"config.neighbourhood_directions\" value=\"in\"> Incoming</$radio><br />\n      <$radio field=\"config.neighbourhood_directions\" value=\"out\"> Outgoing</$radio><br />\n      <$radio field=\"config.neighbourhood_directions\" value=\"\"> Both</$radio>\n    </div>\n  </$reveal>\n  \n  <$reveal\n      type=\"match\"\n      text=\"true\"\n      default=<<tmap \"option\"\n                     \"config.sys.editorMenuBar.showScreenshotButton\">>>\n    <$button\n        tooltip=\"Open the map-export menu\"\n        popup=<<qualify \"$:/temp/mapExport\">>>\n      {{$:/core/images/download-button}}\n    </$button>\n  </$reveal>\n  \n  <$reveal\n      type=\"popup\"\n      position=\"below\"\n      state=<<qualify \"$:/temp/mapExport\">>>\n    <div class=\"tc-drop-down\">\n    <$button\n        class=\"tc-btn-invisible\"\n        tooltip=\"Export the graph and all its elements\n                 in form of a JSON file\">\n        {{$:/core/images/permalink-button}} Save as JSON file\n      <$action-sendmessage\n          $message=\"tmap:tm-download-graph\"\n          view=<<viewLabel>> />\n    </$button>\n    <$button\n        class=\"tc-btn-invisible\"\n        tooltip=\"Create a png image to download or save it\n                 as image or view-placeholder in your wiki\">\n        {{$:/core/images/palette}} Save as png image\n      <$action-sendmessage $message=\"tmap:tm-save-canvas\" />\n    </$button>\n    </div>\n  </$reveal>\n    \n</div>"
        },
        "$:/plugins/felixhayashi/tiddlymap/misc/focusButton": {
            "title": "$:/plugins/felixhayashi/tiddlymap/misc/focusButton",
            "text": "\\define filter() [list[$:/temp/tmap/nodes/$(viewLabel)$]search:title{$:/temp/tmap/bar/search}]\n\n<div class=\"tmap-focus-button\">\n  <$reveal type=\"nomatch\" state=\"$:/temp/tmap/state/focus\" text=<<qualify>>>\n    <$button\n        tooltip=\"Zoom on a specific node\"\n        class=<<tv-config-toolbar-class>>>{{$:/core/images/advanced-search-button}}\n     <$action-setfield $tiddler=\"$:/temp/tmap/bar/search\" text=\"\" />\n     <$action-setfield $tiddler=\"$:/temp/tmap/state/focus\" text=<<qualify>> />\n    </$button>\n  </$reveal>\n  <$reveal type=\"match\" state=\"$:/temp/tmap/state/focus\" text=<<qualify>>>\n    <$button\n        tooltip=\"Close zoom popup\"\n        class=<<tv-config-toolbar-class>>>{{$:/core/images/advanced-search-button}}\n     <$action-setfield $tiddler=\"$:/temp/tmap/state/focus\" text=\"\" />\n    </$button>\n    <div class=\"tmap-popup\">\n      <div class=\"tc-drop-down\">\n        <$edit-text\n            focus=\"true\"\n            tiddler=\"$:/temp/tmap/bar/search\"\n            field=\"text\"\n            type=\"text\"\n            tag=\"input\"\n            default=\"\" />\n        <small><$count filter=<<filter>> /> results</small>\n        <hr />\n        <div class=\"tmap-very-small-list\">\n          <$list filter=<<filter>>\n              variable=\"item\"\n              emptyMessage=\"//No results//\">\n            <$button\n                class=\"tc-btn-invisible\"\n                message=\"tmap:tm-focus-node\"\n                param=<<item>>>\n              <$view tiddler=<<item>> field=\"title\" />\n            </$button>\n          </$list>\n        </div>\n      </div>\n    </div>\n  </$reveal>\n</div>"
        },
        "$:/language/Buttons/TiddlyMap/Caption": {
            "title": "$:/language/Buttons/TiddlyMap/Caption",
            "text": "tiddlymap"
        },
        "$:/language/Buttons/TiddlyMap/Hint": {
            "title": "$:/language/Buttons/TiddlyMap/Hint",
            "text": "Toggle TiddlyMap actions"
        },
        "$:/plugins/felixhayashi/tiddlymap/misc/macros": {
            "title": "$:/plugins/felixhayashi/tiddlymap/misc/macros",
            "text": "\\define input-text(field, index, default, readonly)\n  <$reveal type=\"match\" text=\"\" default=\"$readonly$\">\n    <$edit-text tiddler=<<output>> field=\"$field$\" index=\"$index$\" type=\"text\" tag=\"input\" default=\"$default$\" />\n  </$reveal>\n  <$reveal type=\"nomatch\" text=\"\" default=\"$readonly$\">\n    <input type=\"text\" value=\"$default$\" readonly=\"true\" disabled=\"true\" />\n  </$reveal>\n\\end\n\n\\define input-button(field, index, default, default, label:\"Proceed\")\n  <div class=\"tmap-button-wrapper\">\n  <$button>$label$\n    <$action-setfield $tiddler=<<output>> $field=\"$field$\" index=\"$index$\" $value=\"$default$\" />\n  </$button>\n  </div>\n\\end\n\n\\define input-textarea(field, index, default, default)\n  <$edit-text tiddler=<<output>> field=\"$field$\" index=\"$index$\" autoHeight=\"no\" type=\"text\" tag=\"textarea\" default=\"$default$\" />\n\\end\n\n\\define input-checkbox(field, index, readonly, default)\n  <$reveal type=\"match\" text=\"\" default=\"$readonly$\">\n    <$checkbox\n        tiddler=<<output>>\n        field=\"$field$\"\n        index=\"$index$\"\n        checked=\"true\"\n        unchecked=\"false\"\n        default=\"$default$\" />\n  </$reveal>\n  <$reveal type=\"nomatch\" text=\"\" default=\"$readonly$\">\n    <input type=\"checkbox\" value=\"$default$\" readonly=\"true\" disabled=\"true\" />\n  </$reveal>\n\\end\n\n\\define input-multi-checkbox(selectFilter, invert:\"no\", default)\n  <div class=\"tmap-no-stretch\">\n  <$list\n      filter=\"$selectFilter$\"\n      emptyMessage=\"– This list contains no items –\">\n    <$checkbox\n        tiddler=<<output>>\n        tag=<<tmap \"splitAndSelect\" \"|\" \"0\">>>\n      <$view\n          tiddler=<<tmap \"splitAndSelect\" \"|\" \"1\">>\n          field=\"title\" />\n    </$checkbox><br />\n  </$list>\n  </div>\n\\end\n\n\\define input-select(field, index, selectFilter, default, nochoice)\n  <$select\n      tiddler=<<output>>\n      field=\"$field$\"\n      index=\"$index$\"\n      default=\"$default$\">\n    <$set name=\"nochoice\" value=\"$nochoice$\">\n      <$list filter=\"[<nochoice>regexp[.+]]\">\n        <option value=\"\"><b><<nochoice>></b></option>\n      </$list>\n    </$set>\n    <$list filter=\"$selectFilter$\">\n      <option value=<<tmap \"splitAndSelect\" \"|\" \"0\">> >\n        <$view tiddler=<<tmap \"splitAndSelect\" \"|\" \"1\">> field=\"title\" />   \n      </option>\n    </$list> \n  </$select>\n\\end\n\n\\define input-radio(field, index, selectFilter, default)\n  <$list filter=\"$selectFilter$\">\n    <$radio\n        tiddler=<<output>>\n        field=\"$field$\"\n        index=\"$index$\"\n        value=<<tmap \"splitAndSelect\" \"|\" \"0\">>>\n      <<tmap \"splitAndSelect\" \"|\" \"1\">>\n    </$radio><br />\n  </$list>\n\\end\n\n\\define tmap-row(title, field, index, type, descr, note, label, default, readonly, reset, selectFilter, nochoice, invert)\n  <tr>\n    <td class=\"tmap-title\">$title$:</td>\n    <td>\n      <div>\n        <<$type$\n          field:\"$field$\"\n          index:\"$index$\"\n          readonly:\"$readonly$\"\n          default:\"$default$\"\n          label:\"$label$\"\n          invert:\"$invert$\"\n          selectFilter:\"$selectFilter$\"\n          nochoice:\"$nochoice$\" >>\n        <$reveal type=\"match\" text=\"true\" default=\"$reset$\">\n          <$button>reset\n            <$action-setfield $tiddler=<<output>> $field=\"$field$\" $index=\"$index$\" $value=\"$default$\" />\n          </$button>\n        </$reveal>\n      </div>\n    </td>\n    <td>\n      <span class=\"tmap-description\">$descr$</span>\n      <$reveal type=\"nomatch\" text=\"\" default=\"$note$\">\n        <div class=\"tmap-note\">''Note:'' $note$</div>\n      </$reveal>\n    </td>\n  </tr>\n\\end\n\n\\define visConfiguration(inheritedList,\n                         extensionField,\n                         refreshTrigger,\n                         styleName:\"style\")\n                         \n  <fieldset><legend>Visjs configurations ($styleName$)</legend>\n    <table class=\"tmap-config-table\">\n      <tr>\n        <td>Reset:</td>\n        <td>\n          <div class=\"tmap-button-wrapper\">\n            <$button>Reset this style\n              <$action-setfield $field=\"$extensionField$\" $value=\"\" />\n              <$action-setfield $tiddler=\"$refreshTrigger$\" text=\"\" />\n            </$button>\n         </div>\n       </td>\n       <td>Press the reset button to clear the $styleName$</td>\n      </tr>\n    </table>\n    <$tmap-config\n        mode=\"manage-node-types\"\n        inherited=\"$inheritedList$\"\n        extension=\"$extensionField$\"\n        refresh-trigger=\"$refreshTrigger$\" />\n  </fieldset>\n\\end"
        },
        "$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder": {
            "title": "$:/plugins/felixhayashi/tiddlymap/misc/defaultViewHolder",
            "text": "Default"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes/tmap:neighbour": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/nodeTypes/tmap:neighbour",
            "description": "Neighbours are all nodes that are not part of the original set of nodes (\"matches\") but are connected (either outgoing or incoming) to a node of the original set.",
            "style": "{\"color\":\"#565656\"}"
        },
        "$:/plugins/felixhayashi/tiddlymap/hook/liveTab": {
            "title": "$:/plugins/felixhayashi/tiddlymap/hook/liveTab",
            "caption": "Live",
            "text": "\\define width() calc(100% - 15px)\n\n<div class=\"tmap-mobile-editor\">\n  <div class=\"tmap-flash-message tmap-warning\">\n    {{$:/core/images/info-button}}\n    The live tab is not displayed in mobile mode.\n  </div>\n</div>\n<div class=\"tmap-desktop-editor\">\n  <$set name=\"view\"\n      filter=\"[{$:/temp/tmap/currentTiddler}get[tmap.open-view]]\"\n      emptyValue=<<tmap \"option\" \"config.sys.liveTab.fallbackView\">>>\n  <div>\n    <$tiddlymap\n        view=<<view>>\n        click-to-use=\"false\"\n        refresh-triggers=\"$:/temp/tmap/currentTiddler\"\n        object-id=\"live_tab\">\n    </$tiddlymap>\n  </div>\n  </$set> \n</div>"
        },
        "$:/plugins/felixhayashi/tiddlymap/misc/quickConnectButton": {
            "tags": "$:/tags/ViewToolbar",
            "title": "$:/plugins/felixhayashi/tiddlymap/misc/quickConnectButton",
            "description": "{{$:/language/Buttons/TiddlyMap/Hint}}",
            "caption": "{{$:/plugins/felixhayashi/tiddlymap/icon}} {{$:/language/Buttons/TiddlyMap/Caption}}",
            "text": "\\define buttonClass() $(tv-config-toolbar-class)$ $(additional-classes)$\n\n\\define defConFiltr() [!suffix[tw-body:link]]\n\n\\define nonExistentItem()\n<<item>> <span style=\"color: #9E9E9E\">(will be created)</span>\n\\end\n\n\\define tiddlerSearchFilter()\n[!is[system]!has[draft.of]search:title{$:/temp/quickConnectSearch}sort[title]]\n\\end\n\n\\define showButton(state)\n<$button set=\"$:/temp/tiddlymap/quickConnectButton\"\n         setTo=\"$state$\" tooltip={{$:/language/Buttons/TiddlyMap/Hint}} \n         aria-label={{$:/language/Buttons/TiddlyMap/Caption}}\n         class=<<buttonClass>>>\n<$list filter=\"[<tv-config-toolbar-icons>prefix[yes]]\">{{$:/plugins/felixhayashi/tiddlymap/icon}}</$list>\n<$list filter=\"[<tv-config-toolbar-text>prefix[yes]]\">\n<span class=\"tc-btn-text\"><$text text={{$:/language/Buttons/TiddlyMap/Caption}}/></span>\n</$list>\n</$button>\n\\end\n\n\\define searchResults()\n<td>\n  <$button>⇦\n    <$action-sendmessage $message=\"tmap:tm-create-edge\"\n                         from=<<item>>\n                         to=<<currentTiddler>>\n                         force=\"true\"\n                         label={{$:/temp/quickConnectSearch/type}}\n                         view={{$:/temp/quickConnectSearch/view}} />\n  </$button>\n</td>\n<td>\n  <$button>⇨\n    <$action-sendmessage $message=\"tmap:tm-create-edge\"\n                         from=<<currentTiddler>>\n                         to=<<item>>\n                         force=\"true\"\n                         label={{$:/temp/quickConnectSearch/type}}\n                         view={{$:/temp/quickConnectSearch/view}} />\n  </$button>\n</td>\n<td>\n  <$list\n      filter=\"[<item>is[tiddler]]\"\n      emptyMessage=<<nonExistentItem>>>\n    <$view tiddler=<<item>> field=\"title\" />\n  </$list>\n</td>\n\\end\n\n\\define hidePopup()\n<$macrocall $name=\"showButton\" state=<<qualify>> />\n\\end\n\n\\define showPopup()\n<$set name=\"additional-classes\" value=\"tmap-active-button\"><$macrocall $name=\"showButton\" state=\"\" /></$set>\n<div class=\"tmap-quick-connect tc-reveal tc-popup\">\n  <div class=\"tc-drop-down\">\n    <div class=\"title\">{{$:/core/images/new-button}} ''Create connection''</div>\n    <table class=\"tmap-create-connection-table\">\n      <tr>\n        <td>Type:</td>\n        <td>\n          <$edit-text\n              tiddler=\"$:/temp/quickConnectSearch/type\"\n              field=\"text\"\n              type=\"text\"\n              tag=\"input\"\n              default=\"\" />\n          <$select tiddler=\"$:/temp/quickConnectSearch/type\" default=\"\">\n            <option></option>\n            <$list filter=<<tmap \"option\" \"selector.allEdgeTypesById\">>>\n              <option>{{!!title}}</option>\n            </$list>\n          </$select>\n        </td>\n      </tr>\n      <tr>\n        <td>Search:</td>\n        <td>\n          <$edit-text tiddler=\"$:/temp/quickConnectSearch\" type=\"text\" tag=\"input\" default=\"\"></$edit-text>\n          <small><$count filter=<<tiddlerSearchFilter>> /> results</small>\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <table class=\"tmap-very-small-list\">\n            <$list\n                filter=<<tiddlerSearchFilter>>\n                variable=\"item\">\n            <tr><<searchResults>></tr>\n            </$list>\n            <tr>\n            <$list filter=\"[{$:/temp/quickConnectSearch}regexp[.+]] -[is[tiddler]]\" variable=\"item\">\n              <<searchResults>>\n            </$list>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </table>\n    <div class=\"title\">{{$:/plugins/felixhayashi/tiddlymap/icon}} ''Existing Connections''\n      <span class=\"tmap-hide-links\">\n        <$checkbox\n            tiddler=\"$:/state/tmap/qc\"\n            field=\"filter\"\n            checked=<<defConFiltr>>\n            unchecked=\"\"\n            default=\"\"> hide links\n        </$checkbox>\n      </span></div>\n    <table class=\"tmap-connection-table\">\n<!--\n    <tr>\n      <th></th>\n      <th>Tiddler</th>\n      <th>Type</th>\n      <th></th>\n    </tr>\n-->\n    <$tmap-connections filter={{$:/state/tmap/qc!!filter}} emptyMessage=\"–\">\n      <tr>\n        <td><<directionSymbol>></td>\n        <td><$link to=<<neighbour>>><$view field=\"title\" /></$link></td>\n        <td><<edge.type>></td>\n        <td>\n          <$button\n              tooltip=\"Delete this connection\"\n              class=\"tc-btn-invisible\">{{$:/core/images/close-button}}\n            <$action-sendmessage $message=\"tmap:tm-remove-edge\"\n                id=<<edge.id>>\n                from=<<edge.from>>\n                to=<<edge.to>>\n                type=<<edge.type>> />\n          </$button>\n        </td>\n      </tr>\n    </$tmap-connections>\n    </table>   \n  </div>\n</div>\n\\end\n\n<$list filter=\"[all[current]is[tiddler]]\"><$list filter=\"[{$:/temp/tiddlymap/quickConnectButton}prefix<qualify>]\" variable=\"item\" emptyMessage=<<hidePopup>>><<showPopup>></$list></$list>"
        },
        "$:/plugins/felixhayashi/tiddlymap/hook/editor": {
            "caption": "Map",
            "tags": "$:/tags/SideBar",
            "title": "$:/plugins/felixhayashi/tiddlymap/hook/editor",
            "text": "\\define map(width, height, clickToUse)\n<$tiddlymap\n  class=\"tmap-sidebar-map-editor\"\n  editor=\"advanced\"\n  object-id=\"main_editor\"\n  click-to-use=\"$clickToUse$\"\n  width=\"$width$\"\n  height=\"$height$\"\n  bottom-spacing=\"35px\">\n</$tiddlymap>\n\\end\n\n\\define width() calc(100% - 15px)\n\n<div class=\"tmap-mobile-editor\">\n  <div class=\"tmap-flash-message tmap-warning\">\n    {{$:/core/images/info-button}}\n    The editor is not displayed in mobile mode.\n  </div>\n</div>\n<div class=\"tmap-desktop-editor\">\n  <$tiddlymap\n    class=\"tmap-sidebar-map-editor\"\n    editor=\"advanced\"\n    object-id=\"main_editor\"\n    click-to-use=\"false\"\n    width=<<width>>\n    bottom-spacing=\"35px\">\n  </$tiddlymap>\n</div>"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Default/filter/edges": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Default/filter/edges"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Default/filter/nodes": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Default/filter/nodes"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Default": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Default",
            "config.physics_mode": "false",
            "isview": "true"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Live View/filter/edges": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Live View/filter/edges",
            "filter": "[prefix[$:/plugins/felixhayashi/tiddlymap/graph/edgeTypes]]",
            "text": "\n\n"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Live View/filter/nodes": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Live View/filter/nodes",
            "filter": "[field:title{$:/temp/tmap/currentTiddler}]"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Live View": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Live View",
            "config.neighbourhood_scope": "1",
            "config.refresh-triggers": "$:/temp/tmap/currentTiddler",
            "config.physics_mode": "true",
            "isview": "true"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Graph search/filter/nodes": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Graph search/filter/nodes",
            "filter": "[!is[system]search{$:/temp/search}] [!is[system]search:tags{$:/temp/search}] [!is[system]search:text{$:/temp/search}limit[10]]"
        },
        "$:/plugins/felixhayashi/tiddlymap/graph/views/Graph search": {
            "title": "$:/plugins/felixhayashi/tiddlymap/graph/views/Graph search",
            "config.refresh-triggers": "$:/temp/search",
            "config.neighbourhood_scope": "1",
            "config.physics_mode": "true"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/widget/MapConfigWidget": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/widget/MapConfigWidget\ntype: application/javascript\nmodule-type: widget\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/core/modules/widgets/widget.js\").widget;var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction\").ViewAbstraction;var i=require(\"$:/plugins/felixhayashi/vis/vis.js\");var s=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var r=function(t,i){e.call(this);this.initialise(t,i);this.adapter=$tw.tmap.adapter;this.opt=$tw.tmap.opt;this.notify=$tw.tmap.notify;this.computeAttributes();s.addListeners({\"tmap:tm-clear-config\":function(){alert(\"nice\")}},this,this)};r.prototype=Object.create(e.prototype);r.prototype.render=function(e,t){if(!this.parentDomNode){this.parentDomNode=e;this.wrapper=document.createElement(\"div\");$tw.utils.addClass(this.wrapper,\"tmap-config-widget\");e.appendChild(this.wrapper)}if(this.network){var r=this.parentDomNode.getBoundingClientRect().height;this.parentDomNode.style[\"height\"]=r+\"px\";this.network.destroy()}var n=document.createElement(\"div\");this.wrapper.appendChild(n);this.refreshTrigger=this.getAttribute(\"refresh-trigger\");this.pipeTRef=this.getVariable(\"currentTiddler\");this.inheritedFields=$tw.utils.parseStringArray(this.getAttribute(\"inherited\"));this.extensionTField=this.getAttribute(\"extension\");this.mode=this.getAttribute(\"mode\");for(var o=0;o<this.inheritedFields.length;o++){var a=this.inheritedFields[o];var h=s.parseFieldData(this.pipeTRef,a,{});if(this.mode===\"manage-edge-types\"){if(!h.edges){h={edges:h}}}else if(this.mode===\"manage-node-types\"){if(!h.nodes){h={nodes:h}}}this.inherited=s.merge(this.inherited,h)}this.extension=s.parseFieldData(this.pipeTRef,this.extensionTField,{});if(this.mode===\"manage-edge-types\"){if(!this.extension.edges){this.extension={edges:this.extension}}}else if(this.mode===\"manage-node-types\"){if(!this.extension.nodes){this.extension={nodes:this.extension}}}this.changes=s.isTrue(this.getAttribute(\"save-only-changes\"))?{}:this.extension;var d={nodes:new i.DataSet([]),edges:new i.DataSet([])};this.network=new i.Network(n,d,{});this.reloadVisOptions();this.network.on(\"configChange\",this.handleConfigChange.bind(this));$tw.tmap.registry.push(this)};r.prototype.reloadVisOptions=function(){var e=s.merge({},this.inherited,this.extension);$tw.utils.extend(e,{configure:{enabled:true,showButton:false,filter:this.getOptionFilter(this.mode)}});this.network.setOptions(e)};r.prototype.handleConfigChange=function(e){this.changes=s.merge(this.changes,e);var t=s.merge({},this.changes);if(this.mode===\"manage-node-types\"){t=t[\"nodes\"]}if(this.mode===\"manage-edge-types\"){t=t[\"edges\"]}s.writeFieldData(this.pipeTRef,this.extensionTField,t)};r.prototype.getOptionFilter=function(e){var t={nodes:{borderWidth:true,borderWidthSelected:true,color:{background:true,border:true},font:{color:true,size:true},icon:true,labelHighlightBold:false,shadow:true,shape:true,shapeProperties:{borderDashes:true},size:true},edges:{arrows:true,color:true,dashes:true,font:true,labelHighlightBold:false,length:true,selfReferenceSize:false,shadow:true,smooth:true,width:true},interaction:{hideEdgesOnDrag:true,hideNodesOnDrag:true,tooltipDelay:true},layout:{hierarchical:false},manipulation:{initiallyActive:true},physics:{forceAtlas2Based:{gravitationalConstant:true,springLength:true,springConstant:true,damping:true,centralGravity:true}}};if(e===\"manage-edge-types\"){t={edges:t.edges}}else if(e===\"manage-node-types\"){t={nodes:t.nodes}}else{t.edges.arrows=false}return function(e,i){i=i.concat([e]);var s=t;for(var r=0,n=i.length;r<n;r++){if(s[i[r]]===true){return true}else if(s[i[r]]==null){return false}s=s[i[r]]}return false}};r.prototype.isZombieWidget=function(){return!document.body.contains(this.parentDomNode)};r.prototype.destruct=function(){if(this.network){this.network.destroy()}};r.prototype.refresh=function(e){if(this.isZombieWidget()||!this.network)return;if(e[this.refreshTrigger]){this.refreshSelf();return true}};r.prototype.setNull=function(e){for(var t in e){if(typeof e[t]==\"object\"){this.setNull(e[t])}else{e[t]=undefined}}};exports[\"tmap-config\"]=r})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/widget/MapConfigWidget",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/widget/connections": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/widget/connections\ntype: application/javascript\nmodule-type: widget\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/core/modules/widgets/widget.js\").widget;var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/EdgeType\").EdgeType;var r=function(t,r){e.call(this,t,r);this.utils=$tw.tmap.utils};r.prototype=Object.create(e.prototype);r.prototype.render=function(e,t){this.parentDomNode=e;this.computeAttributes();this.execute();this.renderChildren(e,t)};r.prototype.execute=function(){var e=[this.getVariable(\"currentTiddler\")];var t=this.getAttribute(\"filter\",\"\");var r={typeWL:$tw.tmap.adapter.getEdgeTypeWhiteList(t)};var i=$tw.tmap.adapter.getNeighbours(e,r);var s=i.nodes;var a=i.edges;var o=[];for(var n in a){var p=a[n];var h=s[p.to]||s[p.from];if(!h)continue;o.push({type:\"tmap-edgelistitem\",edge:p,typeWL:r.typeWL,neighbour:h,children:this.parseTreeNode.children})}if(!o.length){this.wasEmpty=true;o=this.getEmptyMessage()}else if(this.wasEmpty){this.removeChildDomNodes()}this.makeChildWidgets(o)};r.prototype.getEmptyMessage=function(){var e=this.wiki.parseText(\"text/vnd.tiddlywiki\",this.getAttribute(\"emptyMessage\",\"\"),{parseAsInline:true});return e?e.tree:[]};r.prototype.refresh=function(e){var t=this.computeAttributes();if(t.filter||t.emptyMessage){this.refreshSelf();return true}for(var r in e){if(!this.utils.isSystemOrDraft(r)){this.refreshSelf();return true}}return this.refreshChildren(e)};exports[\"tmap-connections\"]=r;var i=function(t,r){e.call(this,t,r);this.utils=$tw.tmap.utils};i.prototype=Object.create(e.prototype);i.prototype.execute=function(){var e=this.parseTreeNode;var t=$tw.tmap.indeces.tById[e.neighbour.id];var r=this.utils.flatten(e.edge);for(var i in r){if(typeof r[i]===\"string\"){this.setVariable(\"edge.\"+i,r[i])}}this.setVariable(\"currentTiddler\",t);this.setVariable(\"neighbour\",t);var s=$tw.tmap.indeces.allETy[r.type];var a=r.to===e.neighbour.id?\"to\":\"from\";var o=a;if(s.biArrow){o=\"bi\"}else{if(a===\"to\"&&s.invertedArrow){o=\"from\"}else if(a===\"from\"&&s.invertedArrow){o=\"to\"}}this.setVariable(\"direction\",o);this.setVariable(\"directionSymbol\",o===\"bi\"?\"⬄\":o===\"from\"?\"⇦\":\"⇨\");this.makeChildWidgets()};i.prototype.refresh=function(e){return this.refreshChildren(e)};exports[\"tmap-edgelistitem\"]=i})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/widget/connections",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/felixhayashi/tiddlymap/js/widget/MapWidget": {
            "text": "/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/widget/MapWidget\ntype: application/javascript\nmodule-type: widget\n\n@module TiddlyMap\n@preserve\n\n\\*/\n(function(){\"use strict\";var e=require(\"$:/core/modules/widgets/widget.js\").widget;var t=require(\"$:/plugins/felixhayashi/tiddlymap/js/utils\").utils;var i=require(\"$:/plugins/felixhayashi/tiddlymap/js/DialogManager\").DialogManager;var s=require(\"$:/plugins/felixhayashi/tiddlymap/js/CallbackManager\").CallbackManager;var a=require(\"$:/plugins/felixhayashi/tiddlymap/js/ViewAbstraction\").ViewAbstraction;var r=require(\"$:/plugins/felixhayashi/tiddlymap/js/EdgeType\").EdgeType;var o=require(\"$:/plugins/felixhayashi/tiddlymap/js/NodeType\").NodeType;var n=require(\"$:/plugins/felixhayashi/vis/vis.js\");var d=function(a,r){e.call(this,a,r);this.adapter=$tw.tmap.adapter;this.opt=$tw.tmap.opt;this.indeces=$tw.tmap.indeces;this.notify=$tw.tmap.notify;this.fsapi=t.getFullScreenApis();this.getAttr=this.getAttribute;this.isDebug=t.isTrue(this.opt.config.sys.debug,false);this.callbackManager=new s;this.dialogManager=new i(this.callbackManager,this);this.computeAttributes();this.editorMode=this.getAttr(\"editor\");this.clickToUse=t.isTrue(this.getAttr(\"click-to-use\"),true);this.objectId=this.getAttr(\"object-id\")||t.genUUID();if(this.editorMode){t.addListeners({\"tmap:tm-create-view\":this.handleCreateView,\"tmap:tm-rename-view\":this.handleRenameView,\"tmap:tm-delete-view\":this.handleDeleteView,\"tmap:tm-edit-view\":this.handleEditView,\"tmap:tm-store-position\":this.handleStorePositions,\"tmap:tm-edit-filters\":this.handleEditFilters,\"tmap:tm-generate-widget\":this.handleGenerateWidget,\"tmap:tm-save-canvas\":this.handleSaveCanvas},this,this)}t.addListeners({\"tmap:tm-focus-node\":this.handleFocusNode,\"tmap:tm-reset-focus\":this.repaintGraph},this,this);this.visHandlers={click:this.handleVisSingleClickEvent,doubleClick:this.handleVisDoubleClickEvent,stabilized:this.handleVisStabilizedEvent,dragStart:this.handleVisDragStart,selectNode:this.handleVisSelectNode,deselectNode:this.handleVisDeselectNode,dragEnd:this.handleVisDragEnd,oncontext:this.handleVisOnContext,beforeDrawing:this.handleVisBeforeDrawing,showPopup:this.handleVisShowPopup,stabilizationProgress:this.handleVisLoading,stabilizationIterationsDone:this.handleVisLoadingDone}};d.prototype=Object.create(e.prototype);d.prototype.handleConnectionEvent=function(e,i){var s={fromLabel:this.adapter.selectNodeById(e.from).label,toLabel:this.adapter.selectNodeById(e.to).label};var a=\"getEdgeType\";this.dialogManager.open(a,s,function(s,a){if(s){var o=t.getText(a);var n=this.view.getConfig(\"edge_type_namespace\");var d=t.hasSubString(o,\":\");o=new r((n&&!d?n:\"\")+o);if(!o.exists()){o.save();this.rebuildEdgeTypeWL()}e.type=o.id;var h=this.adapter.insertEdge(e);if(!this.edgeTypeWL[o.id]){var l={type:o.id,view:this.view.getLabel()};$tw.tmap.dialogManager.open(\"edgeNotVisible\",l)}this.preventFitAfterRebuild=true}if(typeof i===\"function\"){i(s)}})};d.prototype.checkForFreshInstall=function(){var e=this.opt.ref.sysMeta;if(!t.getEntry(e,\"showWelcomeMessage\",true))return;t.setEntry(e,\"showWelcomeMessage\",false);var i={};var s=\"welcome\";this.dialogManager.open(s,i,function(e,i){if(t.tiddlerExists(\"$:/plugins/felixhayashi/topstoryview\")){t.setText(\"$:/view\",\"top\");t.setText(\"$:/config/Navigation/openLinkFromInsideRiver\",\"above\");t.setText(\"$:/config/Navigation/openLinkFromOutsideRiver\",\"top\");t.touch(\"$:/plugins/felixhayashi/topstoryview\")}var s={view:this.opt.misc.defaultViewLabel};var a=this.adapter.insertNode({label:\"Have fun with\",x:0,y:0},s);var r=this.adapter.insertNode({label:\"TiddlyMap!!\",x:100,y:100},s);this.adapter.insertEdge({from:a.id,to:r.id})})};d.prototype.openStandardConfirmDialog=function(e,t){var i={message:t};this.dialogManager.open(\"getConfirmation\",i,e)};d.prototype.logger=function(e,t){if(this.isDebug){var i=Array.prototype.slice.call(arguments,1);i.unshift(\"@\"+this.objectId.toUpperCase());i.unshift(e);$tw.tmap.logger.apply(this,i)}};d.prototype.render=function(e,i){this.parentDomNode=e;this.domNode=this.document.createElement(\"div\");e.insertBefore(this.domNode,i);this.domNode.style[\"width\"]=this.getAttr(\"width\",\"100%\");this.registerClassNames(this.domNode);this.viewHolderRef=this.getViewHolderRef();this.view=this.getView();this.graphBarDomNode=this.document.createElement(\"div\");$tw.utils.addClass(this.graphBarDomNode,\"tmap-topbar\");this.domNode.appendChild(this.graphBarDomNode);this.graphDomNode=this.document.createElement(\"div\");this.domNode.appendChild(this.graphDomNode);$tw.utils.addClass(this.graphDomNode,\"tmap-vis-graph\");if(t.isPreviewed(this)||this.domNode.isTiddlyWikiFakeDom){$tw.utils.addClass(this.domNode,\"tmap-static-mode\");this.renderPreview(this.graphBarDomNode,this.graphDomNode)}else{this.addLoadingBar(this.domNode);this.renderFullWidget(this.graphBarDomNode,this.graphDomNode)}};d.prototype.renderPreview=function(e,i){var s=this.view.getRoot()+\"/snapshot\";var a=t.getTiddler(s);var r=this.document.createElement(\"span\");r.innerHTML=this.view.getLabel();r.className=\"tmap-view-label\";e.appendChild(r);if(a){this.makeChildWidgets([{type:\"transclude\",attributes:{tiddler:{type:\"string\",value:s}}}]);this.renderChildren(i,null)}else{$tw.utils.addClass(i,\"tmap-graph-placeholder\")}};d.prototype.renderFullWidget=function(e,i){this.sidebar=t.getFirstElementByClassName(\"tc-sidebar-scrollable\");this.isContainedInSidebar=this.sidebar&&!this.domNode.isTiddlyWikiFakeDom&&this.sidebar.contains(this.domNode);this.doFitAfterStabilize=true;this.preventFitAfterRebuild=false;this.initAndRenderEditorBar(e);this.initAndRenderGraph(i);$tw.tmap.registry.push(this);this.reloadRefreshTriggers();this.checkForFreshInstall()};d.prototype.registerClassNames=function(e){var i=$tw.utils.addClass;i(e,\"tmap-widget\");if(this.clickToUse){i(e,\"tmap-click-to-use\")}if(this.getAttr(\"editor\")===\"advanced\"){i(e,\"tmap-advanced-editor\")}if(this.getAttr(\"design\")===\"plain\"){i(e,\"tmap-plain-design\")}if(!t.isTrue(this.getAttr(\"show-buttons\"),true)){i(e,\"tmap-no-buttons\")}if(this.getAttr(\"class\")){i(e,this.getAttr(\"class\"))}};d.prototype.addLoadingBar=function(e){this.graphLoadingBarDomNode=this.document.createElement(\"div\");$tw.utils.addClass(this.graphLoadingBarDomNode,\"tmap-loading-bar\");e.appendChild(this.graphLoadingBarDomNode)};d.prototype.initAndRenderEditorBar=function(e){this.rebuildEditorBar()};d.prototype.rebuildEditorBar=function(){var e=this.view;var t={isViewBound:String(this.isViewBound()),viewRoot:e.getRoot(),viewLabel:e.getLabel(),viewHolder:this.getViewHolderRef(),edgeFilter:e.getPaths().edgeFilter,allEdgesFilter:this.opt.selector.allEdgeTypes,neighScopeBtnClass:\"tmap-neigh-scope-button\"+(e.isEnabled(\"neighbourhood_scope\")?\" \"+\"tmap-active-button\":\"\")};for(var i in t){this.setVariable(i,t[i])}var s={type:\"tiddler\",attributes:{tiddler:{type:\"string\",value:e.getRoot()}},children:[]};if(this.editorMode===\"advanced\"){s.children.push({type:\"transclude\",attributes:{tiddler:{type:\"string\",value:this.opt.ref.graphBar}}})}else{s.children.push({type:\"element\",tag:\"span\",attributes:{\"class\":{type:\"string\",value:\"tmap-view-label\"}},children:[{type:\"text\",text:e.getLabel()}]})}s.children.push({type:\"transclude\",attributes:{tiddler:{type:\"string\",value:this.opt.ref.focusButton}}});this.makeChildWidgets([s]);this.renderChildren(this.graphBarDomNode,this.graphBarDomNode.firstChild)};d.prototype.refresh=function(e){if(!this.network||this.isZombieWidget()||t.isPreviewed(this)){return}var i=this.computeAttributes();var s=i[\"view\"];var a=s&&s!==this.view.getLabel();if(a){this.setView(s)}var r=false;var o=false;var n=false;var d={};this.callbackManager.handleChanges(e);if(this.isViewSwitched(e)||a){this.logger(\"warn\",\"View switched\");this.view=this.getView(true);this.reloadRefreshTriggers();r=true;n=true}else{var h=this.view.refresh(e);if(h.length&&!this.ignoreNextViewModification){this.logger(\"warn\",\"View modified\",h);this.reloadBackgroundImage();r=true;o=true;d.resetOptions=true;d.resetEdgeTypeWL=true;if(!this.preventFitAfterRebuild){d.resetFocus={delay:0,duration:0}}}else{if(this.hasChangedGlobals(e)){o=true;d.resetOptions=true}if(this.hasChangedEdgeTypes(e)){o=true;d.resetEdgeTypeWL=true}if(!o&&this.hasChangedNodeTypes(e)){o=true}if(!o&&this.hasChangedElements(e)){o=true}}}if(n){this.initAndRenderGraph(this.graphDomNode)}else if(o){this.rebuildGraph(d)}if(r){this.removeChildDomNodes();this.rebuildEditorBar()}else{this.refreshChildren(e)}this.ignoreNextViewModification=false;return false};d.prototype.reloadRefreshTriggers=function(){this.callbackManager.remove(this.refreshTriggers);var e=this.getAttr(\"refresh-triggers\")||this.view.getConfig(\"refresh-triggers\");this.refreshTriggers=$tw.utils.parseStringArray(e)||[];this.logger(\"debug\",\"Registering refresh trigger\",this.refreshTriggers);var t=this.handleTriggeredRefresh.bind(this);for(var i=this.refreshTriggers.length;i--;){this.callbackManager.add(this.refreshTriggers[i],t,false)}};d.prototype.rebuildGraph=function(e){if(t.isPreviewed(this))return;this.logger(\"debug\",\"Rebuilding graph\");e=e||{};this.hasNetworkStabilized=false;if(e.resetData){this.graphData.edges.clear();this.graphData.nodes.clear();this.graphData.edgesById=null;this.graphData.nodesById=null}if(e.resetOptions){this.reloadOptions()}if(!this.view.isEnabled(\"physics_mode\")){var i=this.graphOptions.physics;i[i.solver].centralGravity=.015}if(!e.resetFocus){this.doFitAfterStabilize=false}this.rebuildGraphData({resetEdgeTypeWL:e.resetEdgeTypeWL});if(!t.hasElements(this.graphData.nodesById)){return}this.network.stabilize();if(e.resetFocus&&!this.preventFitAfterRebuild){this.doFitAfterStabilize=true;this.fitGraph(e.resetFocus.delay,e.resetFocus.duration)}this.preventFitAfterRebuild=false};d.prototype.getContainer=function(){return this.domNode};d.prototype.reloadOptions=function(){this.graphOptions=this.getGraphOptions();this.network.setOptions(this.graphOptions)};d.prototype.rebuildGraphData=function(e){$tw.tmap.start(\"Reloading Network\");e=e||{};if(!this.edgeTypeWL||e.resetEdgeTypeWL){this.rebuildEdgeTypeWL()}var i=this.adapter.getGraph({view:this.view,edgeTypeWL:this.edgeTypeWL});var s=i.nodes;var a=i.edges;this.graphData.nodes=this.getRefreshedDataSet(s,this.graphData.nodesById,this.graphData.nodes);this.graphData.edges=this.getRefreshedDataSet(a,this.graphData.edgesById,this.graphData.edges);this.graphData.nodesById=s;this.graphData.edgesById=a;t.setField(\"$:/temp/tmap/nodes/\"+this.view.getLabel(),\"list\",this.adapter.getTiddlersById(s));$tw.tmap.stop(\"Reloading Network\");return this.graphData};d.prototype.rebuildEdgeTypeWL=function(){var e=this.view.getEdgeFilter(\"compiled\");this.edgeTypeWL=this.adapter.getEdgeTypeWhiteList(e);return this.edgeTypeWL};d.prototype.isViewBound=function(){return t.startsWith(this.getViewHolderRef(),this.opt.path.localHolders)};d.prototype.isViewSwitched=function(e){return e[this.getViewHolderRef()]};d.prototype.hasChangedNodeTypes=function(e){return t.hasPropWithPrefix(e,this.opt.path.nodeTypes)};d.prototype.hasChangedGlobals=function(e){return t.hasPropWithPrefix(e,this.opt.path.options)};d.prototype.hasChangedEdgeTypes=function(e){if(t.hasPropWithPrefix(e,this.opt.path.edgeTypes)){return!!t.getMatches(this.view.getEdgeFilter(\"compiled\"),Object.keys(e))}};d.prototype.hasChangedElements=function(e){var i=[];for(var s in e){if(t.isSystemOrDraft(s))continue;if(this.graphData.nodesById[this.adapter.getId(s)]){return true}if(e[s].modified){i.push(s)}}if(i.length){var a=this.view.getNodeFilter(\"compiled\");var r=t.getMatches(a,i);return!!r.length}};d.prototype.initAndRenderGraph=function(e){if(this.network){this.destruct()}this.logger(\"info\",\"Initializing and rendering the graph\");this.handleResizeEvent=this.handleResizeEvent.bind(this);this.handleClickEvent=this.handleClickEvent.bind(this);this.handleFullScreenChange=this.handleFullScreenChange.bind(this);window.addEventListener(\"resize\",this.handleResizeEvent,false);if(!this.isContainedInSidebar){this.callbackManager.add(\"$:/state/sidebar\",this.handleResizeEvent)}window.addEventListener(\"click\",this.handleClickEvent,false);if(this.fsapi){window.addEventListener(this.fsapi[\"_fullscreenChange\"],this.handleFullScreenChange,false)}this.handleResizeEvent();this.graphOptions=this.getGraphOptions();this.edgeTypeWL=null;this.graphData={nodes:new n.DataSet,edges:new n.DataSet,nodesById:t.getDataMap(),edgesById:t.getDataMap()};this.network=new n.Network(this.graphDomNode,this.graphData,this.graphOptions);this.canvas=this.graphDomNode.getElementsByTagName(\"canvas\")[0];this.visNetworkDomNode=this.graphDomNode.firstElementChild;this.addGraphKeyBindings(this.graphDomNode);for(var i in this.visHandlers){this.network.on(i,this.visHandlers[i].bind(this))}this.addGraphButtons({\"fullscreen-button\":function(){this.handleToggleFullscreen(false)}});if(this.isContainedInSidebar){this.addGraphButtons({\"halfscreen-button\":function(){this.handleToggleFullscreen(true)}})}this.reloadBackgroundImage();this.visNetworkDomNode.focus();this.rebuildGraph({resetFocus:{delay:0,duration:0}})};d.prototype.addGraphKeyBindings=function(e){this.visNetworkDomNode.tabIndex=0;this.graphKeydownHandler=function(e){if(e.keyCode===46){this.handleRemoveElements(this.network.getSelection())}else if(e.ctrlKey){if(e.keyCode===88){if(this.editorMode){this.handleAddNodesToClipboard(\"move\")}else{this.notify(\"Map is read only!\")}}else if(e.keyCode===67){this.handleAddNodesToClipboard(\"copy\")}else if(e.keyCode===86){this.handlePasteNodesFromClipboard()}else if(e.keyCode===65){var t=Object.keys(this.graphData.nodesById);this.network.selectNodes(t)}e.preventDefault()}}.bind(this);e.addEventListener(\"keydown\",this.graphKeydownHandler,true)};d.prototype.handlePasteNodesFromClipboard=function(){if(!this.editorMode||this.view.isLiveView()){this.notify(\"Map is read only!\");return}if($tw.tmap.clipBoard){if($tw.tmap.clipBoard.type===\"nodes\"){var e=$tw.tmap.clipBoard.nodes;var t=Object.keys(e);if(t.length){for(var i in e){if(this.graphData.nodesById[i])continue;this.view.addNodeToView(e[i]);this.graphData.nodes.update({id:i})}this.network.selectNodes(t);this.notify(\"pasted \"+t.length+\" nodes into map.\")}return}}this.notify(\"TiddlyMap clipboad is empty!\")};d.prototype.handleAddNodesToClipboard=function(e){var t=this.network.getSelectedNodes();if(!t.length)return;$tw.tmap.clipBoard={type:\"nodes\",nodes:this.graphData.nodes.get(t,{returnType:\"Object\"})};this.notify(\"Copied \"+t.length+\" nodes to clipboard\");if(e===\"move\"){for(var i=t.length;i--;){this.view.removeNodeFromFilter(t[i])}}};d.prototype.isMobileMode=function(){var e=t.getText(this.opt.ref.sidebarBreakpoint,960);return window.innerWidth<=parseInt(e)};d.prototype.getGraphOptions=function(){var e=this.opt.config.vis;var i=t.parseJSON(this.view.getConfig(\"vis\"));var s=t.merge({},e,i);s.clickToUse=this.clickToUse;s.manipulation.enabled=!!this.editorMode;s.manipulation.deleteNode=function(e,t){this.handleRemoveElements(e);this.resetVisManipulationBar(t)}.bind(this);s.manipulation.deleteEdge=function(e,t){this.handleRemoveElements(e);this.resetVisManipulationBar(t)}.bind(this);s.manipulation.addEdge=function(e,t){this.handleConnectionEvent(e);this.resetVisManipulationBar(t)}.bind(this);s.manipulation.addNode=function(e,t){this.handleInsertNode(e);this.resetVisManipulationBar(t)}.bind(this);s.manipulation.editNode=function(e,t){this.handleEditNode(e);this.resetVisManipulationBar(t)}.bind(this);s.manipulation.editEdge=false;var a=s.physics;a[a.solver]=a[a.solver]||{};a.stabilization.iterations=this.view.getStabilizationIterations();this.logger(\"debug\",\"Loaded graph options\",s);return s};d.prototype.resetVisManipulationBar=function(e){if(e)e(null);this.network.disableEditMode();this.network.enableEditMode()};d.prototype.handleCreateView=function(){var e={view:this.view.getLabel()};this.dialogManager.open(\"createView\",e,function(e,i){if(!e)return;var s=t.getText(i);var r=new a(s);if(r.exists()&&r.isLocked()){this.notify(\"Forbidden!\");return}if(i&&i.fields.clone){r=new a(s,true,this.view)}else{r=new a(s,true)}this.setView(r)})};d.prototype.handleRenameView=function(){if(!this.view.isLocked()){var e=this.view.getReferences();var i={count:e.length.toString(),filter:t.joinAndWrap(e,\"[[\",\"]]\")};this.dialogManager.open(\"getViewName\",i,function(e,i){if(e){var s=t.getText(i);var r=new a(s);if(!s||r.isLocked()){this.notify(\"Forbidden!\")}else{this.view.rename(s);this.setView(this.view)}}})}else{this.notify(\"Forbidden!\")}};d.prototype.handleEditView=function(){var e=JSON.stringify(this.opt.config.vis);var i=this.graphData;var s={view:this.view.getLabel(),createdOn:this.view.getCreationDate(true),numberOfNodes:Object.keys(i.nodesById).length.toString(),numberOfEdges:Object.keys(i.edgesById).length.toString(),dialog:{preselects:$tw.utils.extend({},this.view.getConfig(),{\"vis-inherited\":e})}};var a=\"configureView\";this.dialogManager.open(a,s,function(e,i){if(!e)return;var s=t.getPropertiesByPrefix(i.fields,\"config.\",true);var a=this.view.getConfig(\"background_image\");this.view.setConfig(s);if(s[\"physics_mode\"]&&!this.view.isEnabled(\"physics_mode\")){this.handleStorePositions()}var r=this.view.getConfig(\"background_image\");if(r&&r!==a){this.notify(\"Background changed! You may need to zoom out a bit.\")}})};d.prototype.handleSaveCanvas=function(){var e=\"$:/temp/tmap/snapshot\";var i=this.createAndSaveSnapshot(e);var s=t.getSnapshotTitle(this.view.getLabel(),\"png\");var a={dialog:{snapshot:e,width:this.canvas.width.toString(),height:this.canvas.height.toString(),preselects:{name:s,action:\"download\"}}};var r=\"saveCanvas\";this.dialogManager.open(r,a,function(i,a){if(!i)return;s=a.fields.name||s;var r=a.fields.action;if(r===\"download\"){this.handleDownloadSnapshot(s)}else if(r===\"wiki\"){t.cp(e,s,true);this.dispatchEvent({type:\"tm-navigate\",navigateTo:s})}else if(r===\"placeholder\"){this.view.addPlaceholder(e)}$tw.wiki.deleteTiddler(\"$:/temp/tmap/snapshot\")})};d.prototype.handleDownloadSnapshot=function(e){var i=this.document.createElement(\"a\");var s=this.view.getLabel();i.download=e||t.getSnapshotTitle(s,\"png\");i.href=this.getSnapshot();var a=new MouseEvent(\"click\");i.dispatchEvent(a)};d.prototype.createAndSaveSnapshot=function(e){var t=this.view.getLabel();var i=e||this.view.getRoot()+\"/snapshot\";$tw.wiki.addTiddler(new $tw.Tiddler({title:i,type:\"image/png\",text:this.getSnapshot(true),modified:new Date}));return i};d.prototype.getSnapshot=function(e){var i=this.canvas.toDataURL(\"image/png\");return e?t.getWithoutPrefix(i,\"data:image/png;base64,\"):i};d.prototype.handleDeleteView=function(){var e=this.view.getLabel();if(this.view.isLocked()){this.notify(\"Forbidden!\");return}var i=this.view.getReferences();if(i.length){var s={count:i.length.toString(),filter:t.joinAndWrap(i,\"[[\",\"]]\")};this.dialogManager.open(\"cannotDeleteViewDialog\",s);return}var a=\"You are about to delete the view \"+\"''\"+e+\"'' (no tiddler currently references this view).\";this.openStandardConfirmDialog(function(t){if(t){this.view.destroy();this.setView(this.opt.misc.defaultViewLabel);this.logger(\"debug\",'view \"'+e+'\" deleted ');this.notify('view \"'+e+'\" deleted ')}},a)};d.prototype.handleTriggeredRefresh=function(e){this.logger(\"log\",e,\"Triggered a refresh\");if(this.objectId===\"live_tab\"){var i=t.getTiddler(t.getText(e));if(i){var s=i.fields[\"tmap.open-view\"]||this.opt.config.sys.liveTab.fallbackView;if(s&&s!==this.view.getLabel()){this.setView(s);return}}}this.rebuildGraph({resetFocus:{delay:1e3,duration:1e3}})};d.prototype.handleRemoveElements=function(e){if(e.nodes.length){this.handleRemoveNodes(e.nodes)}else if(e.edges.length){this.handleRemoveEdges(e.edges)}this.resetVisManipulationBar()};d.prototype.handleRemoveEdges=function(e){this.adapter.deleteEdges(this.graphData.edges.get(e));this.notify(\"edge\"+(e.length>1?\"s\":\"\")+\" removed\");this.preventFitAfterRebuild=true};d.prototype.handleRemoveNodes=function(e){var t=this.adapter.getTiddlersById(e);var i={count:e.length.toString(),tiddlers:$tw.utils.stringifyList(t),dialog:{preselects:{\"delete-from\":\"filter\"}}};var s=\"deleteNodeDialog\";this.dialogManager.open(s,i,function(t,i){if(!t)return;if(i.fields[\"delete-from\"]===\"system\"){this.adapter.deleteNodes(e);var s=e.length}else{var s=0;for(var a=e.length;a--;){var r=this.view.removeNodeFromFilter(e[a]);if(r)s++}}this.preventFitAfterRebuild=true;this.notify(\"Removed \"+s+\" of \"+e.length+\" from \"+i.fields[\"delete-from\"])})};d.prototype.handleFullScreenChange=function(){if(this.fsapi&&this.enlargedMode===\"fullscreen\"&&!document[this.fsapi[\"_fullscreenElement\"]]){this.handleToggleFullscreen()}};d.prototype.handleToggleFullscreen=function(e){this.logger(\"log\",\"Toggled graph enlargement\");if(this.enlargedMode){this.network.setOptions({clickToUse:this.clickToUse});t.findAndRemoveClassNames([\"tmap-\"+this.enlargedMode,\"tmap-has-\"+this.enlargedMode+\"-child\"]);if(this.enlargedMode===\"fullscreen\"){document[this.fsapi[\"_exitFullscreen\"]]()}this.enlargedMode=null}else{if(!e&&!this.fsapi){this.dialogManager.open(\"fullscreenNotSupported\");return}this.enlargedMode=this.isContainedInSidebar&&e?\"halfscreen\":\"fullscreen\";$tw.utils.addClass(this.domNode,\"tmap-\"+this.enlargedMode);var i=this.isContainedInSidebar?this.sidebar:t.getFirstElementByClassName(\"tc-story-river\");$tw.utils.addClass(i,\"tmap-has-\"+this.enlargedMode+\"-child\");if(this.enlargedMode===\"fullscreen\"){this.document.documentElement[this.fsapi[\"_requestFullscreen\"]](Element.ALLOW_KEYBOARD_INPUT)}this.notify(\"Activated \"+this.enlargedMode+\" mode\");this.network.setOptions({clickToUse:false})}this.handleResizeEvent()};d.prototype.handleGenerateWidget=function(e){$tw.rootWidget.dispatchEvent({type:\"tmap:tm-generate-widget\",paramObject:{view:this.view.getLabel()}})};d.prototype.handleStorePositions=function(e){var t=this.view.getNodeData();var i=this.network.getPositions();for(var s in i){t[s]=t[s]||{};t[s].x=i[s].x;t[s].y=i[s].y}this.view.saveNodeData(t);this.ignoreNextViewModification=true;if(e){this.notify(\"positions stored\")}};d.prototype.handleEditFilters=function(){var e=t.getPrettyFilter(this.view.getNodeFilter(\"expression\"));var i=t.getPrettyFilter(this.view.getEdgeFilter(\"expression\"));var s={view:this.view.getLabel(),dialog:{preselects:{prettyNodeFilter:e,prettyEdgeFilter:i}}};this.dialogManager.open(\"editFilters\",s,function(e,i){if(!e)return;this.view.setNodeFilter(t.getField(i,\"prettyNodeFilter\",\"\"));this.view.setEdgeFilter(t.getField(i,\"prettyEdgeFilter\",\"\"))})};d.prototype.handleVisStabilizedEvent=function(e){if(this.hasNetworkStabilized)return;this.hasNetworkStabilized=true;this.logger(\"log\",\"Network stabilized after\",e.iterations,\"iterations\");this.view.setStabilizationIterations(e.iterations);if(!this.view.isEnabled(\"physics_mode\")){var t=this.graphData.nodesById;var i=[];for(var s in t){if(!t[s].x){i.push(s)}}if(i.length){this.setNodesMoveable(i,false);this.notify(i.length+\" nodes were added to the graph\");this.doFitAfterStabilize=true}var a=this.graphOptions.physics;a[a.solver].centralGravity=0;this.network.setOptions(this.graphOptions)}if(this.doFitAfterStabilize){this.doFitAfterStabilize=false;this.fitGraph(1e3,1e3)}};d.prototype.handleFocusNode=function(e){this.network.focus(this.adapter.getId(e.param),{scale:1.5,animation:true})};d.prototype.isZombieWidget=function(){if(this.domNode.isTiddlyWikiFakeDom===true){return true}else{return!this.document.body.contains(this.getContainer())}};d.prototype.fitGraph=function(e,t){window.clearTimeout(this.activeFitTimeout);t=t||0;e=e||0;var i=function(){if(this.isZombieWidget())return;this.network.redraw();this.network.fit({animation:{duration:t,easingFunction:\"easeOutQuart\"}})};this.activeFitTimeout=window.setTimeout(i.bind(this),e)};d.prototype.handleInsertNode=function(e){var i=\"getNodeTitle\";this.dialogManager.open(i,null,function(i,s){if(!i)return;var a=t.getText(s);if(t.tiddlerExists(a)){if(t.isMatch(a,this.view.getNodeFilter(\"compiled\"))){this.notify(\"Node already exists\");return}else{e=this.adapter.makeNode(a,e);this.view.addNodeToView(e)}}else{e.label=a;this.adapter.insertNode(e,{view:this.view,editNodeOnCreate:false})}this.preventFitAfterRebuild=true})};d.prototype.handleEditNode=function(e){var i=$tw.tmap.indeces.tById[e.id];var s=t.getTiddler(i);var a=JSON.stringify(this.opt.config.vis);var r=this.view.getConfig(\"vis\");var o={};o[e.id]=e;var n=this.adapter.getInheritedNodeStyles(o);var d=JSON.stringify(n[i]);var h=JSON.stringify(t.merge({},{color:s.fields[\"color\"]},t.parseJSON(s.fields[\"tmap.style\"])));var l=this.view.getLabel();var p={id:e.id};var g=this.view.getNodeData(e.id,true)||{};delete g.x;delete g.y;var f={view:l,tiddler:s.fields.title,tidColor:s.fields[\"color\"],tidIcon:s.fields[this.opt.field.nodeIcon]||s.fields[\"tmap.fa-icon\"],tidLabelField:\"global.\"+this.opt.field.nodeLabel,tidIconField:\"global.\"+this.opt.field.nodeIcon,dialog:{preselects:{\"inherited-global-default-style\":a,\"inherited-local-default-style\":r,\"inherited-group-styles\":d,\"global.tmap.style\":h,\"local-node-style\":JSON.stringify(g)}}};var u=function(e,t,i){for(var s=i.length;s--;){f.dialog.preselects[e+\".\"+i[s]]=t[i[s]]||\"\"}};u(\"local\",g,[\"label\",\"tw-icon\",\"fa-icon\",\"open-view\"]);u(\"global\",s.fields,[this.opt.field.nodeLabel,this.opt.field.nodeIcon,\"tmap.fa-icon\",\"tmap.open-view\"]);this.dialogManager.open(\"editNode\",f,function(s,a){if(!s)return;var r=a.fields;var o=t.getPropertiesByPrefix(r,\"global.\",true);for(var n in o){t.setField(i,n,o[n]||undefined)}var d=t.getPropertiesByPrefix(r,\"local.\",true);var h=t.parseJSON(r[\"local-node-style\"],{});for(var n in d){h[n]=d[n]||undefined}this.view.saveNodeStyle(e.id,h);this.preventFitAfterRebuild=true})};d.prototype.handleVisSingleClickEvent=function(e){var i=t.isTrue(this.opt.config.sys.singleClickMode);if(i&&!this.editorMode){this.handleOpenMapElementEvent(e)}};d.prototype.handleVisDoubleClickEvent=function(e){if(e.nodes.length||e.edges.length){if(this.editorMode||!t.isTrue(this.opt.config.sys.singleClickMode)){this.handleOpenMapElementEvent(e)}}else{if(this.editorMode){this.handleInsertNode(e.pointer.canvas)}}};d.prototype.handleOpenMapElementEvent=function(e){if(e.nodes.length){var t=this.graphData.nodesById[e.nodes[0]];if(t[\"open-view\"]){this.setView(t[\"open-view\"])}else{this.openTiddlerWithId(e.nodes[0])}}else if(e.edges.length){this.logger(\"debug\",\"Clicked on an Edge\");var i=this.graphData.edgesById[e.edges[0]].type;this.handleEditEdgeType(i)}};d.prototype.handleEditEdgeType=function(e){if(!this.editorMode)return;var t=this.opt.config.sys.edgeClickBehaviour;if(t!==\"manager\")return;$tw.rootWidget.dispatchEvent({type:\"tmap:tm-manage-edge-types\",paramObject:{type:e}})};d.prototype.handleResizeEvent=function(e){if(this.isZombieWidget())return;var t=this.getAttr(\"height\");if(!t&&this.isContainedInSidebar){var i=this.domNode.getBoundingClientRect().top;var s=parseInt(this.getAttr(\"bottom-spacing\",25));var a=window.innerHeight-i;t=a-s+\"px\"}this.domNode.style[\"height\"]=t||\"300px\";this.repaintGraph()};d.prototype.handleClickEvent=function(e){if(this.isZombieWidget()||!this.network)return;if(!this.graphDomNode.contains(e.target)){var t=this.network.getSelection();if(t.nodes.length||t.edges.length){this.logger(\"debug\",\"Clicked outside; deselecting nodes/edges\");this.network.selectNodes([]);this.resetVisManipulationBar()}}else{this.visNetworkDomNode.focus()}};d.prototype.handleVisOnContext=function(e){};d.prototype.handleVisSelectNode=function(e){this.assignSelectStyle(e.nodes)};d.prototype.assignSelectStyle=function(e){var i=this.graphOptions.nodes.color;for(var s=e.length;s--;){var a=e[s];var r=this.graphData.nodesById[a];this.graphData.nodes.update({id:a,color:{highlight:t.merge({},i,r.color)}})}};d.prototype.handleVisDeselectNode=function(e){};d.prototype.handleVisShowPopup=function(e){};d.prototype.handleVisDragEnd=function(e){if(!e.nodes.length)return;this.setNodesMoveable(e.nodes,false)};d.prototype.handleVisBeforeDrawing=function(e){if(this.backgroundImage){e.drawImage(this.backgroundImage,0,0)}};d.prototype.handleVisLoading=function(e){this.graphLoadingBarDomNode.style.display=\"block\";var t=\"Loading \"+Math.round(e.iterations/e.total*100)+\"%\";this.graphLoadingBarDomNode.innerHTML=t};d.prototype.handleVisLoadingDone=function(e){this.graphLoadingBarDomNode.style.display=\"none\"};d.prototype.handleVisDragStart=function(e){if(e.nodes.length){this.assignSelectStyle(e.nodes);this.setNodesMoveable(e.nodes,true)}};d.prototype.destruct=function(){window.removeEventListener(\"resize\",this.handleResizeEvent);window.removeEventListener(\"click\",this.handleClickEvent);window.removeEventListener(\"click\",this.handleFullScreenChange);this.graphDomNode.removeEventListener(\"keyup\",this.graphKeydownHandler,true);if(this.network){this.network.destroy();this.network=null}};d.prototype.openTiddlerWithId=function(e){var i=$tw.tmap.indeces.tById[e];this.logger(\"debug\",\"Opening tiddler\",i,\"with id\",e);if(this.enlargedMode===\"fullscreen\"){var s=this.wiki.findDraft(i);var a=!!s;if(!a){var r=\"tm-edit-tiddler\";this.dispatchEvent({type:r,tiddlerTitle:i});s=this.wiki.findDraft(i)}var o={draftTRef:s};var n=\"fullscreenTiddlerEditor\";this.dialogManager.open(n,o,function(e,r){if(e){var o=\"tm-save-tiddler\";this.dispatchEvent({type:o,tiddlerTitle:s})}else if(!a){t.deleteTiddlers([s])}var o=\"tm-close-tiddler\";this.dispatchEvent({type:o,tiddlerTitle:i})})}else{this.dispatchEvent({type:\"tm-navigate\",navigateTo:i})}};d.prototype.getViewHolderRef=function(){if(this.viewHolderRef){return this.viewHolderRef}this.logger(\"info\",\"Retrieving or generating the view holder reference\");var e=this.getAttr(\"view\");if(e){this.logger(\"log\",'User wants to bind view \"'+e+'\" to graph');var i=this.opt.path.views+\"/\"+e;if(this.wiki.getTiddler(i)){var s=this.opt.path.localHolders+\"/\"+t.genUUID();this.logger(\"log\",'Created an independent temporary view holder \"'+s+'\"');t.setText(s,i);this.logger(\"log\",'View \"'+i+'\" inserted into independend holder')}else{this.logger(\"log\",'View \"'+e+'\" does not exist')}}if(typeof s===\"undefined\"){this.logger(\"log\",\"Using default (global) view holder\");var s=this.opt.ref.defaultViewHolder}return s};d.prototype.setView=function(e,t){if(!e)return;var i=new a(e).getLabel();t=t||this.viewHolderRef;this.logger(\"info\",\"Inserting view '\"+i+\"' into holder '\"+t+\"'\");this.wiki.addTiddler(new $tw.Tiddler({title:t,text:i}))};d.prototype.getView=function(e){if(!e&&this.view){return this.view}var i=this.getViewHolderRef();var s=new a(t.getText(i));this.logger(\"info\",'Retrieved view \"'+s.getLabel()+'\" from holder \"'+i+'\"');if(!s.exists()){this.logger(\"debug\",'Warning: View \"'+s.getLabel()+\"\\\" doesn't exist. Default is used instead.\");s=new a(\"Default\")}return s};d.prototype.reloadBackgroundImage=function(e){this.backgroundImage=null;var i=this.view.getConfig(\"background_image\");var s=t.getTiddler(i);if(!s&&!i)return;var a=new Image;var r=function(e){a.src=e};a.onload=function(){this.backgroundImage=a;this.repaintGraph();if(e){this.notify(e)}}.bind(this);if(s){var o=s.fields[\"_canonical_uri\"];if(o){t.getImgFromWeb(o,r)}else if(s.fields.text){var n=$tw.utils.makeDataUri(s.fields.text,s.fields.type);a.src=n}}else if(i){t.getImgFromWeb(i,r)}};d.prototype.getRefreshedDataSet=function(e,i,s){if(!s){return new n.DataSet(t.getValues(e))}if(i)s.remove(Object.keys(i));s.update(t.getValues(e));return s};d.prototype.repaintGraph=function(){var e=this.fsapi&&document[this.fsapi[\"_fullscreenElement\"]];if(this.network&&(!e||e&&this.enlargedMode)){this.logger(\"info\",\"Repainting the whole graph\");this.network.redraw();this.fitGraph(0,1e3)}};d.prototype.setGraphButtonEnabled=function(e,i){var s=\"vis-button\"+\" \"+\"tmap-\"+e;var a=t.getFirstElementByClassName(s,this.domNode);$tw.utils.toggleClass(a,\"tmap-button-enabled\",i)};d.prototype.dialogPostProcessor=function(){this.network.selectNodes([]);this.resetVisManipulationBar()};d.prototype.setNodesMoveable=function(e,t){if(!e||!e.length||this.view.isEnabled(\"physics_mode\")){return}var i=[];var s=!t;for(var a=e.length;a--;){i.push({id:e[a],fixed:{x:s,y:s}})}this.graphData.nodes.update(i);if(s){this.logger(\"debug\",\"Fixing\",i.length,\"nodes\");this.handleStorePositions()}};d.prototype.addGraphButtons=function(e){var i=t.getFirstElementByClassName(\"vis-navigation\",this.domNode);for(var s in e){var a=this.document.createElement(\"div\");\na.className=\"vis-button \"+\" \"+\"tmap-\"+s;a.addEventListener(\"click\",e[s].bind(this),false);i.appendChild(a);this.setGraphButtonEnabled(s,true)}};if($tw.boot.tasks.trapErrors){var h=window.onerror;window.onerror=function(e,t,i){if(e.indexOf(\"NS_ERROR_NOT_AVAILABLE\")!==-1&&t==\"$:/plugins/felixhayashi/vis/vis.js\"){console.error(\"Strange firefox related vis.js error (see #125)\",arguments)}else if(e.indexOf(\"Permission denied to access property\")!==-1){console.error(\"Strange firefox related vis.js error (see #163)\",arguments)}else if(h){h.apply(this,arguments)}}}exports.tiddlymap=d})();",
            "title": "$:/plugins/felixhayashi/tiddlymap/js/widget/MapWidget",
            "type": "application/javascript",
            "module-type": "widget"
        }
    }
}