created: 20151013085605792
modified: 20151015024020550
tags: 
title: Portfolio Mapping
tmap.id: 596b30a0-5d0a-464b-8a50-89f51547ef9f
type: text/vnd.tiddlywiki

As an organisation adapts products to its market, the structure, responsibilities and membership of its teams must evolve. In a traditional organisation such "reorgs" are always traumatic, at least as stressful and risky as a big product release. Their motivation and outcomes depend on unpredictable political forces as the various [[managers]] play [[zero sum games]] to keep their bonuses. Like renovating a house, a reorg that begins with an alteration to the KPI of a single manager may have huge, long-lasting and unforeseeable ramifications.

As XSCALE emphasises autonomy at squad and stream levels, metric and analytic feedback inform its evolution. This is called [[Management By Numbers]]. What numbers and who does the managing? 

# [[Behavior Mapping]] generates a [[Features & Themes Matrix]]
# [[Business Bingo]] tells us how much we should budget per [[Feature]] in [[Feature Points]]
# [[Release Refactoring]] says which of these [[Feature]]s will be required by a particular date.

''Therefore,''

* Take the cohort of [[Feature]]s that result from step 3, and apply the costs from step 2. This is the total burn that will be possible if we have sufficient product definition and delivery competence to deliver it all. 

* Now in the [[Features & Themes Matrix]] apply the feature cost to every theme for which the feature has a tick in the box. Total those numbers per theme and call this the ''Required Resource'' If a theme has all ticks its number would be the same as the total burn for the release, and if it had no ticks its number would be zero.

* Now trace each theme in the matrix back to the subject matter expertise needed to cover that theme and count the number of [[Feature Points]] worth of that expertise actually available. This generates a second number - the total expertise available per theme. Call that the ''Available Resource''. In a portfolio with plenty of database architects, for example, the Available Resource in a theme "schema changes" would exceed its Required Resource. If the portfolio has too few DBAs, Required will be greater than Available.

* Themes where there's insufficient Available Resource are solution constraints that represent limits on the portfolio's ability to actually deliver the feature set planned by [[Release Refactoring]]. These constraints represent a concrete target for [[Human Resources]] to address by hiring or training. But those processes take time, so in the meanwhile the [[Portfolio Squad]] should conduct a new round of [[Release Refactoring]] that takes resource constraints per theme into account.

* Once these resource constraints have been eliminated, the least available resources are used as the seeds of an arrangement of squads. It is, however, possible that even when there's no individual resource constraint, there are cycles of theme dependency between features that would induce similar dependency cycles between squads. The simplest method to deal with this is to factor out [[Technical Feature]]s that encapsulate the cycle, and tailor a squad that specifically deals with it.

* In general it's highly desirable that each [[Portfolio]] reserves some extra resource to use as a pool to ease [[Portfolio Mapping]] constraints. This pool is best formed into an [[R&D Squad]].