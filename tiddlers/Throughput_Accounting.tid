created: 20160526122245529
modified: 20180425065354232
tags: 
title: Throughput Accounting
tmap.id: 6e82d96d-386d-4432-abd7-7b93254a7010
type: text/vnd.tiddlywiki

[[Throughput Accounting|http://www.informit.com/articles/article.aspx?p=169495]] is an alternative to [[Cost Accounting]] that replaces the supposedly constant "cost per unit of revenue" with a function of various system constraints, each of which may be varied by development of new system features. 

Cost accountants consistently fail to determine a fixed cost per unit of revenue delivery using measures like [[Lines of Code]] and [[Function Point]]s. LoC doesn't equate to cost per unit revenue because [[Refactoring|Merciless Refactoring]] reduces LoC while increasing [[ROI]] and lowering [[Technical Debt]] and tehereby [[Operating Expense]]. Function Points are even worse because, unless it contributes to improvements in a bottlenecked constraint, a new function can have no effect on system throughput.

Throughput Accounting began with the work of [[Eli Goldratt|http://goldratt.co.uk/resources/throughput_accounting/index.html]] on the [[Theory of Constraints]]. It bases prioritisation decisions on real bottom line [[ROI]]. Its fundamental premise is that the goal of any business must be to maximise

> ''Throughput = [[Operating Expense]] + [[Net Profit]]''

Where OpEx specifically excludes variable costs and only represents the cost of the capability to open the system bottleneck. Here's an explanation of why this makes sense:

<iframe width="560" height="315" src="https://www.youtube.com/embed/95poI68g7-E" frameborder="0" allowfullscreen></iframe>

