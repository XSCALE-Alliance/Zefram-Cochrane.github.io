created: 20151108195553972
modified: 20160524012159826
title: Simple Design
tmap.id: ff1175cf-14d4-4982-af0d-5d54b30452fa
type: text/vnd.tiddlywiki

The word design is from Latin 'de-' meaning remove and 'signere' meaning mark.

[img[http://xscale.wiki/images/bull.png]]

Systems Design means removing non-valuable system behaviours by adding [[solution constraint]]s iteration by iteration until the [[System Interface]] evolves into what {{Steve Jobs}} called //''the elegance of minimum. Not form and function; how it works''//.  {{Ron Jeffries}} describes it as the process of //''adding value by removing that without''//. 

There are many schools of design each with their own [[Pattern Language]]s. XSCALE isn't concerned with the design language specifics, but the application of Agile principles to enable reliable evolution of design into products that obtain Jobs' "elegance". To achieve this we need a design process that accommodates:

* [[Whole Board Thinking]] without which key solution constraints will be missed, leading to over complex designs that fail to meet a user's [[basic expectations]], and time is lost pursuing blind alleys in [[solution space]] that are in fact precluded by known constraints. 

* The inherent tension between the desire to perfect product design and the desire to ship imperfect products early enough to open markets and refine design by learning from market analytics. This is not an either/or choice - both are essential.

* The closure of Solution constraints as [[Acceptance Criteria]]. We can represent these on a [[Feature-Theme Matrix]] with Themes representing categories of [[solution constraint]] and Features embodied in [[Spike|Spike Solution]]s. Then [[Behavior Mapping]] makes certain we take all design perspectives into account. 

* Iterative [[Refactoring]] is the essential Agile design minimisation process, generating [[System Interface]]s without unnecessary feature duplication or clunky, modal [[UX]]. 

* We assume [[Impact Mapping]], [[User Journey]]s and similar have established a clear definition of the {{Critical Number}}s that would enable successful definition and delivery of an Epic. These numbers scope and act as a starter set of [[solution constraint]]s.

''Therefore,''

Simple Design is a tight iterative loop for learning solution constraints and evaluating design options. It is usually carried out during a release's [[Sprint Zero]] by a squad that includes technical authorities, design authorities and business authorities. This may be just the [[Product Squad]], or it may include technical portfolio members who are normally involved in delivery or support activities. 

# Design [[stories|Story]] each take one of three forms
#* [[Spike|Spike Solution]]s to be evaluated to discover [[solution constraint]]s and test customer behavior.
#* [[Analytic]]s to be implemented to evaluate the behavioral response of customers to the spikes.
#* [[Refactoring]]s to simplify and integrate the features of multiple spikes to form the basis of another iteration. 
#  A weekly sprint cycle where 
#* Sprint planning applies [[Behavior Mapping]] and [[Business Bingo]] to determine priorities for the design stories. Stories that are invalidated by known constraints may be removed from the backlog without reaching "done".
#* Sprint reviews add, modify or remove solution constraints as [[Theme]]s based on learnings, They also assess whether the [[last responsible moment]] has arrived to settle on a design.
#* Sprint retros focus on rate of learning and enable participants to put new ideas for different design options on the table so long as they at least satisfy the Epic's starter set of constraints.
# Some design choices must be ratified by the [[Stream Squad]]:
#* If the [[last responsible moment]] has come and there are still no acceptable design options, the [[Stream Squad]] will have to do some [[Release Refactoring]], possibly deprioritising the corresponding Epic and repurposing the [[Product Squad]]. 
#* If subject matter expertise in solution space, design space or problem space is lacking, the matter should be raised with the [[Stream Squad]]
#* The [[Stream Squad]] should also be notified if the preferred design option can't integrate with present architectural norms or the portfolio's [[Non-Functional Envelope]]. Unless this is the case, full responsibility for approving the design rests autonomously with the [[Product Squad]].
